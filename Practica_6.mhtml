From: <Saved by Blink>
Snapshot-Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html
Subject: Practica_6
Date: Tue, 3 Dec 2024 19:56:16 +0100
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----"


------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/html
Content-ID: <frame-E2BF4DACCCCC53D1BFE34A9E69B37197@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns=3D"http://www.w3.=
org/1999/xhtml" lang=3D"es-ES" xml:lang=3D"es-ES"><head><meta http-equiv=3D=
"Content-Type" content=3D"text/html; charset=3DUTF-8"><link rel=3D"styleshe=
et" type=3D"text/css" href=3D"cid:css-f7d02242-fdd6-40e4-bdb2-f5c0272ba3c0@=
mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-5=
904ea3b-ea7d-422c-b7e6-05b8c41ef623@mhtml.blink" />
 =20
  <meta http-equiv=3D"Content-Style-Type" content=3D"text/css">
  <meta name=3D"generator" content=3D"pandoc">
  <title>Practica_6</title>
 =20
 =20

<!-- Begin PROG3 Header -->
<!--
	Design: Read Only by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.ne=
t/license)
-->

  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1">
  <!--[if lte IE 8]><script src=3D"../../../theme/readonly/assets/js/ie/htm=
l5shiv.js"></script><![endif]-->
  <link rel=3D"stylesheet" href=3D"https://www.dlsi.ua.es/asignaturas/prog3=
/theme/readonly/assets/css/main.css">
  <!--[if lte IE 8]><link rel=3D"stylesheet" href=3D"../../../theme/readonl=
y/assets/css/ie8.css" /><![endif]-->


  <link rel=3D"stylesheet" href=3D"https://www.dlsi.ua.es/asignaturas/prog3=
/desde-2022-2023/web/p6/css/style.css">
<!-- End PROG3 Header -->

</head>
<body>

<!-- PROG3 Body Header -->
<!-- Header -->
			<section id=3D"header">
				<header>
					<span class=3D"image avatar"><img src=3D"https://www.dlsi.ua.es/asigna=
turas/prog3/theme/readonly/images/avatar.jpg" alt=3D""></span>
					<h1 id=3D"logo"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/de=
sde-2022-2023/web/p6/Practica_6.html#" style=3D"-webkit-tap-highlight-color=
: rgba(0, 0, 0, 0);">Programaci=C3=B3n 3</a></h1>
					<p></p>
				</header>
				<nav id=3D"nav">
					<ul>

						<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/index.html" c=
lass=3D"active" style=3D"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">In=
icio</a></li>
						<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-20=
23/web/p1/Practica_1.html" style=3D"-webkit-tap-highlight-color: rgba(0, 0,=
 0, 0);">Pr=C3=A1ctica 1</a> Introducci=C3=B3n a la POO</li>
	    	        	<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p2/Practica_2.html" style=3D"-webkit-tap-highlight-color: r=
gba(0, 0, 0, 0);">Pr=C3=A1ctica 2</a>Relaciones y excepciones</li>
							<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2=
023/web/p3/Practica_3.html" style=3D"-webkit-tap-highlight-color: rgba(0, 0=
, 0, 0);">Pr=C3=A1ctica 3</a>Herencia de implementaci=C3=B3n</li>
                		<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/d=
esde-2022-2023/web/p4/Practica_4.html" style=3D"-webkit-tap-highlight-color=
: rgba(0, 0, 0, 0);">Pr=C3=A1ctica 4</a>Polimorfismo y herencia</li>
                		<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/d=
esde-2022-2023/web/p5/Practica_5.html" style=3D"-webkit-tap-highlight-color=
: rgba(0, 0, 0, 0);">Pr=C3=A1ctica 5</a>Herencia de interfaz</li>
                		<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/d=
esde-2022-2023/web/p6/Practica_6.html" style=3D"-webkit-tap-highlight-color=
: rgba(0, 0, 0, 0);">Pr=C3=A1ctica 6</a>Genericidad y reflexi=C3=B3n</li>
					</ul>

				</nav>

				<footer>
<!--
					<ul class=3D"icons">
						<li><a href=3D"#" class=3D"icon fa-twitter"><span class=3D"label">Twi=
tter</span></a></li>
						<li><a href=3D"#" class=3D"icon fa-facebook"><span class=3D"label">Fa=
cebook</span></a></li>
						<li><a href=3D"#" class=3D"icon fa-instagram"><span class=3D"label">I=
nstagram</span></a></li>
						<li><a href=3D"#" class=3D"icon fa-github"><span class=3D"label">Gith=
ub</span></a></li>
						<li><a href=3D"#" class=3D"icon fa-envelope"><span class=3D"label">Em=
ail</span></a></li>
					</ul>
-->
				</footer>
			</section>

		<!-- Wrapper -->
			<div id=3D"wrapper">

				<!-- Main -->
					<div id=3D"main">
                                                        <!-- One -->
							<section id=3D"one">
								<div class=3D"container">
									<header class=3D"major">
										<h2>Programaci=C3=B3n 3</h2>
                                                                           =
     <p>Universidad de Alicante,
										2024=E2=80=932025</p>

									</header>
								</div>
							</section>

<!-- End PROG3 Body Header -->

<section id=3D"body-section" class=3D"level1 container" style=3D"text-align=
:left;">

<div id=3D"TOC">
<ul>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#pr%C3%A1ctica-6" id=3D"toc-pr=C3=A1ctica-6">Pr=C3=A1cti=
ca 6</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#sixth-programming-assignment-generics-reflection" id=3D=
"toc-sixth-programming-assignment-generics-reflection">Genericidad y
reflexi=C3=B3n</a>
<ul>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#modelo" id=3D"toc-modelo">Modelo</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#algoritmos" id=3D"toc-algoritmos">Algoritmos</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#aplicaci%C3%B3n-de-la-librer%C3%ADa-mapa-de-red" id=3D"=
toc-aplicaci=C3=B3n-de-la-librer=C3=ADa-mapa-de-red">Aplicaci=C3=B3n de la
librer=C3=ADa: mapa de red</a></li>
</ul></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#tareas-a-realizar" id=3D"toc-tareas-a-realizar">Tareas =
a
realizar</a>
<ul>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#introducci%C3%B3n-de-genericidad" id=3D"toc-introducci=
=C3=B3n-de-genericidad">Introducci=C3=B3n de
genericidad</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#uso-de-la-reflexi%C3%B3n-en-java" id=3D"toc-uso-de-la-r=
eflexi=C3=B3n-en-java">Uso de la reflexi=C3=B3n en
Java</a></li>
</ul></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#documentation" id=3D"toc-documentation">Documentaci=C3=
=B3n</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#requisitos-m%C3%ADnimos-para-evaluar-la-pr%C3%A1ctica" =
id=3D"toc-requisitos-m=C3=ADnimos-para-evaluar-la-pr=C3=A1ctica">Requisitos=
 m=C3=ADnimos
para evaluar la pr=C3=A1ctica</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#entrega-de-la-pr%C3%A1ctica" id=3D"toc-entrega-de-la-pr=
=C3=A1ctica">Entrega de la pr=C3=A1ctica</a></li>
<li><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/Practica_6.html#evaluaci%C3%B3n" id=3D"toc-evaluaci=C3=B3n">Evaluaci=C3=
=B3n&nbsp;</a></li>
</ul>
</div>


<section id=3D"pr=C3=A1ctica-6" class=3D"level2 pagetitle box">
<h2 class=3D"pagetitle box">Pr=C3=A1ctica 6</h2>
<table>
<tbody>
<tr class=3D"odd">
<td style=3D"text-align: left;">Peso relativo de est=C3=A1 pr=C3=A1ctica en=
 la nota
de pr=C3=A1cticas: 15%</td>
</tr>
</tbody>
</table>
</section>
<section id=3D"sixth-programming-assignment-generics-reflection" class=3D"l=
evel2">
<h2>Genericidad y reflexi=C3=B3n</h2>
<p>En esta pr=C3=A1ctica se trabajar=C3=A1 la genericidad en Java a trav=C3=
=A9s de las
actividades que se describen a continuaci=C3=B3n. Tambi=C3=A9n haremos uso =
de
algunos mecamismos de reflexi=C3=B3n de Java.</p>
<p><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/=
p6/Practica_6_files/proyecto_eclipse_grafo_generics.tgz">En
este enlace</a> se proporciona un proyecto Eclipse con la implementaci=C3=
=B3n
de una clase grafo (<code>Graph</code>), detallada en el UML adjunto,
que s=C3=B3lo es capaz de contener cadenas tanto en los nodos como en las
aristas. Se incluyen tambi=C3=A9n una serie de algoritmos que usan el grafo
cuyas referencias al grafo se deber=C3=A1n actualizar debidamente. El
proyecto contiene una lista de pruebas unitarias adecuadas para
comprobar el funcionamiento de cada clase. Actualmente el proyecto tiene
errores de compilaci=C3=B3n a falta de que realices las tareas que indicamo=
s
en este enunciado.</p>
<p>(Si necesitas recordar qu=C3=A9 es un grafo, <a href=3D"https://www.dlsi=
.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6_files/mini-intro=
duccion-a-grafos.svg">aqu=C3=AD tienes una
mini-introducci=C3=B3n</a>)</p>
<section id=3D"qu=C3=A9-tengo-que-hacer" class=3D"level4">
<h4>=C2=BFQu=C3=A9 tengo que hacer?</h4>
<p>Tu trabajo en esta pr=C3=A1ctica consiste en pasar un modelo realizado s=
in
genericidad a otro m=C3=A1s adecuado que s=C3=AD la use. Tambi=C3=A9n se a=
=C3=B1adir=C3=A1 c=C3=B3digo
basado en reflexi=C3=B3n de Java para realizar unas operaciones que de otra
forma no se podr=C3=ADan abordar.</p>
<p>Una vez hayas entendido la construcci=C3=B3n orientada a objetos del
modelo y los algoritmos que describimos a continuaci=C3=B3n, debes seguir l=
os
pasos descritos en <a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#tareas-a-realizar">Tareas a
realizar</a>.</p>
</section>
<section id=3D"modelo" class=3D"level3">
<h3>Modelo</h3>
<p><img src=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/img/p6_string_graph_model.svg" alt=3D"UML de partida: modelo" width=3D"=
800"></p>
<p>Un grafo (<code>Graph</code>) est=C3=A1 compuesto por un conjunto de nod=
os
(<code>Node</code>) y aristas (<code>Edge</code>). Los nodos son objetos
que tienen un identificador num=C3=A9rico y contienen algo (en el UML, una
cadena) y las aristas conectan nodos entre s=C3=AD, de manera que podemos
=E2=80=98recorrer=E2=80=99 los nodos del grafo atravesando aristas. Una ari=
sta tiene
siempre un nodo de partida y otro de llegada (son unidireccionales). Los
nodos pueden o no tener aristas entrantes y/o salientes. Las aristas
tambi=C3=A9n tienen un identificador n=C3=BAmerico y un contenido (en el UM=
L
anterior, una cadena).</p>
<p>La etiqueta <code>{unique}</code> que ves en la relaci=C3=B3n entre
<code>Graph</code> y <code>Node</code> o <code>Edge</code> indica que un
grafo s=C3=B3lo puede contener el mismo nodo o arista una vez. Para eso la
relaci=C3=B3n se debe implementar como un conjunto
(<code>Set&lt;T&gt;</code>) de nodos/aristas. A diferencia de una lista
(<code>List&lt;T&gt;</code>), un conjunto no pueden contener elementos
duplicados. Estudia la parte dedicada a los <a href=3D"https://www.dlsi.ua.=
es/asignaturas/prog3/jcf_facil.html">Set</a>
en nuestra web, para saber c=C3=B3mo usarlos (son muy parecidos a las
listas).</p>
<p>Para poder usar adecuadamente los conjuntos (<code>Set</code>) es
necesario poder distinguir de manera un=C3=ADvoca los nodos y las aristas.
Para ello se ha a=C3=B1adido un identificador =C3=BAnico a cada uno mediant=
e la
clase <em>singleton</em> <code>IDGenerator</code> (una clase
<em>singleton</em> es aquella de la que s=C3=B3lo tenemos una instancia en
toda la aplicaci=C3=B3n =E2=80=93 puedes ver el c=C3=B3digo fuente para com=
probar c=C3=B3mo
conseguimos implementar esa restricci=C3=B3n). Para unificar la funcionalid=
ad
de mantener un identificador =C3=BAnico as=C3=AD como una etiqueta, tanto
<code>Node</code> como <code>Edge</code> heredan de la clase abstracta
<code>GraphObject</code> que implementa la interfaz
<code>IIdentifiable</code>. En este dise=C3=B1o de partida, todas las
etiquetas son de tipo cadena.</p>
<p>Los nodos no saben con qu=C3=A9 aristas se relacionan. El grafo s=C3=AD =
dispone
de esa informaci=C3=B3n. En cambio las aristas s=C3=AD conocen sus nodos or=
igen y
destino.</p>
<p>En una aplicaci=C3=B3n que utilice la librer=C3=ADa podemos tener instan=
ciados
varios grafos. En los m=C3=A9todos de <code>Graph</code> que reciben como
par=C3=A1metro un nodo se comprueba que =C3=A9ste pertenece al grafo al que=
 se
invoca, lanzando <code>NodeNotFoundException</code> en caso de que no
pertenezca.</p>
<p>Los nombres y signaturas de cada m=C3=A9todo mostrado en el UML son
suficientemente descriptivos como para entender su significado. No los
describimos con m=C3=A1s detalle porque no es necesario para realizar la
pr=C3=A1ctica. En cualquier caso, la documentaci=C3=B3n <em>javadoc</em> in=
cluida
en el c=C3=B3digo fuente contiene suficiente informaci=C3=B3n para quien la=
 quiera
consultar.</p>
</section>
<section id=3D"algoritmos" class=3D"level3">
<h3>Algoritmos</h3>
<p><img src=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/img/p6_string_graph_algorithms.svg" alt=3D"UML de partida: algoritmos" =
width=3D"1200"></p>
<p>Se han creado una serie de algoritmos que utilizan el modelo
anteriormente expuesto. La clase <code>Algorithms</code> centraliza el
acceso a los distintos algoritmos. Por ello, cada algoritmo est=C3=A1
definido con visibilidad de paquete. Puedes ver que hay elementos no
optimizados en esa clase.</p>
<section id=3D"dotexporter" class=3D"level4">
<h4>DotExporter</h4>
<p>Dentro de los algoritmos, la clase <code>DotExporter</code> es capaz
de exportar el grafo en formato <em>DOT</em> para <a href=3D"https://graphv=
iz.org/">GraphViz</a>. Hay multitud de visores de
este formato en la web, por ejemplo <a href=3D"https://edotor.net/">=C3=A9s=
te</a>.</p>
<p>En <code>DotExporter</code> se usan las clases <a href=3D"https://docs.o=
racle.com/javase/8/docs/api/java/io/File.html"><code>File</code></a>
como referencia a un fichero en disco, y <a href=3D"https://docs.oracle.com=
/javase/8/docs/api/java/io/PrintStream.html"><code>PrintStream</code></a>
como abstracci=C3=B3n que encapsula el comportamiento de escribir distintos
tipos de datos como <code>char</code>, <code>String</code>,
<code>int</code>, etc. en archivos.</p>
<p>Como la exportaci=C3=B3n es a fichero, para entender mejor el c=C3=B3dig=
o de
esta clase puedes consultar esta <a href=3D"https://www.dlsi.ua.es//asignat=
uras/prog3/java_io.html">introducci=C3=B3n
al sistema de entrada/salida de Java</a>, tambi=C3=A9n accesible desde la
p=C3=A1gina principal de la asignatura.</p>
<p>La clase <code>DFS</code> recorre el grafo a partir de un nodo dado
usando el <em><a href=3D"https://en.wikipedia.org/wiki/Depth-first_search">=
algoritmo
DFS</a></em>, retornando la secuencia de visita de nodos como copia
profunda para respetar la composici=C3=B3n entre <code>Graph</code> y
<code>Node</code>.</p>
<p>Finalmente, la clase <code>DijkstraShortestPath</code> realiza el
c=C3=A1lculo del camino m=C3=A1s corto desde un nodo dado al resto de nodos=
 del
grafo con el m=C3=A9todo <code>compute</code>,utilizando el <em><a href=3D"=
https://es.wikipedia.org/wiki/Algoritmo_de_Dijkstra">algoritmo de
Dijkstra</a></em>. Luego podemos invocar a
<code>getComputedDistances</code> pas=C3=A1ndole como par=C3=A1metro ese no=
do.</p>
<p><code>DijkstraShortestPath</code> se apoya en la clase interna
<code>DijkstraShortestPath.Cost</code> para poder comparar pesos en el
c=C3=A1lculos de las distancias entre nodos. El problema que tenemos es que
esos pesos est=C3=A1n almacenados en las aristas con un tipo de dato cadena=
.
En la implementaci=C3=B3n que proporcionamos, en el m=C3=A9todo
<strong><code>DijkstraShortestPath.processNeighbours()</code>, l=C3=ADneas
157-158,</strong> se realiza una conversi=C3=B3n de tipo cadena a entero pa=
ra
realizar los c=C3=A1lculos, lo que no es lo m=C3=A1s recomendable y m=C3=A1=
s adelante
solucionaremos:</p>
<div class=3D"sourceCode" id=3D"cb1"><pre class=3D"sourceCode java"><code c=
lass=3D"sourceCode java"><span id=3D"cb1-1"><a href=3D"https://www.dlsi.ua.=
es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html#cb1-1" aria-hid=
den=3D"true" tabindex=3D"-1"></a><span class=3D"dt">int</span> edgeDistance=
 <span class=3D"op">=3D</span> <span class=3D"bu">Integer</span><span class=
=3D"op">.</span><span class=3D"fu">parseInt</span><span class=3D"op">(</spa=
n>edge<span class=3D"op">.</span><span class=3D"fu">getLabel</span><span cl=
ass=3D"op">());</span> </span>
<span id=3D"cb1-2"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb1-2" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"dt">int</span> newDistance <span class=3D"op">=3D</s=
pan> dist<span class=3D"op">.</span><span class=3D"fu">get</span><span clas=
s=3D"op">(</span>source<span class=3D"op">)</span> <span class=3D"op">+</sp=
an> edgeDistance<span class=3D"op">;</span></span></code></pre></div>
<p><em>Nota: no podemos comparar directamente las cadenas porque se
har=C3=ADa una comparaci=C3=B3n lexicogr=C3=A1fica y =E2=80=9C9=E2=80=9D se=
 comparar=C3=ADa como menor que
=E2=80=9C10=E2=80=9D</em>.</p>
</section>
</section>
<section id=3D"aplicaci=C3=B3n-de-la-librer=C3=ADa-mapa-de-red" class=3D"le=
vel3">
<h3>Aplicaci=C3=B3n de la librer=C3=ADa: mapa de red</h3>
<p>Como aplicaci=C3=B3n de la librer=C3=ADa hemos creado una representaci=
=C3=B3n en
grafo de un mapa de red muy sencillo con el c=C3=A1lculo simple de latencia=
s
de red basado en el camino m=C3=A1s corto entre nodos del grafo.</p>
<p><img src=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/img/p6_network.svg" alt=3D"Network model" width=3D"900"></p>
<p>El problema que tenemos con la representaci=C3=B3n actual del grafo de
nuestra librer=C3=ADa es que al almacenar s=C3=B3lo cadenas nos es dif=C3=
=ADcil guardar
adecuadamente los dispositivos (<code>Device</code>) como nodos del
grafo porque perdemos informaci=C3=B3n.</p>
<p>Por ello, deber=C3=A1s a=C3=B1adir genericidad al grafo para que admita
cualquier tipo de dato tanto en las etiquetas como en los nodos. La
implementaci=C3=B3n completa (que no debes modificar) de este <em>mapa de
red</em> que se proporciona en el proyecto base de Eclipse ya usa el
resultado de esa conversi=C3=B3n del grafo a tipos gen=C3=A9ricos, por lo q=
ue no
compilar=C3=A1 hasta que a=C3=B1adas correctamente la genericidad.</p>
<hr>
</section>
</section>
<section id=3D"tareas-a-realizar" class=3D"level2">
<h2>Tareas a realizar</h2>
<p>Deber=C3=A1s modificar el c=C3=B3digo para realizar la pr=C3=A1ctica sob=
re el <a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/w=
eb/p6/Practica_6_files/proyecto_eclipse_grafo_generics.tgz">proyecto que
proporcionamos</a>. =C3=89ste ya contiene el c=C3=B3digo del mapa de red
anteriomente descrito y pruebas unitarias que deber=C3=A1n funcionar una ve=
z
acabes de realizar todas las tareas que describimos a continuaci=C3=B3n.</p=
>
<section id=3D"introducci=C3=B3n-de-genericidad" class=3D"level3">
<h3>Introducci=C3=B3n de genericidad</h3>
<p>Para ampliar las posibilidades de esta peque=C3=B1a librer=C3=ADa de gra=
fos,
evitar soluciones como la conversi=C3=B3n de tipo cadena a entero usada en =
la
clase <code>DijkstraShortestPath</code> que hemos explicado
anteriormente, y permitir la aplicaci=C3=B3n sobre un mapa de red tambi=C3=
=A9n
descrita arriba, se nos pide que modifiquemos el grafo para que pueda
contener cualquier tipo de dato como etiqueta, tanto en los nodos como
en las aristas, pudiendo ser un tipo para los nodos y otro distinto para
las aristas.</p>
<p>No mostramos nuevos diagramas de clases sino que indicamos uno a uno
los pasos que debes realizar y que deber=C3=A1s entender para poder acabar =
de
realizar la pr=C3=A1ctica. <strong>Ten en cuenta que si no eres capaz de
entender los cambios que tienes que realizar, es posible que la pr=C3=A1cti=
ca
no te compile en absoluto.</strong></p>
<p>F=C3=ADjate en el paquete <code>es.ua.dlsi.prog3.p6.network</code> y en =
el
test <em>GraphTests.java</em>. Ver=C3=A1s como <code>Graph</code> recibe do=
s
argumentos de tipo, uno para la etiqueta de los nodos y otro para la de
las aristas. Parametriza <code>Graph</code>, <code>GraphObject</code>,
<code>Node</code> y <code>Edge</code> para convertirlas en clases
gen=C3=A9ricas donde el tipo de la etiqueta pasa a ser gen=C3=A9rico, de ma=
nera
que el c=C3=B3digo del paquete <code>network</code> funcione. Usa como
nombres para los par=C3=A1metros de tipo <code>LabelType</code>, o
<code>NodeLabelType</code> y <code>EdgeLabelType</code> cuando sea
necesario distinguir entre etiquetas de nodo y de arista. Ten en cuenta
que, al igual que <code>Graph</code>, <code>Edge</code> tendr=C3=A1 dos
par=C3=A1metros de tipo: uno para la etiqueta de los nodos y otro para la
etiqueta de la arista que los conecta.</p>
<p>En el c=C3=B3digo de <code>Graph</code> ya usamos tipos gen=C3=A9ricos p=
ara
declarar referencias a tipos gen=C3=A9ricos definidos en
<code>java.util</code>, como <code>Map</code> o <code>Set</code>.
Deber=C3=A1s parametrizar los nodos y aristas adecuadamente.</p>
<section id=3D"nodenotfoundexception" class=3D"level4">
<h4>NodeNotFoundException</h4>
<p>Al implementar esta clase nos encontramos con el problema de que, al
ser una excepci=C3=B3n, no puede ser gen=C3=A9rica. Por ello, s=C3=B3lo pod=
emos usar
<code>Node</code> como <code>Node&lt;?&gt;</code>, que permite cualquier
tipo. Para el uso que se le da a la clase es m=C3=A1s que suficiente.</p>
<p>Tras introducir correctamente la genericidad, los test en
<em>GraphTest.java</em> deber=C3=ADan compilar y funcionar correctamente.</=
p>
</section>
<section id=3D"algoritmos-1" class=3D"level4">
<h4>Algoritmos</h4>
<section id=3D"dfs-y-dotexporter" class=3D"level5">
<h5>DFS y DotExporter</h5>
<p>Para parametrizar las clases <code>DFS</code> y
<code>DotExporter</code> repetiremos exactamente el mismo proceso que
hemos realizado para introducir la genericidad en el grafo. As=C3=AD, la
clases quedar=C3=A1n definidas como
<code>DFS&lt;NodeLabelType, EdgeLabelType&gt;</code> y
<code>DotExporter&lt;NodeLabelType, EdgeLabelType&gt;</code>.</p>
</section>
<section id=3D"dijkstrashortestpath" class=3D"level5">
<h5>DijkstraShortestPath</h5>
<p>El c=C3=A1lculo del camino m=C3=A1s corto requiere de la operaci=C3=B3n =
de suma y
comparaci=C3=B3n entre los pesos de las aristas. En la implementaci=C3=B3n =
basada
en cadenas esto lo realiz=C3=A1bamos convirtiendo la etiqueta cadena de la
arista en num=C3=A9rica y usando los operadores de comparaci=C3=B3n y suma =
nativos
(<code>&lt;</code>, <code>+</code>, =E2=80=A6). Sin embargo, si ahora quere=
mos
poder operar con cualquier tipo de dato en la etiqueta debemos
proporcionar una forma para realizar esa operaci=C3=B3n.</p>
<p><img src=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/img/p6_icost.svg"></p>
<p>Necesitamos realizar dos acciones. La primera es obligar a que el
tipo de la etiqueta de la arista sea comparable, es decir, implemente la
interfaz <code>Comparable</code>.</p>
<p>La segunda es crear un mecanismo para poder operar con los pesos de
las aristas, sea cual sea su tipo de dato. Esto lo conseguimos con la
introducci=C3=B3n de una interfaz gen=C3=A9rica <code>ICostOperators</code>=
 que
mostramos en el diagrama y que deber=C3=A1s programar. Esta interfaz define
tres operaciones gen=C3=A9ricas sobre el tipo <code>T</code>: la suma, el
valor cero y el valor m=C3=A1ximo. F=C3=ADjate como en el test
<em>DijkstraShortestPathTest.java</em> se implementa esta interfaz
mediante una clase an=C3=B3nima.</p>
<p>Adem=C3=A1s, es necesario a=C3=B1adir como par=C3=A1metro una referencia=
 de esta
clase al constructor de <code>DijkstraShortestPath</code> y almacenarla
como atributo:</p>
<div class=3D"sourceCode" id=3D"cb2"><pre class=3D"sourceCode java"><code c=
lass=3D"sourceCode java"><span id=3D"cb2-1"><a href=3D"https://www.dlsi.ua.=
es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html#cb2-1" aria-hid=
den=3D"true" tabindex=3D"-1"></a><span class=3D"kw">class</span> DijkstraSh=
ortestPath<span class=3D"op">&lt;</span>NodeLabelType<span class=3D"op">,</=
span> EdgeLabelType <span class=3D"kw">extends</span> <span class=3D"bu">Co=
mparable</span><span class=3D"op">&lt;</span>EdgeLabelType<span class=3D"op=
">&gt;&gt;</span> <span class=3D"op">{</span> </span>
<span id=3D"cb2-2"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-2" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">...</span></span>
<span id=3D"cb2-3"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-3" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">private</span> ICostOperators<span class=3D"=
op">&lt;</span>EdgeLabelType<span class=3D"op">&gt;</span> costOperators<sp=
an class=3D"op">;</span></span>
<span id=3D"cb2-4"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-4" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">...</span></span>
<span id=3D"cb2-5"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-5" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">public</span> <span class=3D"fu">DijkstraSho=
rtestPath</span><span class=3D"op">(</span>Graph<span class=3D"op">&lt;</sp=
an>NodeLabelType<span class=3D"op">,</span> EdgeLabelType<span class=3D"op"=
>&gt;</span> graph<span class=3D"op">,</span> ICostOperators<span class=3D"=
op">&lt;</span>EdgeLabelType<span class=3D"op">&gt;</span> costOperators<sp=
an class=3D"op">)</span> <span class=3D"op">{</span></span>
<span id=3D"cb2-6"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-6" aria-hidden=3D"true" tabindex=3D"=
-1"></a>        <span class=3D"kw">this</span><span class=3D"op">.</span><s=
pan class=3D"fu">graph</span> <span class=3D"op">=3D</span> graph<span clas=
s=3D"op">;</span></span>
<span id=3D"cb2-7"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-7" aria-hidden=3D"true" tabindex=3D"=
-1"></a>        <span class=3D"kw">this</span><span class=3D"op">.</span><s=
pan class=3D"fu">costOperators</span> <span class=3D"op">=3D</span> costOpe=
rators<span class=3D"op">;</span></span>
<span id=3D"cb2-8"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-8" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"op">}</span></span>
<span id=3D"cb2-9"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb2-9" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">...</span></span></code></pre></div>
<p>Ahora, las distancias desde nodos almacenadas en la propiedad
<code>dist</code> no tienen por qu=C3=A9 ser <code>Integer</code>, sino que
son del tipo parametrizado de las aristas <code>EdgeLabelType</code>,
que sabemos que son comparables. El atributo de coste de la clase
interna <code>Cost</code> ser=C3=A1 ahora tambi=C3=A9n de tipo
<code>EdgeLabelType</code>.</p>
<p>Como ya no sabemos cu=C3=A1les son los valores cero y m=C3=A1ximo del pe=
so
coste de una arista, ya que =C3=A9stos dependen del tipo de dato, usaremos
los m=C3=A9todos <code>zero()</code> y <code>maximumValue()</code> de
<code>ICostOperators</code>. En el m=C3=A9todo <code>compute()</code>,
utiliza estos m=C3=A9todos donde sea necesario conocer el valor m=C3=A1ximo=
 y el
valor cero del coste de una arista.</p>
<p>En este c=C3=B3digo usamos la clase <a href=3D"https://docs.oracle.com/j=
avase/8/docs/api/java/util/PriorityQueue.html"><code>PriorityQueue</code></=
a>
de <a href=3D"https://docs.oracle.com/javase/8/docs/technotes/guides/collec=
tions/overview.html"><em>Java
Collections Frameworks</em></a>. Una cola de prioridad es una cola en la
que los elementos se encolan ordenados seg=C3=BAn una <em>prioridad</em>, p=
or
lo que necesita que le proporcionemos un m=C3=A9todo de ordenaci=C3=B3n. Pa=
ra ello
empleamos la interfaz <code>Comparator</code>. Puedes ver como se usa en
nuestra <a href=3D"https://www.dlsi.ua.es//asignaturas/prog3/jcf_facil.html=
">Gu=C3=ADa
f=C3=A1cil de Java Collection Framework</a>.</p>
<p>Finalmente, en el c=C3=B3digo del m=C3=A9todo <code>processNeighbours()<=
/code>,
que suma y compara distancias, deberemos sustituir la conversi=C3=B3n de
cadena a entero que ten=C3=ADamos, as=C3=AD como sustituir las sumas y las
comparaciones directas con los operadores enteros <code>+</code> y
<code>&lt;</code> por el uso de <code>ICostOperators.add()</code> y
<code>Comparable.compareTo()</code>. En concreto, deber=C3=A1s sustituir:</=
p>
<div class=3D"sourceCode" id=3D"cb3"><pre class=3D"sourceCode java"><code c=
lass=3D"sourceCode java"><span id=3D"cb3-1"><a href=3D"https://www.dlsi.ua.=
es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html#cb3-1" aria-hid=
den=3D"true" tabindex=3D"-1"></a><span class=3D"co">// If new distance is c=
heaper in cost</span></span>
<span id=3D"cb3-2"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb3-2" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"dt">int</span> edgeDistance <span class=3D"op">=3D</=
span> <span class=3D"bu">Integer</span><span class=3D"op">.</span><span cla=
ss=3D"fu">parseInt</span><span class=3D"op">(</span>edge<span class=3D"op">=
.</span><span class=3D"fu">getLabel</span><span class=3D"op">());</span></s=
pan>
<span id=3D"cb3-3"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb3-3" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"dt">int</span> newDistance <span class=3D"op">=3D</s=
pan> dist<span class=3D"op">.</span><span class=3D"fu">get</span><span clas=
s=3D"op">(</span>source<span class=3D"op">)</span> <span class=3D"op">+</sp=
an> edgeDistance<span class=3D"op">;</span></span>
<span id=3D"cb3-4"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb3-4" aria-hidden=3D"true" tabindex=3D"=
-1"></a> </span>
<span id=3D"cb3-5"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb3-5" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"co">// If new distance is cheaper in cost</span></sp=
an>
<span id=3D"cb3-6"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb3-6" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"cf">if</span> <span class=3D"op">(</span>newDistance=
 <span class=3D"op">&lt;</span> dist<span class=3D"op">.</span><span class=
=3D"fu">get</span><span class=3D"op">(</span>target<span class=3D"op">))</s=
pan> <span class=3D"op">{</span></span></code></pre></div>
<p>por</p>
<div class=3D"sourceCode" id=3D"cb4"><pre class=3D"sourceCode java"><code c=
lass=3D"sourceCode java"><span id=3D"cb4-1"><a href=3D"https://www.dlsi.ua.=
es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html#cb4-1" aria-hid=
den=3D"true" tabindex=3D"-1"></a><span class=3D"co">// If new distance is c=
heaper in cost</span></span>
<span id=3D"cb4-2"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb4-2" aria-hidden=3D"true" tabindex=3D"=
-1"></a>EdgeLabelType edgeDistance <span class=3D"op">=3D</span> edge<span =
class=3D"op">.</span><span class=3D"fu">getLabel</span><span class=3D"op">(=
);</span></span>
<span id=3D"cb4-3"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb4-3" aria-hidden=3D"true" tabindex=3D"=
-1"></a>EdgeLabelType newDistance <span class=3D"op">=3D</span> costOperato=
rs<span class=3D"op">.</span><span class=3D"fu">add</span><span class=3D"op=
">(</span>dist<span class=3D"op">.</span><span class=3D"fu">get</span><span=
 class=3D"op">(</span>source<span class=3D"op">),</span> edgeDistance<span =
class=3D"op">);</span></span>
<span id=3D"cb4-4"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb4-4" aria-hidden=3D"true" tabindex=3D"=
-1"></a> </span>
<span id=3D"cb4-5"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb4-5" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"co">// If new distance is cheaper in cost</span></sp=
an>
<span id=3D"cb4-6"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb4-6" aria-hidden=3D"true" tabindex=3D"=
-1"></a><span class=3D"cf">if</span> <span class=3D"op">(</span>newDistance=
<span class=3D"op">.</span><span class=3D"fu">compareTo</span><span class=
=3D"op">(</span>dist<span class=3D"op">.</span><span class=3D"fu">get</span=
><span class=3D"op">(</span>target<span class=3D"op">))</span> <span class=
=3D"op">&lt;</span> <span class=3D"dv">0</span><span class=3D"op">)</span> =
<span class=3D"op">{</span></span></code></pre></div>
</section>
<section id=3D"algorithms" class=3D"level5">
<h5>Algorithms</h5>
<p>En el c=C3=B3digo anterior de los grafos con cadenas, los m=C3=A9todos
est=C3=A1ticos de la clase <code>Algorithms</code> usaban tipos no
parametrizados. Sin embargo, ahora todas las clases del grafo lo son,
por lo que debes parametrizar los m=C3=A9todos est=C3=A1ticos de
<code>Algorithms</code> para que compilen y funcionen correctamente con
las clases gen=C3=A9ricas. Ojo, no hay que parametrizar la clase
<code>Algorithms</code>, sino sus m=C3=A9todos est=C3=A1ticos.</p>
<p>Ten en cuenta que para parametrizar <code>shortestPathCost()</code>
el tipo de la arista debe implementar la interfaz
<code>Comparable</code>. Adem=C3=A1s, la signatura del m=C3=A9todo cambia d=
e la
siguiente forma:</p>
<ul>
<li>devuelve <code>EdgeLabelType</code> (recuerda: este es el tipo de
dato que define el =E2=80=98coste=E2=80=99 de una arista)</li>
<li>debemos a=C3=B1adirle un cuarto argumento de tipo
<code>ICostOperators&lt;EdgeLabelType&gt;</code> que luego pasaremos al
constructor de <code>DijkstraShortestPath</code>.</li>
</ul>
</section>
</section>
<section id=3D"aplicaci=C3=B3n-mapa-de-red" class=3D"level4">
<h4>Aplicaci=C3=B3n mapa de red</h4>
<p>En el c=C3=B3digo que hemos proporcionado en la clases
<code>Network</code> y <code>NetworkTest</code> vemos que no podemos
realizar la llamada a <code>printLatencyMap()</code> por el borrado de
tipos de Java:</p>
<div class=3D"sourceCode" id=3D"cb5"><pre class=3D"sourceCode java"><code c=
lass=3D"sourceCode java"><span id=3D"cb5-1"><a href=3D"https://www.dlsi.ua.=
es/asignaturas/prog3/desde-2022-2023/web/p6/Practica_6.html#cb5-1" aria-hid=
den=3D"true" tabindex=3D"-1"></a><span class=3D"kw">public</span> <span cla=
ss=3D"kw">class</span> Network <span class=3D"op">{</span></span>
<span id=3D"cb5-2"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-2" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">...</span></span>
<span id=3D"cb5-3"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-3" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">public</span> <span class=3D"dt">void</span>=
 <span class=3D"fu">printLatencyMap</span><span class=3D"op">(</span><span =
class=3D"bu">List</span><span class=3D"op">&lt;</span>Device<span class=3D"=
op">&gt;</span> devices<span class=3D"op">)</span> <span class=3D"op">{</sp=
an></span>
<span id=3D"cb5-4"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-4" aria-hidden=3D"true" tabindex=3D"=
-1"></a>        <span class=3D"kw">...</span></span>
<span id=3D"cb5-5"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-5" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"op">}</span></span>
<span id=3D"cb5-6"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-6" aria-hidden=3D"true" tabindex=3D"=
-1"></a></span>
<span id=3D"cb5-7"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-7" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">...</span></span>
<span id=3D"cb5-8"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-8" aria-hidden=3D"true" tabindex=3D"=
-1"></a>    <span class=3D"kw">public</span> <span class=3D"dt">static</spa=
n> <span class=3D"dt">final</span> <span class=3D"dt">void</span> <span cla=
ss=3D"fu">main</span><span class=3D"op">(</span><span class=3D"bu">String</=
span> <span class=3D"op">[]</span> args<span class=3D"op">)</span> <span cl=
ass=3D"op">{</span></span>
<span id=3D"cb5-9"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desd=
e-2022-2023/web/p6/Practica_6.html#cb5-9" aria-hidden=3D"true" tabindex=3D"=
-1"></a>        Network network <span class=3D"op">=3D</span> <span class=
=3D"kw">new</span> <span class=3D"fu">Network</span><span class=3D"op">();<=
/span></span>
<span id=3D"cb5-10"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/des=
de-2022-2023/web/p6/Practica_6.html#cb5-10" aria-hidden=3D"true" tabindex=
=3D"-1"></a>        Computer c1 <span class=3D"op">=3D</span> <span class=
=3D"kw">new</span> <span class=3D"fu">Computer</span><span class=3D"op">(</=
span><span class=3D"kw">...</span><span class=3D"op">..);</span></span>
<span id=3D"cb5-11"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/des=
de-2022-2023/web/p6/Practica_6.html#cb5-11" aria-hidden=3D"true" tabindex=
=3D"-1"></a>        <span class=3D"kw">...</span></span>
<span id=3D"cb5-12"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/des=
de-2022-2023/web/p6/Practica_6.html#cb5-12" aria-hidden=3D"true" tabindex=
=3D"-1"></a>        <span class=3D"bu">List</span><span class=3D"op">&lt;</=
span>Computer<span class=3D"op">&gt;</span> computers <span class=3D"op">=
=3D</span> <span class=3D"bu">Arrays</span><span class=3D"op">.</span><span=
 class=3D"fu">asList</span><span class=3D"op">(</span>c1<span class=3D"op">=
,</span> c2<span class=3D"op">);</span></span>
<span id=3D"cb5-13"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/des=
de-2022-2023/web/p6/Practica_6.html#cb5-13" aria-hidden=3D"true" tabindex=
=3D"-1"></a>        network<span class=3D"op">.</span><span class=3D"fu">pr=
intLatencyMap</span><span class=3D"op">(</span>computers<span class=3D"op">=
);</span> <span class=3D"co">// Error de compilaci=C3=B3n</span></span></co=
de></pre></div>
<p>Para solucionarlo debes usar un comod=C3=ADn para tipos gen=C3=A9ricos e=
n los
m=C3=A9todos <code>printLatencyMap</code> y <code>computeLatencyMap</code>.
En lugar de <code>List&lt;Device&gt;</code>, para que admita cualquier
tipo que herede de <code>Device</code> deber=C3=A1s usar
<code>List&lt;? extends Device&gt;</code>.</p>
<p>Cuando est=C3=A9 listo, ejecuta <code>Network.main()</code> o
<em>NetworkTest.java</em> para ver que todo funciona.</p>
</section>
</section>
<section id=3D"uso-de-la-reflexi=C3=B3n-en-java" class=3D"level3">
<h3>Uso de la reflexi=C3=B3n en Java</h3>
<p>La =C3=BAltima parte de la pr=C3=A1ctica consiste en que utilicemos el
mecamismo de la reflexi=C3=B3n en Java.</p>
<p>Para ello hemos creado una serie de clases descritas en el siguiente
UML.</p>
<p><img src=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web=
/p6/img/p6_reflection.svg" alt=3D"Refexi=C3=B3n" width=3D"1200"></p>
<p>La clase <code>Code2Graph</code> construye un grafo
<code>Graph</code> que muestra las dependencias entre clases. Para ello
se apoya en una serie de clases que usan reflexi=C3=B3n. Aunque en las
pruebas unitarias se eval=C3=BAa si todo funciona, puedes usar el
<code>main</code> de esa clase si quieres experimentar con ella.</p>
<p>La tarea que deber=C3=A1s realizar es la de implementar las clases
<code>ClassAnalyzer</code> y <code>ReflectionUtils</code> del paquete
<code>es.ua.dlsi.prog3.p6.reflection.impl</code> que te damos
vac=C3=ADas.</p>
<p>Damos pistas a continuaci=C3=B3n de c=C3=B3mo implementarlas mediante el=
 uso de
la reflexi=C3=B3n de Java.</p>
<section id=3D"classanalyzer" class=3D"level5">
<h5><code>ClassAnalyzer</code></h5>
<ul>
<li><code>findDependantClasses</code>: <strong>Este m=C3=A9todo se da ya
implementado</strong>. Puede servirte de gu=C3=ADa a la hora de usar la
reflexi=C3=B3n. Recorre los constructores (<code>getConstructors()</code>) =
y
m=C3=A9todos (<code>getDeclaredMethods()</code>) de la clase y devuelve las
clases de sus par=C3=A1metros (<code>getParameterTypes()</code>) y tipos de
retorno (<code>getReturnType()</code>).</li>
<li><code>findParentClass</code>: devuelve la superclase de la clase
dada, o <code>null</code> si =C3=A9sta no tiene superclase.</li>
<li><code>haveSamePackage</code>: eval=C3=BAa si dos clases pertenecen al
mismo paquete.</li>
<li><code>findAssociatedClasses</code>: devuelve un conjunto con las
clases a las que pertenecen los atributos definidos en la clase
(<code>getDeclaredFields()</code>). Usa el m=C3=A9todo
<code>Field.getType()</code> para obtener el tipo del atributo.</li>
</ul>
</section>
<section id=3D"reflectionutils" class=3D"level5">
<h5><code>ReflectionUtils</code></h5>
<ul>
<li><code>instantiate</code>: crea una nueva instancia de la clase. Dado
que no se le pasa par=C3=A1metros al constructor podemos usar el m=C3=A9tod=
o
<code>newInstance()</code> de la clase. F=C3=ADjate c=C3=B3mo hemos paramet=
rizado
el m=C3=A9todo con <code>&lt;T&gt;</code> para que el c=C3=B3digo cliente d=
e este
m=C3=A9todo no necesite hacer ninguna conversi=C3=B3n de tipo
(<code>instantiate()</code> s=C3=AD tendr=C3=A1 que hacer conversi=C3=B3n d=
e tipo
<code>(T)</code>).</li>
<li><code>findClassInPackage</code>: compondr=C3=A1 el nombre cualificado d=
e
la clase concatenando el paquete y el nombre de la clase, interponiendo
un punto (=E2=80=9C.=E2=80=9D), y usar=C3=A1 el m=C3=A9todo <code>forName()=
</code> de
<code>Class</code>.</li>
<li><code>isImplementingInterface</code>: para saber si una clase
implementa un interfaz la forma m=C3=A1s sencilla es preguntar si podemos
asignar esa clase al interfaz (v=C3=A9ase <code>isAssignableFrom()</code> e=
n
<code>Class</code>).</li>
</ul>
<p>Puedes ver c=C3=B3mo usamos estas dos clases en el c=C3=B3digo de
<code>Code2Graph</code>. Por ejemplo, es interesante que compruebes c=C3=B3=
mo
la propiedad <code>IClassAnalyzer classAnalyzer</code> de esta clase no
se crea a trav=C3=A9s de una cl=C3=A1usula <code>new</code>, sino que se us=
a
reflexi=C3=B3n para localizar la clase en un paquete que proporcionamos en
forma de cadena (v=C3=A9ase m=C3=A9todo <code>createGraph</code>).</p>
</section>
</section>
</section>
<section id=3D"documentation" class=3D"level2">
<h2>Documentaci=C3=B3n</h2>
<p><strong>No es necesario documentar esta pr=C3=A1ctica</strong></p>
<p>Puedes documentar el c=C3=B3digo que escribas, de hecho te lo
recomendamos, pero no se evaluar=C3=A1.</p>
</section>
<section id=3D"requisitos-m=C3=ADnimos-para-evaluar-la-pr=C3=A1ctica" class=
=3D"level2">
<h2>Requisitos m=C3=ADnimos para evaluar la pr=C3=A1ctica</h2>
<ul>
<li>La pr=C3=A1ctica debe poder ejecutarse sin errores de compilaci=C3=B3n.=
</li>
<li>Ninguna operaci=C3=B3n debe emitir ning=C3=BAn tipo de comentario o
mensaje&nbsp;por salida est=C3=A1ndar, a menos que se indique lo contrario.=
 Evita
tambi=C3=A9n los mensajes por la salida de error.</li>
<li>Se debe respetar de manera estricta el formato del nombre de
<strong>todas las propiedades</strong> de las clases, tanto en&nbsp;cuanto =
a
=C3=A1mbito de visibilidad como en cuanto a tipo y forma de escritura. En
particular se debe respetar escrupulosamente la distinci=C3=B3n entre
atributos de clase y de instancia, as=C3=AD como las may=C3=BAsculas y min=
=C3=BAsculas
en los identificadores.</li>
</ul>
</section>
<section id=3D"entrega-de-la-pr=C3=A1ctica" class=3D"level2">
<h2>Entrega de la pr=C3=A1ctica</h2>
<p>La pr=C3=A1ctica se entrega durante el control en el <a href=3D"http://p=
racdlsi.dlsi.ua.es/">servidor de pr=C3=A1cticas del
DLSI</a>.</p>
<p>Debes subir all=C3=AD un archivo comprimido con tu c=C3=B3digo fuente (s=
=C3=B3lo
archivos .java). En un terminal, sit=C3=BAate en el directorio =E2=80=98src=
=E2=80=99 de tu
proyecto Eclipse e introduce la orden</p>
<p><code>tar czvf prog3-p6.tgz *</code></p>
<p>Esto comprimir=C3=A1 todo el c=C3=B3digo que hay en <em>src/</em>, inclu=
yendo
el de aquellas clases que ya se daban implementadas. Esto es correcto y
debes entregarlo as=C3=AD.</p>
<p>Sube este fichero <code>prog3-p6.tgz</code> al servidor de pr=C3=A1ctica=
s.
Sigue las instrucciones de la p=C3=A1gina para entrar como usuario y subir =
tu
trabajo.</p>
</section>
<section id=3D"evaluaci=C3=B3n" class=3D"level2">
<h2>Evaluaci=C3=B3n&nbsp;</h2>
<p>La correcci=C3=B3n de la pr=C3=A1ctica es autom=C3=A1tica. Esto signific=
a que se
deben respetar estrictamente los formatos de entrada y salida
especificados en los enunciados, as=C3=AD como la interfaz p=C3=BAblica de =
las
clases, tanto en la signatura de los m=C3=A9todos (nombre del m=C3=A9todo, =
n=C3=BAmero,
tipo y orden de los argumentos de entrada y el tipo devuelto) como en el
funcionamiento de =C3=A9stos. As=C3=AD, por ejemplo, el m=C3=A9todo <span s=
tyle=3D"font-family:'Courier New';">Clase(int,int)</span>&nbsp;debe
tener exactamente dos argumentos de tipo <em>int</em>.</p>
<p>Tienes m=C3=A1s informaci=C3=B3n sobre el sistema de evaluaci=C3=B3n de =
pr=C3=A1cticas en
la ficha de la asignatura.</p>
<p>Adem=C3=A1s de la correcci=C3=B3n autom=C3=A1tica, se va a utilizar una =
aplicaci=C3=B3n
detectora de plagios.</p>
<p>Se indica a continuaci=C3=B3n la normativa aplicable de la Escuela
Polit=C3=A9cnica Superior de la Universidad de Alicante en caso de
plagio:</p>
<hr>
<p>=E2=80=9CLos trabajos te=C3=B3rico/pr=C3=A1cticos realizados han de ser =
originales. La
detecci=C3=B3n de copia o plagio supondr=C3=A1 la calificaci=C3=B3n de=E2=
=80=9D0=E2=80=9D en la prueba
correspondiente. Se informar=C3=A1 la direcci=C3=B3n de Departamento y de l=
a EPS
sobre esta incidencia. La reiteraci=C3=B3n en la conducta en esta u otra
asignatura conllevar=C3=A1 la notificaci=C3=B3n al vicerrectorado correspon=
diente
de las faltas cometidas para que estudien el caso y sancionen seg=C3=BAn la
legislaci=C3=B3n vigente=E2=80=9D.</p>
<hr>
</section>
</section>

<!-- Begin PROG3 Footer -->

</div>

				<!-- Footer -->
					<section id=3D"footer">
						<div class=3D"container">
							<ul class=3D"copyright">
								<li><a rel=3D"license" href=3D"http://creativecommons.org/licenses/=
by-sa/3.0/deed.es_CO" style=3D"border-bottom:0"><img alt=3D"Licencia Creati=
ve Commons" src=3D"http://i.creativecommons.org/l/by-sa/3.0/80x15.png"></a>
&nbsp; =C2=A9 Pedro Jos=C3=A9 Ponce de Le=C3=B3n, David Rizo Valero, Felipe=
 S=C3=A1nchez Mart=C3=ADnez. Universitat d'Alacant. Dise=C3=B1o: <a style=
=3D"border-bottom:0" href=3D"http://html5up.net/">HTML5 UP</a>. Foto: Bouwe=
 Brouwer (Own work) [<a href=3D"http://creativecommons.org/licenses/by-sa/3=
.0">CC BY-SA 3.0</a>], <a href=3D"https://commons.wikimedia.org/wiki/File%3=
ALeeuwarden_-_Tegeltableau_Escher.jpg">via Wikimedia Commons</a>.</li>
							</ul>
						</div>
					</section>

			</div>

		<!-- Scripts -->
		=09
		=09
		=09
		=09
		=09
			<!--[if lte IE 8]><script src=3D"../../../theme/readonly/assets/js/ie/re=
spond.min.js"></script><![endif]-->
		=09

<!-- End PROG3 Footer -->


<div id=3D"titleBar"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/de=
sde-2022-2023/web/p6/Practica_6.html#header" class=3D"toggle"></a><span cla=
ss=3D"title"><a href=3D"https://www.dlsi.ua.es/asignaturas/prog3/desde-2022=
-2023/web/p6/Practica_6.html#">Programaci=C3=B3n 3</a></span></div></body><=
/html>
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-f7d02242-fdd6-40e4-bdb2-f5c0272ba3c0@mhtml.blink

@charset "utf-8";

code { white-space: pre; }
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-5904ea3b-ea7d-422c-b7e6-05b8c41ef623@mhtml.blink

@charset "utf-8";

pre > code.sourceCode { white-space: pre; position: relative; }

pre > code.sourceCode > span { line-height: 1.25; }

pre > code.sourceCode > span:empty { height: 1.2em; }

.sourceCode { overflow: visible; }

code.sourceCode > span { color: inherit; text-decoration: inherit; }

div.sourceCode { margin: 1em 0px; }

pre.sourceCode { margin: 0px; }

@media screen {
  div.sourceCode { overflow: auto; }
}

@media print {
  pre > code.sourceCode { white-space: pre-wrap; }
  pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
}

pre.numberSource code { counter-reset: source-line 0; }

pre.numberSource code > span { position: relative; left: -4em; counter-incr=
ement: source-line 1; }

pre.numberSource code > span > a:first-child::before { content: counter(sou=
rce-line); position: relative; left: -1em; text-align: right; vertical-alig=
n: baseline; border: none; display: inline-block; user-select: none; paddin=
g: 0px 4px; width: 4em; }

pre.numberSource { margin-left: 3em; padding-left: 4px; }

div.sourceCode { color: rgb(204, 204, 204); background-color: rgb(48, 48, 4=
8); }

@media screen {
  pre > code.sourceCode > span > a:first-child::before { text-decoration: u=
nderline; }
}

code span.al { color: rgb(255, 207, 175); }

code span.an { color: rgb(127, 159, 127); font-weight: bold; }

code span.at { }

code span.bn { color: rgb(220, 163, 163); }

code span.bu { }

code span.cf { color: rgb(240, 223, 175); }

code span.ch { color: rgb(220, 163, 163); }

code span.cn { color: rgb(220, 163, 163); font-weight: bold; }

code span.co { color: rgb(127, 159, 127); }

code span.cv { color: rgb(127, 159, 127); font-weight: bold; }

code span.do { color: rgb(127, 159, 127); }

code span.dt { color: rgb(223, 223, 191); }

code span.dv { color: rgb(220, 220, 204); }

code span.er { color: rgb(195, 191, 159); }

code span.ex { }

code span.fl { color: rgb(192, 190, 209); }

code span.fu { color: rgb(239, 239, 143); }

code span.im { }

code span.in { color: rgb(127, 159, 127); font-weight: bold; }

code span.kw { color: rgb(240, 223, 175); }

code span.op { color: rgb(240, 239, 208); }

code span.ot { color: rgb(239, 239, 143); }

code span.pp { color: rgb(255, 207, 175); font-weight: bold; }

code span.sc { color: rgb(220, 163, 163); }

code span.ss { color: rgb(204, 147, 147); }

code span.st { color: rgb(204, 147, 147); }

code span.va { }

code span.vs { color: rgb(204, 147, 147); }

code span.wa { color: rgb(127, 159, 127); font-weight: bold; }
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/theme/readonly/assets/css/main.css

@charset "utf-8";

@import url("font-awesome.min.css");

@import url("http://fonts.googleapis.com/css?family=3DLato:400,400italic,70=
0,700italic|Source+Code+Pro:400");

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, b=
lockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, i=
mg, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i=
, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, cap=
tion, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, emb=
ed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, se=
ction, summary, time, mark, audio, video { margin: 0px; padding: 0px; borde=
r: 0px; font: inherit; vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, =
nav, section { display: block; }

body { line-height: 1; }

ol, ul { list-style: none; }

blockquote, q { quotes: none; }

blockquote::before, blockquote::after, q::before, q::after { content: none;=
 }

table { border-collapse: collapse; border-spacing: 0px; }

body { text-size-adjust: none; }

*, ::before, ::after { box-sizing: border-box; }

.container { margin-left: auto; margin-right: auto; }

.container.\31 25\% { width: 100%; max-width: 56.25em; min-width: 45em; }

.container.\37 5\% { width: 33.75em; }

.container.\35 0\% { width: 22.5em; }

.container.\32 5\% { width: 11.25em; }

.container { width: 45em; }

@media screen and (max-width: 1680px) {
  .container.\31 25\% { width: 100%; max-width: 56.25em; min-width: 45em; }
  .container.\37 5\% { width: 33.75em; }
  .container.\35 0\% { width: 22.5em; }
  .container.\32 5\% { width: 11.25em; }
  .container { width: 45em; }
}

@media screen and (max-width: 1280px) {
  .container.\31 25\% { width: 100%; max-width: 52.5em; min-width: 42em; }
  .container.\37 5\% { width: 31.5em; }
  .container.\35 0\% { width: 21em; }
  .container.\32 5\% { width: 10.5em; }
  .container { width: 42em; }
}

@media screen and (max-width: 1024px) {
  .container.\31 25\% { width: 100%; max-width: 106.25%; min-width: 85%; }
  .container.\37 5\% { width: 63.75%; }
  .container.\35 0\% { width: 42.5%; }
  .container.\32 5\% { width: 21.25%; }
  .container { width: 85% !important; }
}

@media screen and (max-width: 736px) {
  .container.\31 25\% { width: 100%; max-width: 112.5%; min-width: 90%; }
  .container.\37 5\% { width: 67.5%; }
  .container.\35 0\% { width: 45%; }
  .container.\32 5\% { width: 22.5%; }
  .container { width: 90% !important; }
}

@media screen and (max-width: 480px) {
  .container.\31 25\% { width: 100%; max-width: 112.5%; min-width: 90%; }
  .container.\37 5\% { width: 67.5%; }
  .container.\35 0\% { width: 45%; }
  .container.\32 5\% { width: 22.5%; }
  .container { width: 90% !important; }
}

.row { border-bottom: 1px solid transparent; box-sizing: border-box; }

.row > * { float: left; box-sizing: border-box; }

.row::after, .row::before { content: ""; display: block; clear: both; heigh=
t: 0px; }

.row.uniform > * > :first-child { margin-top: 0px; }

.row.uniform > * > :last-child { margin-bottom: 0px; }

.row.\30 \% > * { padding: 0px 0px 0px 0em; }

.row.\30 \% { margin: 0px 0px -1px 0em; }

.row.uniform.\30 \% > * { padding: 0em 0px 0px 0em; }

.row.uniform.\30 \% { margin: 0em 0px -1px 0em; }

.row > * { padding: 0px 0px 0px 2em; }

.row { margin: 0px 0px -1px -2em; }

.row.uniform > * { padding: 2em 0px 0px 2em; }

.row.uniform { margin: -2em 0px -1px -2em; }

.row.\32 00\% > * { padding: 0px 0px 0px 4em; }

.row.\32 00\% { margin: 0px 0px -1px -4em; }

.row.uniform.\32 00\% > * { padding: 4em 0px 0px 4em; }

.row.uniform.\32 00\% { margin: -4em 0px -1px -4em; }

.row.\31 50\% > * { padding: 0px 0px 0px 3em; }

.row.\31 50\% { margin: 0px 0px -1px -3em; }

.row.uniform.\31 50\% > * { padding: 3em 0px 0px 3em; }

.row.uniform.\31 50\% { margin: -3em 0px -1px -3em; }

.row.\35 0\% > * { padding: 0px 0px 0px 1em; }

.row.\35 0\% { margin: 0px 0px -1px -1em; }

.row.uniform.\35 0\% > * { padding: 1em 0px 0px 1em; }

.row.uniform.\35 0\% { margin: -1em 0px -1px -1em; }

.row.\32 5\% > * { padding: 0px 0px 0px 0.5em; }

.row.\32 5\% { margin: 0px 0px -1px -0.5em; }

.row.uniform.\32 5\% > * { padding: 0.5em 0px 0px 0.5em; }

.row.uniform.\32 5\% { margin: -0.5em 0px -1px -0.5em; }

.\31 2u, .\31 2u\$ { width: 100%; clear: none; margin-left: 0px; }

.\31 1u, .\31 1u\$ { width: 91.6667%; clear: none; margin-left: 0px; }

.\31 0u, .\31 0u\$ { width: 83.3333%; clear: none; margin-left: 0px; }

.\39 u, .\39 u\$ { width: 75%; clear: none; margin-left: 0px; }

.\38 u, .\38 u\$ { width: 66.6667%; clear: none; margin-left: 0px; }

.\37 u, .\37 u\$ { width: 58.3333%; clear: none; margin-left: 0px; }

.\36 u, .\36 u\$ { width: 50%; clear: none; margin-left: 0px; }

.\35 u, .\35 u\$ { width: 41.6667%; clear: none; margin-left: 0px; }

.\34 u, .\34 u\$ { width: 33.3333%; clear: none; margin-left: 0px; }

.\33 u, .\33 u\$ { width: 25%; clear: none; margin-left: 0px; }

.\32 u, .\32 u\$ { width: 16.6667%; clear: none; margin-left: 0px; }

.\31 u, .\31 u\$ { width: 8.33333%; clear: none; margin-left: 0px; }

.\31 2u\$ + *, .\31 1u\$ + *, .\31 0u\$ + *, .\39 u\$ + *, .\38 u\$ + *, .\=
37 u\$ + *, .\36 u\$ + *, .\35 u\$ + *, .\34 u\$ + *, .\33 u\$ + *, .\32 u\=
$ + *, .\31 u\$ + * { clear: left; }

.-\31 1u { margin-left: 91.6667%; }

.-\31 0u { margin-left: 83.3333%; }

.-\39 u { margin-left: 75%; }

.-\38 u { margin-left: 66.6667%; }

.-\37 u { margin-left: 58.3333%; }

.-\36 u { margin-left: 50%; }

.-\35 u { margin-left: 41.6667%; }

.-\34 u { margin-left: 33.3333%; }

.-\33 u { margin-left: 25%; }

.-\32 u { margin-left: 16.6667%; }

.-\31 u { margin-left: 8.33333%; }

@media screen and (max-width: 1680px) {
  .row > * { padding: 0px 0px 0px 2em; }
  .row { margin: 0px 0px -1px -2em; }
  .row.uniform > * { padding: 2em 0px 0px 2em; }
  .row.uniform { margin: -2em 0px -1px -2em; }
  .row.\32 00\% > * { padding: 0px 0px 0px 4em; }
  .row.\32 00\% { margin: 0px 0px -1px -4em; }
  .row.uniform.\32 00\% > * { padding: 4em 0px 0px 4em; }
  .row.uniform.\32 00\% { margin: -4em 0px -1px -4em; }
  .row.\31 50\% > * { padding: 0px 0px 0px 3em; }
  .row.\31 50\% { margin: 0px 0px -1px -3em; }
  .row.uniform.\31 50\% > * { padding: 3em 0px 0px 3em; }
  .row.uniform.\31 50\% { margin: -3em 0px -1px -3em; }
  .row.\35 0\% > * { padding: 0px 0px 0px 1em; }
  .row.\35 0\% { margin: 0px 0px -1px -1em; }
  .row.uniform.\35 0\% > * { padding: 1em 0px 0px 1em; }
  .row.uniform.\35 0\% { margin: -1em 0px -1px -1em; }
  .row.\32 5\% > * { padding: 0px 0px 0px 0.5em; }
  .row.\32 5\% { margin: 0px 0px -1px -0.5em; }
  .row.uniform.\32 5\% > * { padding: 0.5em 0px 0px 0.5em; }
  .row.uniform.\32 5\% { margin: -0.5em 0px -1px -0.5em; }
  .\31 2u\(xlarge\), .\31 2u\$\(xlarge\) { width: 100%; clear: none; margin=
-left: 0px; }
  .\31 1u\(xlarge\), .\31 1u\$\(xlarge\) { width: 91.6667%; clear: none; ma=
rgin-left: 0px; }
  .\31 0u\(xlarge\), .\31 0u\$\(xlarge\) { width: 83.3333%; clear: none; ma=
rgin-left: 0px; }
  .\39 u\(xlarge\), .\39 u\$\(xlarge\) { width: 75%; clear: none; margin-le=
ft: 0px; }
  .\38 u\(xlarge\), .\38 u\$\(xlarge\) { width: 66.6667%; clear: none; marg=
in-left: 0px; }
  .\37 u\(xlarge\), .\37 u\$\(xlarge\) { width: 58.3333%; clear: none; marg=
in-left: 0px; }
  .\36 u\(xlarge\), .\36 u\$\(xlarge\) { width: 50%; clear: none; margin-le=
ft: 0px; }
  .\35 u\(xlarge\), .\35 u\$\(xlarge\) { width: 41.6667%; clear: none; marg=
in-left: 0px; }
  .\34 u\(xlarge\), .\34 u\$\(xlarge\) { width: 33.3333%; clear: none; marg=
in-left: 0px; }
  .\33 u\(xlarge\), .\33 u\$\(xlarge\) { width: 25%; clear: none; margin-le=
ft: 0px; }
  .\32 u\(xlarge\), .\32 u\$\(xlarge\) { width: 16.6667%; clear: none; marg=
in-left: 0px; }
  .\31 u\(xlarge\), .\31 u\$\(xlarge\) { width: 8.33333%; clear: none; marg=
in-left: 0px; }
  .\31 2u\$\(xlarge\) + *, .\31 1u\$\(xlarge\) + *, .\31 0u\$\(xlarge\) + *=
, .\39 u\$\(xlarge\) + *, .\38 u\$\(xlarge\) + *, .\37 u\$\(xlarge\) + *, .=
\36 u\$\(xlarge\) + *, .\35 u\$\(xlarge\) + *, .\34 u\$\(xlarge\) + *, .\33=
 u\$\(xlarge\) + *, .\32 u\$\(xlarge\) + *, .\31 u\$\(xlarge\) + * { clear:=
 left; }
  .-\31 1u\(xlarge\) { margin-left: 91.6667%; }
  .-\31 0u\(xlarge\) { margin-left: 83.3333%; }
  .-\39 u\(xlarge\) { margin-left: 75%; }
  .-\38 u\(xlarge\) { margin-left: 66.6667%; }
  .-\37 u\(xlarge\) { margin-left: 58.3333%; }
  .-\36 u\(xlarge\) { margin-left: 50%; }
  .-\35 u\(xlarge\) { margin-left: 41.6667%; }
  .-\34 u\(xlarge\) { margin-left: 33.3333%; }
  .-\33 u\(xlarge\) { margin-left: 25%; }
  .-\32 u\(xlarge\) { margin-left: 16.6667%; }
  .-\31 u\(xlarge\) { margin-left: 8.33333%; }
}

@media screen and (max-width: 1280px) {
  .row > * { padding: 0px 0px 0px 1.5em; }
  .row { margin: 0px 0px -1px -1.5em; }
  .row.uniform > * { padding: 1.5em 0px 0px 1.5em; }
  .row.uniform { margin: -1.5em 0px -1px -1.5em; }
  .row.\32 00\% > * { padding: 0px 0px 0px 3em; }
  .row.\32 00\% { margin: 0px 0px -1px -3em; }
  .row.uniform.\32 00\% > * { padding: 3em 0px 0px 3em; }
  .row.uniform.\32 00\% { margin: -3em 0px -1px -3em; }
  .row.\31 50\% > * { padding: 0px 0px 0px 2.25em; }
  .row.\31 50\% { margin: 0px 0px -1px -2.25em; }
  .row.uniform.\31 50\% > * { padding: 2.25em 0px 0px 2.25em; }
  .row.uniform.\31 50\% { margin: -2.25em 0px -1px -2.25em; }
  .row.\35 0\% > * { padding: 0px 0px 0px 0.75em; }
  .row.\35 0\% { margin: 0px 0px -1px -0.75em; }
  .row.uniform.\35 0\% > * { padding: 0.75em 0px 0px 0.75em; }
  .row.uniform.\35 0\% { margin: -0.75em 0px -1px -0.75em; }
  .row.\32 5\% > * { padding: 0px 0px 0px 0.375em; }
  .row.\32 5\% { margin: 0px 0px -1px -0.375em; }
  .row.uniform.\32 5\% > * { padding: 0.375em 0px 0px 0.375em; }
  .row.uniform.\32 5\% { margin: -0.375em 0px -1px -0.375em; }
  .\31 2u\(large\), .\31 2u\$\(large\) { width: 100%; clear: none; margin-l=
eft: 0px; }
  .\31 1u\(large\), .\31 1u\$\(large\) { width: 91.6667%; clear: none; marg=
in-left: 0px; }
  .\31 0u\(large\), .\31 0u\$\(large\) { width: 83.3333%; clear: none; marg=
in-left: 0px; }
  .\39 u\(large\), .\39 u\$\(large\) { width: 75%; clear: none; margin-left=
: 0px; }
  .\38 u\(large\), .\38 u\$\(large\) { width: 66.6667%; clear: none; margin=
-left: 0px; }
  .\37 u\(large\), .\37 u\$\(large\) { width: 58.3333%; clear: none; margin=
-left: 0px; }
  .\36 u\(large\), .\36 u\$\(large\) { width: 50%; clear: none; margin-left=
: 0px; }
  .\35 u\(large\), .\35 u\$\(large\) { width: 41.6667%; clear: none; margin=
-left: 0px; }
  .\34 u\(large\), .\34 u\$\(large\) { width: 33.3333%; clear: none; margin=
-left: 0px; }
  .\33 u\(large\), .\33 u\$\(large\) { width: 25%; clear: none; margin-left=
: 0px; }
  .\32 u\(large\), .\32 u\$\(large\) { width: 16.6667%; clear: none; margin=
-left: 0px; }
  .\31 u\(large\), .\31 u\$\(large\) { width: 8.33333%; clear: none; margin=
-left: 0px; }
  .\31 2u\$\(large\) + *, .\31 1u\$\(large\) + *, .\31 0u\$\(large\) + *, .=
\39 u\$\(large\) + *, .\38 u\$\(large\) + *, .\37 u\$\(large\) + *, .\36 u\=
$\(large\) + *, .\35 u\$\(large\) + *, .\34 u\$\(large\) + *, .\33 u\$\(lar=
ge\) + *, .\32 u\$\(large\) + *, .\31 u\$\(large\) + * { clear: left; }
  .-\31 1u\(large\) { margin-left: 91.6667%; }
  .-\31 0u\(large\) { margin-left: 83.3333%; }
  .-\39 u\(large\) { margin-left: 75%; }
  .-\38 u\(large\) { margin-left: 66.6667%; }
  .-\37 u\(large\) { margin-left: 58.3333%; }
  .-\36 u\(large\) { margin-left: 50%; }
  .-\35 u\(large\) { margin-left: 41.6667%; }
  .-\34 u\(large\) { margin-left: 33.3333%; }
  .-\33 u\(large\) { margin-left: 25%; }
  .-\32 u\(large\) { margin-left: 16.6667%; }
  .-\31 u\(large\) { margin-left: 8.33333%; }
}

@media screen and (max-width: 1024px) {
  .row > * { padding: 0px 0px 0px 1.5em; }
  .row { margin: 0px 0px -1px -1.5em; }
  .row.uniform > * { padding: 1.5em 0px 0px 1.5em; }
  .row.uniform { margin: -1.5em 0px -1px -1.5em; }
  .row.\32 00\% > * { padding: 0px 0px 0px 3em; }
  .row.\32 00\% { margin: 0px 0px -1px -3em; }
  .row.uniform.\32 00\% > * { padding: 3em 0px 0px 3em; }
  .row.uniform.\32 00\% { margin: -3em 0px -1px -3em; }
  .row.\31 50\% > * { padding: 0px 0px 0px 2.25em; }
  .row.\31 50\% { margin: 0px 0px -1px -2.25em; }
  .row.uniform.\31 50\% > * { padding: 2.25em 0px 0px 2.25em; }
  .row.uniform.\31 50\% { margin: -2.25em 0px -1px -2.25em; }
  .row.\35 0\% > * { padding: 0px 0px 0px 0.75em; }
  .row.\35 0\% { margin: 0px 0px -1px -0.75em; }
  .row.uniform.\35 0\% > * { padding: 0.75em 0px 0px 0.75em; }
  .row.uniform.\35 0\% { margin: -0.75em 0px -1px -0.75em; }
  .row.\32 5\% > * { padding: 0px 0px 0px 0.375em; }
  .row.\32 5\% { margin: 0px 0px -1px -0.375em; }
  .row.uniform.\32 5\% > * { padding: 0.375em 0px 0px 0.375em; }
  .row.uniform.\32 5\% { margin: -0.375em 0px -1px -0.375em; }
  .\31 2u\(medium\), .\31 2u\$\(medium\) { width: 100%; clear: none; margin=
-left: 0px; }
  .\31 1u\(medium\), .\31 1u\$\(medium\) { width: 91.6667%; clear: none; ma=
rgin-left: 0px; }
  .\31 0u\(medium\), .\31 0u\$\(medium\) { width: 83.3333%; clear: none; ma=
rgin-left: 0px; }
  .\39 u\(medium\), .\39 u\$\(medium\) { width: 75%; clear: none; margin-le=
ft: 0px; }
  .\38 u\(medium\), .\38 u\$\(medium\) { width: 66.6667%; clear: none; marg=
in-left: 0px; }
  .\37 u\(medium\), .\37 u\$\(medium\) { width: 58.3333%; clear: none; marg=
in-left: 0px; }
  .\36 u\(medium\), .\36 u\$\(medium\) { width: 50%; clear: none; margin-le=
ft: 0px; }
  .\35 u\(medium\), .\35 u\$\(medium\) { width: 41.6667%; clear: none; marg=
in-left: 0px; }
  .\34 u\(medium\), .\34 u\$\(medium\) { width: 33.3333%; clear: none; marg=
in-left: 0px; }
  .\33 u\(medium\), .\33 u\$\(medium\) { width: 25%; clear: none; margin-le=
ft: 0px; }
  .\32 u\(medium\), .\32 u\$\(medium\) { width: 16.6667%; clear: none; marg=
in-left: 0px; }
  .\31 u\(medium\), .\31 u\$\(medium\) { width: 8.33333%; clear: none; marg=
in-left: 0px; }
  .\31 2u\$\(medium\) + *, .\31 1u\$\(medium\) + *, .\31 0u\$\(medium\) + *=
, .\39 u\$\(medium\) + *, .\38 u\$\(medium\) + *, .\37 u\$\(medium\) + *, .=
\36 u\$\(medium\) + *, .\35 u\$\(medium\) + *, .\34 u\$\(medium\) + *, .\33=
 u\$\(medium\) + *, .\32 u\$\(medium\) + *, .\31 u\$\(medium\) + * { clear:=
 left; }
  .-\31 1u\(medium\) { margin-left: 91.6667%; }
  .-\31 0u\(medium\) { margin-left: 83.3333%; }
  .-\39 u\(medium\) { margin-left: 75%; }
  .-\38 u\(medium\) { margin-left: 66.6667%; }
  .-\37 u\(medium\) { margin-left: 58.3333%; }
  .-\36 u\(medium\) { margin-left: 50%; }
  .-\35 u\(medium\) { margin-left: 41.6667%; }
  .-\34 u\(medium\) { margin-left: 33.3333%; }
  .-\33 u\(medium\) { margin-left: 25%; }
  .-\32 u\(medium\) { margin-left: 16.6667%; }
  .-\31 u\(medium\) { margin-left: 8.33333%; }
}

@media screen and (max-width: 736px) {
  .row > * { padding: 0px 0px 0px 1.25em; }
  .row { margin: 0px 0px -1px -1.25em; }
  .row.uniform > * { padding: 1.25em 0px 0px 1.25em; }
  .row.uniform { margin: -1.25em 0px -1px -1.25em; }
  .row.\32 00\% > * { padding: 0px 0px 0px 2.5em; }
  .row.\32 00\% { margin: 0px 0px -1px -2.5em; }
  .row.uniform.\32 00\% > * { padding: 2.5em 0px 0px 2.5em; }
  .row.uniform.\32 00\% { margin: -2.5em 0px -1px -2.5em; }
  .row.\31 50\% > * { padding: 0px 0px 0px 1.875em; }
  .row.\31 50\% { margin: 0px 0px -1px -1.875em; }
  .row.uniform.\31 50\% > * { padding: 1.875em 0px 0px 1.875em; }
  .row.uniform.\31 50\% { margin: -1.875em 0px -1px -1.875em; }
  .row.\35 0\% > * { padding: 0px 0px 0px 0.625em; }
  .row.\35 0\% { margin: 0px 0px -1px -0.625em; }
  .row.uniform.\35 0\% > * { padding: 0.625em 0px 0px 0.625em; }
  .row.uniform.\35 0\% { margin: -0.625em 0px -1px -0.625em; }
  .row.\32 5\% > * { padding: 0px 0px 0px 0.3125em; }
  .row.\32 5\% { margin: 0px 0px -1px -0.3125em; }
  .row.uniform.\32 5\% > * { padding: 0.3125em 0px 0px 0.3125em; }
  .row.uniform.\32 5\% { margin: -0.3125em 0px -1px -0.3125em; }
  .\31 2u\(small\), .\31 2u\$\(small\) { width: 100%; clear: none; margin-l=
eft: 0px; }
  .\31 1u\(small\), .\31 1u\$\(small\) { width: 91.6667%; clear: none; marg=
in-left: 0px; }
  .\31 0u\(small\), .\31 0u\$\(small\) { width: 83.3333%; clear: none; marg=
in-left: 0px; }
  .\39 u\(small\), .\39 u\$\(small\) { width: 75%; clear: none; margin-left=
: 0px; }
  .\38 u\(small\), .\38 u\$\(small\) { width: 66.6667%; clear: none; margin=
-left: 0px; }
  .\37 u\(small\), .\37 u\$\(small\) { width: 58.3333%; clear: none; margin=
-left: 0px; }
  .\36 u\(small\), .\36 u\$\(small\) { width: 50%; clear: none; margin-left=
: 0px; }
  .\35 u\(small\), .\35 u\$\(small\) { width: 41.6667%; clear: none; margin=
-left: 0px; }
  .\34 u\(small\), .\34 u\$\(small\) { width: 33.3333%; clear: none; margin=
-left: 0px; }
  .\33 u\(small\), .\33 u\$\(small\) { width: 25%; clear: none; margin-left=
: 0px; }
  .\32 u\(small\), .\32 u\$\(small\) { width: 16.6667%; clear: none; margin=
-left: 0px; }
  .\31 u\(small\), .\31 u\$\(small\) { width: 8.33333%; clear: none; margin=
-left: 0px; }
  .\31 2u\$\(small\) + *, .\31 1u\$\(small\) + *, .\31 0u\$\(small\) + *, .=
\39 u\$\(small\) + *, .\38 u\$\(small\) + *, .\37 u\$\(small\) + *, .\36 u\=
$\(small\) + *, .\35 u\$\(small\) + *, .\34 u\$\(small\) + *, .\33 u\$\(sma=
ll\) + *, .\32 u\$\(small\) + *, .\31 u\$\(small\) + * { clear: left; }
  .-\31 1u\(small\) { margin-left: 91.6667%; }
  .-\31 0u\(small\) { margin-left: 83.3333%; }
  .-\39 u\(small\) { margin-left: 75%; }
  .-\38 u\(small\) { margin-left: 66.6667%; }
  .-\37 u\(small\) { margin-left: 58.3333%; }
  .-\36 u\(small\) { margin-left: 50%; }
  .-\35 u\(small\) { margin-left: 41.6667%; }
  .-\34 u\(small\) { margin-left: 33.3333%; }
  .-\33 u\(small\) { margin-left: 25%; }
  .-\32 u\(small\) { margin-left: 16.6667%; }
  .-\31 u\(small\) { margin-left: 8.33333%; }
}

@media screen and (max-width: 480px) {
  .row > * { padding: 0px 0px 0px 1.25em; }
  .row { margin: 0px 0px -1px -1.25em; }
  .row.uniform > * { padding: 1.25em 0px 0px 1.25em; }
  .row.uniform { margin: -1.25em 0px -1px -1.25em; }
  .row.\32 00\% > * { padding: 0px 0px 0px 2.5em; }
  .row.\32 00\% { margin: 0px 0px -1px -2.5em; }
  .row.uniform.\32 00\% > * { padding: 2.5em 0px 0px 2.5em; }
  .row.uniform.\32 00\% { margin: -2.5em 0px -1px -2.5em; }
  .row.\31 50\% > * { padding: 0px 0px 0px 1.875em; }
  .row.\31 50\% { margin: 0px 0px -1px -1.875em; }
  .row.uniform.\31 50\% > * { padding: 1.875em 0px 0px 1.875em; }
  .row.uniform.\31 50\% { margin: -1.875em 0px -1px -1.875em; }
  .row.\35 0\% > * { padding: 0px 0px 0px 0.625em; }
  .row.\35 0\% { margin: 0px 0px -1px -0.625em; }
  .row.uniform.\35 0\% > * { padding: 0.625em 0px 0px 0.625em; }
  .row.uniform.\35 0\% { margin: -0.625em 0px -1px -0.625em; }
  .row.\32 5\% > * { padding: 0px 0px 0px 0.3125em; }
  .row.\32 5\% { margin: 0px 0px -1px -0.3125em; }
  .row.uniform.\32 5\% > * { padding: 0.3125em 0px 0px 0.3125em; }
  .row.uniform.\32 5\% { margin: -0.3125em 0px -1px -0.3125em; }
  .\31 2u\(xsmall\), .\31 2u\$\(xsmall\) { width: 100%; clear: none; margin=
-left: 0px; }
  .\31 1u\(xsmall\), .\31 1u\$\(xsmall\) { width: 91.6667%; clear: none; ma=
rgin-left: 0px; }
  .\31 0u\(xsmall\), .\31 0u\$\(xsmall\) { width: 83.3333%; clear: none; ma=
rgin-left: 0px; }
  .\39 u\(xsmall\), .\39 u\$\(xsmall\) { width: 75%; clear: none; margin-le=
ft: 0px; }
  .\38 u\(xsmall\), .\38 u\$\(xsmall\) { width: 66.6667%; clear: none; marg=
in-left: 0px; }
  .\37 u\(xsmall\), .\37 u\$\(xsmall\) { width: 58.3333%; clear: none; marg=
in-left: 0px; }
  .\36 u\(xsmall\), .\36 u\$\(xsmall\) { width: 50%; clear: none; margin-le=
ft: 0px; }
  .\35 u\(xsmall\), .\35 u\$\(xsmall\) { width: 41.6667%; clear: none; marg=
in-left: 0px; }
  .\34 u\(xsmall\), .\34 u\$\(xsmall\) { width: 33.3333%; clear: none; marg=
in-left: 0px; }
  .\33 u\(xsmall\), .\33 u\$\(xsmall\) { width: 25%; clear: none; margin-le=
ft: 0px; }
  .\32 u\(xsmall\), .\32 u\$\(xsmall\) { width: 16.6667%; clear: none; marg=
in-left: 0px; }
  .\31 u\(xsmall\), .\31 u\$\(xsmall\) { width: 8.33333%; clear: none; marg=
in-left: 0px; }
  .\31 2u\$\(xsmall\) + *, .\31 1u\$\(xsmall\) + *, .\31 0u\$\(xsmall\) + *=
, .\39 u\$\(xsmall\) + *, .\38 u\$\(xsmall\) + *, .\37 u\$\(xsmall\) + *, .=
\36 u\$\(xsmall\) + *, .\35 u\$\(xsmall\) + *, .\34 u\$\(xsmall\) + *, .\33=
 u\$\(xsmall\) + *, .\32 u\$\(xsmall\) + *, .\31 u\$\(xsmall\) + * { clear:=
 left; }
  .-\31 1u\(xsmall\) { margin-left: 91.6667%; }
  .-\31 0u\(xsmall\) { margin-left: 83.3333%; }
  .-\39 u\(xsmall\) { margin-left: 75%; }
  .-\38 u\(xsmall\) { margin-left: 66.6667%; }
  .-\37 u\(xsmall\) { margin-left: 58.3333%; }
  .-\36 u\(xsmall\) { margin-left: 50%; }
  .-\35 u\(xsmall\) { margin-left: 41.6667%; }
  .-\34 u\(xsmall\) { margin-left: 33.3333%; }
  .-\33 u\(xsmall\) { margin-left: 25%; }
  .-\32 u\(xsmall\) { margin-left: 16.6667%; }
  .-\31 u\(xsmall\) { margin-left: 8.33333%; }
}

body { background: rgb(255, 255, 255); }

body, input, select, textarea { color: rgb(136, 136, 136); font-family: Lat=
o, sans-serif; font-size: 16pt; font-weight: 400; line-height: 1.75em; }

a { transition: color 0.2s ease-in-out, border-color 0.2s ease-in-out; bord=
er-bottom: 1px dotted rgb(63, 150, 183); color: inherit; text-decoration: n=
one; }

a:hover { border-bottom-color: transparent; color: rgb(63, 150, 183) !impor=
tant; }

strong, b { color: rgb(119, 119, 119); font-weight: 700; }

em, i { font-style: italic; }

p { margin: 0px 0px 2.25em; }

h1, h2, h3, h4, h5, h6 { color: rgb(119, 119, 119); font-weight: 700; line-=
height: 1em; margin: 0px 0px 0.5625em; }

h1 a, h2 a, h3 a, h4 a, h5 a, h6 a { border: 0px; color: inherit; text-deco=
ration: none; }

h2 { font-size: 2em; line-height: 1.5em; }

h3 { font-size: 1.75em; line-height: 1.5em; }

h4 { font-size: 1.25em; line-height: 1.5em; }

h5 { font-size: 0.9em; line-height: 1.5em; }

h6 { font-size: 0.7em; line-height: 1.5em; }

sub { font-size: 0.8em; position: relative; top: 0.5em; }

sup { font-size: 0.8em; position: relative; top: -0.5em; }

hr { border-width: 0px 0px 2px; border-top-style: initial; border-right-sty=
le: initial; border-left-style: initial; border-top-color: initial; border-=
right-color: initial; border-left-color: initial; border-image: initial; bo=
rder-bottom-style: solid; border-bottom-color: rgb(244, 244, 244); margin: =
2.25em 0px; }

hr.major { margin: 3.375em 0px; }

blockquote { border-left: 8px solid rgb(228, 228, 228); font-style: italic;=
 margin: 0px 0px 2.25em; padding: 0.5em 0px 0.5em 2em; }

code { background: rgb(85, 85, 85); border-radius: 5px; color: rgb(255, 255=
, 255); font-family: "Source Code Pro", monospace; font-size: 0.9em; margin=
: 0px 0.25em; padding: 0.25em 0.65em; }

pre { font-family: "Source Code Pro", monospace; font-size: 0.9em; margin: =
0px 0px 2.25em; }

pre code { display: block; line-height: 1.5em; overflow-x: auto; padding: 1=
em 1.5em; }

.align-left { text-align: left; }

.align-center { text-align: center; }

.align-right { text-align: right; }

section.special, article.special { text-align: center; }

header p { color: rgb(170, 170, 170); position: relative; margin: 0px 0px 1=
.6875em; }

header h2 + p { font-size: 1.25em; margin-top: -0.5em; line-height: 1.5em; =
}

header h3 + p { font-size: 1.1em; margin-top: -0.35em; line-height: 1.5em; =
}

header h4 + p, header h5 + p, header h6 + p { font-size: 0.9em; margin-top:=
 -0.25em; line-height: 1.5em; }

header.major h2 { color: rgb(63, 150, 183); font-size: 2.5em; }

header.major h2 + p { color: rgb(119, 119, 119); font-size: 1.25em; font-we=
ight: 700; margin-top: -0.75em; }

form { margin: 0px 0px 2.25em; }

label { color: rgb(119, 119, 119); display: block; font-size: 0.9em; font-w=
eight: 700; margin: 0px 0px 1.125em; }

input[type=3D"text"], input[type=3D"password"], input[type=3D"email"], sele=
ct, textarea { appearance: none; border-radius: 5px; border: 2px solid rgb(=
228, 228, 228); color: inherit; display: block; outline: 0px; padding: 0px =
1em; text-decoration: none; width: 100%; }

input[type=3D"text"]:invalid, input[type=3D"password"]:invalid, input[type=
=3D"email"]:invalid, select:invalid, textarea:invalid { box-shadow: none; }

input[type=3D"text"]:focus, input[type=3D"password"]:focus, input[type=3D"e=
mail"]:focus, select:focus, textarea:focus { border-color: rgb(63, 150, 183=
); }

.select-wrapper { text-decoration: none; display: block; position: relative=
; }

.select-wrapper::before { -webkit-font-smoothing: antialiased; font-family:=
 FontAwesome; font-style: normal; font-weight: normal; text-transform: none=
 !important; }

.select-wrapper::before { color: rgb(228, 228, 228); content: "=EF=81=B8"; =
display: block; height: 2.75em; line-height: 2.75em; pointer-events: none; =
position: absolute; right: 0px; text-align: center; top: 0px; width: 2.75em=
; }

input[type=3D"text"], input[type=3D"password"], input[type=3D"email"], sele=
ct { height: 2.75em; }

textarea { padding: 0.75em 1em; }

input[type=3D"checkbox"], input[type=3D"radio"] { appearance: none; display=
: block; float: left; margin-right: -2em; opacity: 0; width: 1em; z-index: =
-1; }

input[type=3D"checkbox"] + label, input[type=3D"radio"] + label { text-deco=
ration: none; color: rgb(136, 136, 136); cursor: pointer; display: inline-b=
lock; font-size: 1em; font-weight: 400; padding-left: 2.4em; padding-right:=
 0.75em; position: relative; }

input[type=3D"checkbox"] + label::before, input[type=3D"radio"] + label::be=
fore { -webkit-font-smoothing: antialiased; font-family: FontAwesome; font-=
style: normal; font-weight: normal; text-transform: none !important; }

input[type=3D"checkbox"] + label::before, input[type=3D"radio"] + label::be=
fore { background: rgb(250, 250, 250); border-radius: 5px; border: 2px soli=
d rgb(228, 228, 228); content: ""; display: inline-block; height: 1.65em; l=
eft: 0px; line-height: 1.58125em; position: absolute; text-align: center; t=
op: 0px; width: 1.65em; }

input[type=3D"checkbox"]:checked + label::before, input[type=3D"radio"]:che=
cked + label::before { background: rgb(152, 152, 152); border-color: rgb(15=
2, 152, 152); color: rgb(255, 255, 255); content: "=EF=80=8C"; }

input[type=3D"checkbox"]:focus + label::before, input[type=3D"radio"]:focus=
 + label::before { border-color: rgb(63, 150, 183); }

input[type=3D"checkbox"] + label::before { border-radius: 5px; }

input[type=3D"radio"] + label::before { border-radius: 100%; }

::-webkit-input-placeholder { font-style: italic; opacity: 1; color: rgb(17=
0, 170, 170) !important; }

.formerize-placeholder { font-style: italic; opacity: 1; color: rgb(170, 17=
0, 170) !important; }

.box { border-radius: 5px; border: 2px solid rgb(228, 228, 228); margin-bot=
tom: 2.25em; padding: 1.5em; }

.box > :last-child, .box > :last-child > :last-child, .box > :last-child > =
:last-child > :last-child { margin-bottom: 0px; }

.box.alt { border: 0px; border-radius: 0px; padding: 0px; }

.icon { text-decoration: none; border-bottom: none; position: relative; }

.icon::before { -webkit-font-smoothing: antialiased; font-family: FontAweso=
me; font-style: normal; font-weight: normal; text-transform: none !importan=
t; }

.icon > .label { display: none; }

.image { border-radius: 5px; border: 0px; display: inline-block; position: =
relative; }

.image img { border-radius: 5px; display: block; }

.image.left { float: left; margin: 0px 2.5em 2em 0px; top: 0.25em; }

.image.right { float: right; margin: 0px 0px 2em 2.5em; top: 0.25em; }

.image.fit { display: block; margin: 0px 0px 2.25em; width: 100%; }

.image.fit img { display: block; width: 100%; }

.image.avatar { border-radius: 100%; overflow: hidden; }

.image.avatar img { border-radius: 100%; display: block; width: 100%; }

ol { list-style: decimal; margin: 0px 0px 2.25em; padding-left: 1.25em; }

ol li { padding-left: 0.25em; }

ul { list-style: disc; margin: 0px 0px 2.25em; padding-left: 1em; }

ul li { padding-left: 0.5em; }

ul.alt { list-style: none; padding-left: 0px; }

ul.alt li { border-top: 2px solid rgb(244, 244, 244); padding: 0.5em 0px; }

ul.alt li:first-child { border-top: 0px; padding-top: 0px; }

ul.feature-icons { list-style: none; padding-left: 0px; }

ul.feature-icons li { text-decoration: none; display: inline-block; margin:=
 0px 0px 1.6875em; padding: 0.35em 0px 0px 3.5em; position: relative; verti=
cal-align: top; width: 48%; }

ul.feature-icons li::before { -webkit-font-smoothing: antialiased; font-fam=
ily: FontAwesome; font-style: normal; font-weight: normal; text-transform: =
none !important; }

ul.feature-icons li::before { background: rgb(63, 150, 183); border-radius:=
 100%; color: rgb(255, 255, 255); display: block; height: 2.5em; left: 0px;=
 line-height: 2.5em; position: absolute; text-align: center; top: 0px; widt=
h: 2.5em; }

ul.icons { cursor: default; list-style: none; padding-left: 0px; }

ul.icons li { display: inline-block; padding: 0px 1em 0px 0px; }

ul.icons li:last-child { padding-right: 0px !important; }

ul.icons li .icon::before { font-size: 1.25em; }

ul.actions { cursor: default; list-style: none; padding-left: 0px; }

ul.actions li { display: inline-block; padding: 0px 1.125em 0px 0px; vertic=
al-align: middle; }

ul.actions li:last-child { padding-right: 0px; }

ul.actions.small li { padding: 0px 0.5625em 0px 0px; }

ul.actions.vertical li { display: block; padding: 1.125em 0px 0px; }

ul.actions.vertical li:first-child { padding-top: 0px; }

ul.actions.vertical li > * { margin-bottom: 0px; }

ul.actions.vertical.small li { padding: 0.5625em 0px 0px; }

ul.actions.vertical.small li:first-child { padding-top: 0px; }

ul.actions.fit { display: table; margin-left: -1.125em; padding: 0px; table=
-layout: fixed; width: calc(100% + 1.125em); }

ul.actions.fit li { display: table-cell; padding: 0px 0px 0px 1.125em; }

ul.actions.fit li > * { margin-bottom: 0px; }

ul.actions.fit.small { margin-left: -0.5625em; width: calc(100% + 0.5625em)=
; }

ul.actions.fit.small li { padding: 0px 0px 0px 0.5625em; }

dl { margin: 0px 0px 2.25em; }

.table-wrapper { overflow-x: auto; }

table { margin: 0px 0px 2.25em; width: 100%; }

table tbody tr { border-width: 2px 0px; border-top-style: solid; border-bot=
tom-style: solid; border-top-color: rgb(244, 244, 244); border-bottom-color=
: rgb(244, 244, 244); border-image: initial; border-left-style: initial; bo=
rder-left-color: initial; border-right-style: initial; border-right-color: =
initial; }

table tbody tr:nth-child(2n+1) { background-color: rgb(250, 250, 250); }

table td { padding: 0.75em; }

table th { color: rgb(119, 119, 119); font-size: 0.9em; font-weight: 700; p=
adding: 0px 0.75em 0.75em; text-align: left; }

table thead { border-bottom: 4px solid rgb(228, 228, 228); }

table tfoot { border-top: 4px solid rgb(228, 228, 228); }

table.alt { border-collapse: separate; }

table.alt tbody tr td { border-width: 0px 2px 2px 0px; border-style: solid;=
 border-color: rgb(228, 228, 228); border-image: initial; }

table.alt tbody tr td:first-child { border-left-width: 2px; }

table.alt tbody tr:first-child td { border-top-width: 2px; }

table.alt thead { border-bottom: 0px; }

table.alt tfoot { border-top: 0px; }

input[type=3D"submit"], input[type=3D"reset"], input[type=3D"button"], .but=
ton { appearance: none; transition: background-color 0.2s ease-in-out, colo=
r 0.2s ease-in-out; background-color: rgb(152, 152, 152); border-radius: 5p=
x; border: 0px; cursor: pointer; display: inline-block; font-weight: 700; h=
eight: 2.75em; line-height: 2.75em; padding: 0px 1.5em; text-align: center;=
 text-decoration: none; white-space: nowrap; color: rgb(255, 255, 255) !imp=
ortant; }

input[type=3D"submit"]:hover, input[type=3D"reset"]:hover, input[type=3D"bu=
tton"]:hover, .button:hover { background-color: rgb(165, 165, 165); color: =
rgb(255, 255, 255) !important; }

input[type=3D"submit"]:active, input[type=3D"reset"]:active, input[type=3D"=
button"]:active, .button:active { background-color: rgb(139, 139, 139); }

input[type=3D"submit"].icon, input[type=3D"reset"].icon, input[type=3D"butt=
on"].icon, .button.icon { padding-left: 1.35em; }

input[type=3D"submit"].icon::before, input[type=3D"reset"].icon::before, in=
put[type=3D"button"].icon::before, .button.icon::before { margin-right: 0.5=
em; }

input[type=3D"submit"].fit, input[type=3D"reset"].fit, input[type=3D"button=
"].fit, .button.fit { display: block; margin: 0px 0px 1.125em; width: 100%;=
 }

input[type=3D"submit"].small, input[type=3D"reset"].small, input[type=3D"bu=
tton"].small, .button.small { font-size: 0.8em; }

input[type=3D"submit"].big, input[type=3D"reset"].big, input[type=3D"button=
"].big, .button.big { font-size: 1.35em; }

input[type=3D"submit"].alt, input[type=3D"reset"].alt, input[type=3D"button=
"].alt, .button.alt { background-color: transparent; box-shadow: rgb(228, 2=
28, 228) 0px 0px 0px 2px inset; color: rgb(119, 119, 119) !important; }

input[type=3D"submit"].alt:hover, input[type=3D"reset"].alt:hover, input[ty=
pe=3D"button"].alt:hover, .button.alt:hover { background-color: rgb(244, 24=
4, 244); color: rgb(119, 119, 119) !important; }

input[type=3D"submit"].alt:active, input[type=3D"reset"].alt:active, input[=
type=3D"button"].alt:active, .button.alt:active { background-color: rgb(234=
, 234, 234); }

input[type=3D"submit"].alt.icon::before, input[type=3D"reset"].alt.icon::be=
fore, input[type=3D"button"].alt.icon::before, .button.alt.icon::before { c=
olor: rgb(170, 170, 170); }

input[type=3D"submit"].special, input[type=3D"reset"].special, input[type=
=3D"button"].special, .button.special { background-color: rgb(63, 150, 183)=
; color: rgb(255, 255, 255) !important; }

input[type=3D"submit"].special:hover, input[type=3D"reset"].special:hover, =
input[type=3D"button"].special:hover, .button.special:hover { background-co=
lor: rgb(94, 166, 208); }

input[type=3D"submit"].special:active, input[type=3D"reset"].special:active=
, input[type=3D"button"].special:active, .button.special:active { backgroun=
d-color: rgb(57, 194, 157); }

input[type=3D"submit"].disabled, input[type=3D"submit"]:disabled, input[typ=
e=3D"reset"].disabled, input[type=3D"reset"]:disabled, input[type=3D"button=
"].disabled, input[type=3D"button"]:disabled, .button.disabled, .button:dis=
abled { box-shadow: rgba(0, 0, 0, 0.15) 0px -0.15em 0px 0px inset; cursor: =
default; opacity: 0.25; background-color: rgb(136, 136, 136) !important; co=
lor: rgb(255, 255, 255) !important; }

.features article { border-top: 3px solid rgb(244, 244, 244); margin-bottom=
: 2.25em; padding-top: 2.25em; }

.features article:first-child { border-top: 0px; padding-top: 0px; }

.features article .image { display: inline-block; padding-right: 2.5em; ver=
tical-align: middle; width: 48%; }

.features article .image img { display: block; width: 100%; }

.features article .inner { display: inline-block; vertical-align: middle; w=
idth: 50%; }

.features article .inner > :last-child { margin-bottom: 0px; }

#header { display: flex; flex-direction: column; justify-content: space-bet=
ween; background: rgb(63, 150, 183); color: rgb(209, 229, 241); height: 100=
%; overflow-y: auto; position: fixed; text-align: center; top: 0px; width: =
23em; right: 0px; }

#header h1, #header h2, #header h3, #header h4, #header h5, #header h6 { co=
lor: rgb(255, 255, 255); }

#header h1 a, #header h2 a, #header h3 a, #header h4 a, #header h5 a, #head=
er h6 a { color: rgb(255, 255, 255); }

#header header p { color: rgb(182, 220, 233); }

#header a { color: rgb(209, 235, 241); }

#header a:hover { color: rgb(255, 255, 255) !important; }

#header > header { flex-shrink: 0; padding: 3em; }

#header > header .avatar { display: block; margin: 0px auto 2.25em; width: =
8em; }

#header > header h1 { font-size: 1.75em; margin: 0px; }

#header > header p { color: rgb(209, 235, 241); font-style: italic; margin:=
 1em 0px 0px; }

#header > footer { flex-shrink: 0; bottom: 0px; left: 0px; padding: 2em; wi=
dth: 100%; }

#header > footer .icons { margin: 0px; }

#header > footer .icons li a { color: rgb(182, 220, 233); }

#header > nav { flex-grow: 1; }

#header > nav ul { list-style: none; margin: 0px; padding: 0px; }

#header > nav ul li { border-top: 2px solid rgb(92, 175, 207); display: blo=
ck; padding: 0px; }

#header > nav ul li a { transition: none; border: 0px; display: block; padd=
ing: 0.85em 0px; text-decoration: none; color: rgb(255, 255, 255) !importan=
t; }

#header > nav ul li a.active { background: rgb(255, 255, 255); color: rgb(7=
4, 147, 202) !important; }

#header > nav ul li:first-child { border-top: 0px; }

#wrapper { background: rgb(255, 255, 255); padding-right: 23em; }

#main > section { border-top: 6px solid rgb(244, 244, 244); }

#main > section > .container { padding: 6em 0px 4em; }

#main > section:first-child { border-top: 0px; }

#footer { background: rgb(250, 250, 250); border-top: 0px; color: rgb(192, =
192, 192); overflow: hidden; padding: 4em 0px 2em; }

#footer .copyright { line-height: 1em; list-style: none; padding: 0px; }

#footer .copyright li { border-left: 1px solid rgb(212, 212, 212); display:=
 inline-block; font-size: 0.8em; margin-left: 1em; padding-left: 1em; }

#footer .copyright li:first-child { border-left: 0px; margin-left: 0px; pad=
ding-left: 0px; }

#footer .copyright li a { color: inherit; }

@media screen and (max-width: 1680px) {
  body, input, select, textarea { font-size: 13pt; }
  #header { width: 21em; }
  #header > header { padding: 2em; }
  #header > footer { padding: 1.5em; }
  #wrapper { padding-right: 21em; }
  #main > section > .container { padding: 4em 0px 2em; }
}

@media screen and (max-width: 1280px) {
  body, input, select, textarea { font-size: 11pt; }
  #header { width: 20em; }
  #wrapper { padding-right: 20em; }
}

#titleBar { display: none; }

@media screen and (max-width: 1024px) {
  html, body { overflow-x: hidden; }
  body, input, select, textarea { font-size: 12pt; }
  .image.left, .image.right { max-width: 40%; }
  .image.left img, .image.right img { width: 100%; }
  #header { backface-visibility: hidden; transition: transform 0.5s; displa=
y: block; height: 100%; overflow-y: auto; position: fixed; top: 0px; width:=
 23em; z-index: 10002; transform: translateX(23em); right: 0px; }
  #header > footer { inset: auto; margin: 0.5em 0px 0px; position: relative=
; }
  #wrapper { backface-visibility: hidden; transition: transform 0.5s; paddi=
ng: 44px 0px 1px; }
  #titleBar { backface-visibility: hidden; transition: transform 0.5s; disp=
lay: block; height: 44px; left: 0px; position: fixed; top: 0px; width: 100%=
; z-index: 10001; background: rgb(34, 34, 34); color: rgb(255, 255, 255); m=
in-width: 320px; }
  #titleBar .title { color: rgb(255, 255, 255); display: block; font-weight=
: 700; height: 44px; line-height: 44px; padding: 0px 1em; width: 100%; text=
-align: left; }
  #titleBar .title a { border: 0px; text-decoration: none; }
  #titleBar .toggle { text-decoration: none; height: 4em; position: absolut=
e; top: 0px; width: 6em; border: 0px; outline: 0px; right: 0px; }
  #titleBar .toggle::before { -webkit-font-smoothing: antialiased; font-fam=
ily: FontAwesome; font-style: normal; font-weight: normal; text-transform: =
none !important; }
  #titleBar .toggle::before { background: rgb(63, 150, 183); color: rgb(255=
, 255, 255); content: "=EF=83=89"; display: block; font-size: 18px; height:=
 44px; line-height: 44px; position: absolute; text-align: center; top: 0px;=
 width: 64px; right: 0px; }
  body.header-visible #wrapper, body.header-visible #titleBar { transform: =
translateX(-23em); }
  body.header-visible #header { transform: translateX(0px); }
}

@media screen and (max-width: 736px) {
  body, input, select, textarea { font-size: 12pt; }
  h1 br, h2 br, h3 br, h4 br, h5 br, h6 br { display: none; }
  h2 { font-size: 1.75em; }
  h3 { font-size: 1.5em; }
  h4 { font-size: 1em; }
  .image.left { margin: 0px 1.5em 1em 0px; }
  .image.right { margin: 0px 0px 1em 1.5em; }
  header br { display: none; }
  header.major h2 { font-size: 2.5em; }
  header.major h2 + p { font-size: 1.5em; }
  .features article .image { display: block; margin: 0px 0px 2.25em; paddin=
g-right: 0px; width: 100%; }
  .features article .inner { display: block; width: 100%; }
  #header { width: 17em; transform: translateX(17em); right: 0px; }
  #header > header { padding: 2em; }
  #header > header .avatar { margin: 0px auto 1.6875em; width: 6em; }
  #header > header h1 { font-size: 1.5em; }
  #header > header p { margin: 1em 0px 0px; }
  #header > footer { padding: 1.5em; }
  #main > section > .container { padding: 2em 0px 0px; }
  #footer { text-align: center; }
  #footer .copyright li { border-left: 0px; display: block; line-height: 1.=
75em; margin: 0.75em 0px 0px; padding-left: 0px; }
  #footer .copyright li:first-child { margin-top: 0px; }
  #titleBar .toggle { height: 4em; width: 6em; }
  #titleBar .toggle::before { font-size: 14px; width: 44px; }
  body.header-visible #wrapper, body.header-visible #titleBar { transform: =
translateX(-17em); }
}

@media screen and (max-width: 480px) {
  html, body { min-width: 320px; }
  body, input, select, textarea { font-size: 12pt; }
  ul.actions { margin: 0px 0px 2.25em; }
  ul.actions li { display: block; padding: 1.125em 0px 0px; text-align: cen=
ter; width: 100%; }
  ul.actions li:first-child { padding-top: 0px; }
  ul.actions li > * { width: 100%; margin: 0px !important; }
  ul.actions li > .icon::before { margin-left: -2em; }
  ul.actions.small li { padding: 0.5625em 0px 0px; }
  ul.actions.small li:first-child { padding-top: 0px; }
  ul.feature-icons li { display: block; width: 100%; }
  input[type=3D"submit"], input[type=3D"reset"], input[type=3D"button"], .b=
utton { padding: 0px; }
}
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/theme/readonly/assets/css/font-awesome.min.css

@charset "utf-8";

@font-face { font-family: FontAwesome; src: url("../fonts/fontawesome-webfo=
nt.woff2?v=3D4.6.3") format("woff2"), url("../fonts/fontawesome-webfont.wof=
f?v=3D4.6.3") format("woff"), url("../fonts/fontawesome-webfont.ttf?v=3D4.6=
.3") format("truetype"); font-weight: normal; font-style: normal; }

.fa { display: inline-block; font-style: normal; font-variant: normal; font=
-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-fea=
ture-settings: normal; font-variation-settings: normal; font-weight: normal=
; font-stretch: normal; line-height: 1; font-family: FontAwesome; font-size=
: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased; }

.fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -15%; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-fw { width: 1.28571em; text-align: center; }

.fa-ul { padding-left: 0px; margin-left: 2.14286em; list-style-type: none; =
}

.fa-ul > li { position: relative; }

.fa-li { position: absolute; left: -2.14286em; width: 2.14286em; top: 0.142=
857em; text-align: center; }

.fa-li.fa-lg { left: -1.85714em; }

.fa-border { padding: 0.2em 0.25em 0.15em; border: 0.08em solid rgb(238, 23=
8, 238); border-radius: 0.1em; }

.fa-pull-left { float: left; }

.fa-pull-right { float: right; }

.fa.fa-pull-left { margin-right: 0.3em; }

.fa.fa-pull-right { margin-left: 0.3em; }

.pull-right { float: right; }

.pull-left { float: left; }

.fa.pull-left { margin-right: 0.3em; }

.fa.pull-right { margin-left: 0.3em; }

.fa-spin { animation: 2s linear 0s infinite normal none running fa-spin; }

.fa-pulse { animation: 1s steps(8) 0s infinite normal none running fa-spin;=
 }

@-webkit-keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

@keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

.fa-rotate-90 { transform: rotate(90deg); }

.fa-rotate-180 { transform: rotate(180deg); }

.fa-rotate-270 { transform: rotate(270deg); }

.fa-flip-horizontal { transform: scale(-1, 1); }

.fa-flip-vertical { transform: scale(1, -1); }

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-=
flip-horizontal, :root .fa-flip-vertical { filter: none; }

.fa-stack { position: relative; display: inline-block; width: 2em; height: =
2em; line-height: 2em; vertical-align: middle; }

.fa-stack-1x, .fa-stack-2x { position: absolute; left: 0px; width: 100%; te=
xt-align: center; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: rgb(255, 255, 255); }

.fa-glass::before { content: "=EF=80=80"; }

.fa-music::before { content: "=EF=80=81"; }

.fa-search::before { content: "=EF=80=82"; }

.fa-envelope-o::before { content: "=EF=80=83"; }

.fa-heart::before { content: "=EF=80=84"; }

.fa-star::before { content: "=EF=80=85"; }

.fa-star-o::before { content: "=EF=80=86"; }

.fa-user::before { content: "=EF=80=87"; }

.fa-film::before { content: "=EF=80=88"; }

.fa-th-large::before { content: "=EF=80=89"; }

.fa-th::before { content: "=EF=80=8A"; }

.fa-th-list::before { content: "=EF=80=8B"; }

.fa-check::before { content: "=EF=80=8C"; }

.fa-remove::before, .fa-close::before, .fa-times::before { content: "=EF=80=
=8D"; }

.fa-search-plus::before { content: "=EF=80=8E"; }

.fa-search-minus::before { content: "=EF=80=90"; }

.fa-power-off::before { content: "=EF=80=91"; }

.fa-signal::before { content: "=EF=80=92"; }

.fa-gear::before, .fa-cog::before { content: "=EF=80=93"; }

.fa-trash-o::before { content: "=EF=80=94"; }

.fa-home::before { content: "=EF=80=95"; }

.fa-file-o::before { content: "=EF=80=96"; }

.fa-clock-o::before { content: "=EF=80=97"; }

.fa-road::before { content: "=EF=80=98"; }

.fa-download::before { content: "=EF=80=99"; }

.fa-arrow-circle-o-down::before { content: "=EF=80=9A"; }

.fa-arrow-circle-o-up::before { content: "=EF=80=9B"; }

.fa-inbox::before { content: "=EF=80=9C"; }

.fa-play-circle-o::before { content: "=EF=80=9D"; }

.fa-rotate-right::before, .fa-repeat::before { content: "=EF=80=9E"; }

.fa-refresh::before { content: "=EF=80=A1"; }

.fa-list-alt::before { content: "=EF=80=A2"; }

.fa-lock::before { content: "=EF=80=A3"; }

.fa-flag::before { content: "=EF=80=A4"; }

.fa-headphones::before { content: "=EF=80=A5"; }

.fa-volume-off::before { content: "=EF=80=A6"; }

.fa-volume-down::before { content: "=EF=80=A7"; }

.fa-volume-up::before { content: "=EF=80=A8"; }

.fa-qrcode::before { content: "=EF=80=A9"; }

.fa-barcode::before { content: "=EF=80=AA"; }

.fa-tag::before { content: "=EF=80=AB"; }

.fa-tags::before { content: "=EF=80=AC"; }

.fa-book::before { content: "=EF=80=AD"; }

.fa-bookmark::before { content: "=EF=80=AE"; }

.fa-print::before { content: "=EF=80=AF"; }

.fa-camera::before { content: "=EF=80=B0"; }

.fa-font::before { content: "=EF=80=B1"; }

.fa-bold::before { content: "=EF=80=B2"; }

.fa-italic::before { content: "=EF=80=B3"; }

.fa-text-height::before { content: "=EF=80=B4"; }

.fa-text-width::before { content: "=EF=80=B5"; }

.fa-align-left::before { content: "=EF=80=B6"; }

.fa-align-center::before { content: "=EF=80=B7"; }

.fa-align-right::before { content: "=EF=80=B8"; }

.fa-align-justify::before { content: "=EF=80=B9"; }

.fa-list::before { content: "=EF=80=BA"; }

.fa-dedent::before, .fa-outdent::before { content: "=EF=80=BB"; }

.fa-indent::before { content: "=EF=80=BC"; }

.fa-video-camera::before { content: "=EF=80=BD"; }

.fa-photo::before, .fa-image::before, .fa-picture-o::before { content: "=EF=
=80=BE"; }

.fa-pencil::before { content: "=EF=81=80"; }

.fa-map-marker::before { content: "=EF=81=81"; }

.fa-adjust::before { content: "=EF=81=82"; }

.fa-tint::before { content: "=EF=81=83"; }

.fa-edit::before, .fa-pencil-square-o::before { content: "=EF=81=84"; }

.fa-share-square-o::before { content: "=EF=81=85"; }

.fa-check-square-o::before { content: "=EF=81=86"; }

.fa-arrows::before { content: "=EF=81=87"; }

.fa-step-backward::before { content: "=EF=81=88"; }

.fa-fast-backward::before { content: "=EF=81=89"; }

.fa-backward::before { content: "=EF=81=8A"; }

.fa-play::before { content: "=EF=81=8B"; }

.fa-pause::before { content: "=EF=81=8C"; }

.fa-stop::before { content: "=EF=81=8D"; }

.fa-forward::before { content: "=EF=81=8E"; }

.fa-fast-forward::before { content: "=EF=81=90"; }

.fa-step-forward::before { content: "=EF=81=91"; }

.fa-eject::before { content: "=EF=81=92"; }

.fa-chevron-left::before { content: "=EF=81=93"; }

.fa-chevron-right::before { content: "=EF=81=94"; }

.fa-plus-circle::before { content: "=EF=81=95"; }

.fa-minus-circle::before { content: "=EF=81=96"; }

.fa-times-circle::before { content: "=EF=81=97"; }

.fa-check-circle::before { content: "=EF=81=98"; }

.fa-question-circle::before { content: "=EF=81=99"; }

.fa-info-circle::before { content: "=EF=81=9A"; }

.fa-crosshairs::before { content: "=EF=81=9B"; }

.fa-times-circle-o::before { content: "=EF=81=9C"; }

.fa-check-circle-o::before { content: "=EF=81=9D"; }

.fa-ban::before { content: "=EF=81=9E"; }

.fa-arrow-left::before { content: "=EF=81=A0"; }

.fa-arrow-right::before { content: "=EF=81=A1"; }

.fa-arrow-up::before { content: "=EF=81=A2"; }

.fa-arrow-down::before { content: "=EF=81=A3"; }

.fa-mail-forward::before, .fa-share::before { content: "=EF=81=A4"; }

.fa-expand::before { content: "=EF=81=A5"; }

.fa-compress::before { content: "=EF=81=A6"; }

.fa-plus::before { content: "=EF=81=A7"; }

.fa-minus::before { content: "=EF=81=A8"; }

.fa-asterisk::before { content: "=EF=81=A9"; }

.fa-exclamation-circle::before { content: "=EF=81=AA"; }

.fa-gift::before { content: "=EF=81=AB"; }

.fa-leaf::before { content: "=EF=81=AC"; }

.fa-fire::before { content: "=EF=81=AD"; }

.fa-eye::before { content: "=EF=81=AE"; }

.fa-eye-slash::before { content: "=EF=81=B0"; }

.fa-warning::before, .fa-exclamation-triangle::before { content: "=EF=81=B1=
"; }

.fa-plane::before { content: "=EF=81=B2"; }

.fa-calendar::before { content: "=EF=81=B3"; }

.fa-random::before { content: "=EF=81=B4"; }

.fa-comment::before { content: "=EF=81=B5"; }

.fa-magnet::before { content: "=EF=81=B6"; }

.fa-chevron-up::before { content: "=EF=81=B7"; }

.fa-chevron-down::before { content: "=EF=81=B8"; }

.fa-retweet::before { content: "=EF=81=B9"; }

.fa-shopping-cart::before { content: "=EF=81=BA"; }

.fa-folder::before { content: "=EF=81=BB"; }

.fa-folder-open::before { content: "=EF=81=BC"; }

.fa-arrows-v::before { content: "=EF=81=BD"; }

.fa-arrows-h::before { content: "=EF=81=BE"; }

.fa-bar-chart-o::before, .fa-bar-chart::before { content: "=EF=82=80"; }

.fa-twitter-square::before { content: "=EF=82=81"; }

.fa-facebook-square::before { content: "=EF=82=82"; }

.fa-camera-retro::before { content: "=EF=82=83"; }

.fa-key::before { content: "=EF=82=84"; }

.fa-gears::before, .fa-cogs::before { content: "=EF=82=85"; }

.fa-comments::before { content: "=EF=82=86"; }

.fa-thumbs-o-up::before { content: "=EF=82=87"; }

.fa-thumbs-o-down::before { content: "=EF=82=88"; }

.fa-star-half::before { content: "=EF=82=89"; }

.fa-heart-o::before { content: "=EF=82=8A"; }

.fa-sign-out::before { content: "=EF=82=8B"; }

.fa-linkedin-square::before { content: "=EF=82=8C"; }

.fa-thumb-tack::before { content: "=EF=82=8D"; }

.fa-external-link::before { content: "=EF=82=8E"; }

.fa-sign-in::before { content: "=EF=82=90"; }

.fa-trophy::before { content: "=EF=82=91"; }

.fa-github-square::before { content: "=EF=82=92"; }

.fa-upload::before { content: "=EF=82=93"; }

.fa-lemon-o::before { content: "=EF=82=94"; }

.fa-phone::before { content: "=EF=82=95"; }

.fa-square-o::before { content: "=EF=82=96"; }

.fa-bookmark-o::before { content: "=EF=82=97"; }

.fa-phone-square::before { content: "=EF=82=98"; }

.fa-twitter::before { content: "=EF=82=99"; }

.fa-facebook-f::before, .fa-facebook::before { content: "=EF=82=9A"; }

.fa-github::before { content: "=EF=82=9B"; }

.fa-unlock::before { content: "=EF=82=9C"; }

.fa-credit-card::before { content: "=EF=82=9D"; }

.fa-feed::before, .fa-rss::before { content: "=EF=82=9E"; }

.fa-hdd-o::before { content: "=EF=82=A0"; }

.fa-bullhorn::before { content: "=EF=82=A1"; }

.fa-bell::before { content: "=EF=83=B3"; }

.fa-certificate::before { content: "=EF=82=A3"; }

.fa-hand-o-right::before { content: "=EF=82=A4"; }

.fa-hand-o-left::before { content: "=EF=82=A5"; }

.fa-hand-o-up::before { content: "=EF=82=A6"; }

.fa-hand-o-down::before { content: "=EF=82=A7"; }

.fa-arrow-circle-left::before { content: "=EF=82=A8"; }

.fa-arrow-circle-right::before { content: "=EF=82=A9"; }

.fa-arrow-circle-up::before { content: "=EF=82=AA"; }

.fa-arrow-circle-down::before { content: "=EF=82=AB"; }

.fa-globe::before { content: "=EF=82=AC"; }

.fa-wrench::before { content: "=EF=82=AD"; }

.fa-tasks::before { content: "=EF=82=AE"; }

.fa-filter::before { content: "=EF=82=B0"; }

.fa-briefcase::before { content: "=EF=82=B1"; }

.fa-arrows-alt::before { content: "=EF=82=B2"; }

.fa-group::before, .fa-users::before { content: "=EF=83=80"; }

.fa-chain::before, .fa-link::before { content: "=EF=83=81"; }

.fa-cloud::before { content: "=EF=83=82"; }

.fa-flask::before { content: "=EF=83=83"; }

.fa-cut::before, .fa-scissors::before { content: "=EF=83=84"; }

.fa-copy::before, .fa-files-o::before { content: "=EF=83=85"; }

.fa-paperclip::before { content: "=EF=83=86"; }

.fa-save::before, .fa-floppy-o::before { content: "=EF=83=87"; }

.fa-square::before { content: "=EF=83=88"; }

.fa-navicon::before, .fa-reorder::before, .fa-bars::before { content: "=EF=
=83=89"; }

.fa-list-ul::before { content: "=EF=83=8A"; }

.fa-list-ol::before { content: "=EF=83=8B"; }

.fa-strikethrough::before { content: "=EF=83=8C"; }

.fa-underline::before { content: "=EF=83=8D"; }

.fa-table::before { content: "=EF=83=8E"; }

.fa-magic::before { content: "=EF=83=90"; }

.fa-truck::before { content: "=EF=83=91"; }

.fa-pinterest::before { content: "=EF=83=92"; }

.fa-pinterest-square::before { content: "=EF=83=93"; }

.fa-google-plus-square::before { content: "=EF=83=94"; }

.fa-google-plus::before { content: "=EF=83=95"; }

.fa-money::before { content: "=EF=83=96"; }

.fa-caret-down::before { content: "=EF=83=97"; }

.fa-caret-up::before { content: "=EF=83=98"; }

.fa-caret-left::before { content: "=EF=83=99"; }

.fa-caret-right::before { content: "=EF=83=9A"; }

.fa-columns::before { content: "=EF=83=9B"; }

.fa-unsorted::before, .fa-sort::before { content: "=EF=83=9C"; }

.fa-sort-down::before, .fa-sort-desc::before { content: "=EF=83=9D"; }

.fa-sort-up::before, .fa-sort-asc::before { content: "=EF=83=9E"; }

.fa-envelope::before { content: "=EF=83=A0"; }

.fa-linkedin::before { content: "=EF=83=A1"; }

.fa-rotate-left::before, .fa-undo::before { content: "=EF=83=A2"; }

.fa-legal::before, .fa-gavel::before { content: "=EF=83=A3"; }

.fa-dashboard::before, .fa-tachometer::before { content: "=EF=83=A4"; }

.fa-comment-o::before { content: "=EF=83=A5"; }

.fa-comments-o::before { content: "=EF=83=A6"; }

.fa-flash::before, .fa-bolt::before { content: "=EF=83=A7"; }

.fa-sitemap::before { content: "=EF=83=A8"; }

.fa-umbrella::before { content: "=EF=83=A9"; }

.fa-paste::before, .fa-clipboard::before { content: "=EF=83=AA"; }

.fa-lightbulb-o::before { content: "=EF=83=AB"; }

.fa-exchange::before { content: "=EF=83=AC"; }

.fa-cloud-download::before { content: "=EF=83=AD"; }

.fa-cloud-upload::before { content: "=EF=83=AE"; }

.fa-user-md::before { content: "=EF=83=B0"; }

.fa-stethoscope::before { content: "=EF=83=B1"; }

.fa-suitcase::before { content: "=EF=83=B2"; }

.fa-bell-o::before { content: "=EF=82=A2"; }

.fa-coffee::before { content: "=EF=83=B4"; }

.fa-cutlery::before { content: "=EF=83=B5"; }

.fa-file-text-o::before { content: "=EF=83=B6"; }

.fa-building-o::before { content: "=EF=83=B7"; }

.fa-hospital-o::before { content: "=EF=83=B8"; }

.fa-ambulance::before { content: "=EF=83=B9"; }

.fa-medkit::before { content: "=EF=83=BA"; }

.fa-fighter-jet::before { content: "=EF=83=BB"; }

.fa-beer::before { content: "=EF=83=BC"; }

.fa-h-square::before { content: "=EF=83=BD"; }

.fa-plus-square::before { content: "=EF=83=BE"; }

.fa-angle-double-left::before { content: "=EF=84=80"; }

.fa-angle-double-right::before { content: "=EF=84=81"; }

.fa-angle-double-up::before { content: "=EF=84=82"; }

.fa-angle-double-down::before { content: "=EF=84=83"; }

.fa-angle-left::before { content: "=EF=84=84"; }

.fa-angle-right::before { content: "=EF=84=85"; }

.fa-angle-up::before { content: "=EF=84=86"; }

.fa-angle-down::before { content: "=EF=84=87"; }

.fa-desktop::before { content: "=EF=84=88"; }

.fa-laptop::before { content: "=EF=84=89"; }

.fa-tablet::before { content: "=EF=84=8A"; }

.fa-mobile-phone::before, .fa-mobile::before { content: "=EF=84=8B"; }

.fa-circle-o::before { content: "=EF=84=8C"; }

.fa-quote-left::before { content: "=EF=84=8D"; }

.fa-quote-right::before { content: "=EF=84=8E"; }

.fa-spinner::before { content: "=EF=84=90"; }

.fa-circle::before { content: "=EF=84=91"; }

.fa-mail-reply::before, .fa-reply::before { content: "=EF=84=92"; }

.fa-github-alt::before { content: "=EF=84=93"; }

.fa-folder-o::before { content: "=EF=84=94"; }

.fa-folder-open-o::before { content: "=EF=84=95"; }

.fa-smile-o::before { content: "=EF=84=98"; }

.fa-frown-o::before { content: "=EF=84=99"; }

.fa-meh-o::before { content: "=EF=84=9A"; }

.fa-gamepad::before { content: "=EF=84=9B"; }

.fa-keyboard-o::before { content: "=EF=84=9C"; }

.fa-flag-o::before { content: "=EF=84=9D"; }

.fa-flag-checkered::before { content: "=EF=84=9E"; }

.fa-terminal::before { content: "=EF=84=A0"; }

.fa-code::before { content: "=EF=84=A1"; }

.fa-mail-reply-all::before, .fa-reply-all::before { content: "=EF=84=A2"; }

.fa-star-half-empty::before, .fa-star-half-full::before, .fa-star-half-o::b=
efore { content: "=EF=84=A3"; }

.fa-location-arrow::before { content: "=EF=84=A4"; }

.fa-crop::before { content: "=EF=84=A5"; }

.fa-code-fork::before { content: "=EF=84=A6"; }

.fa-unlink::before, .fa-chain-broken::before { content: "=EF=84=A7"; }

.fa-question::before { content: "=EF=84=A8"; }

.fa-info::before { content: "=EF=84=A9"; }

.fa-exclamation::before { content: "=EF=84=AA"; }

.fa-superscript::before { content: "=EF=84=AB"; }

.fa-subscript::before { content: "=EF=84=AC"; }

.fa-eraser::before { content: "=EF=84=AD"; }

.fa-puzzle-piece::before { content: "=EF=84=AE"; }

.fa-microphone::before { content: "=EF=84=B0"; }

.fa-microphone-slash::before { content: "=EF=84=B1"; }

.fa-shield::before { content: "=EF=84=B2"; }

.fa-calendar-o::before { content: "=EF=84=B3"; }

.fa-fire-extinguisher::before { content: "=EF=84=B4"; }

.fa-rocket::before { content: "=EF=84=B5"; }

.fa-maxcdn::before { content: "=EF=84=B6"; }

.fa-chevron-circle-left::before { content: "=EF=84=B7"; }

.fa-chevron-circle-right::before { content: "=EF=84=B8"; }

.fa-chevron-circle-up::before { content: "=EF=84=B9"; }

.fa-chevron-circle-down::before { content: "=EF=84=BA"; }

.fa-html5::before { content: "=EF=84=BB"; }

.fa-css3::before { content: "=EF=84=BC"; }

.fa-anchor::before { content: "=EF=84=BD"; }

.fa-unlock-alt::before { content: "=EF=84=BE"; }

.fa-bullseye::before { content: "=EF=85=80"; }

.fa-ellipsis-h::before { content: "=EF=85=81"; }

.fa-ellipsis-v::before { content: "=EF=85=82"; }

.fa-rss-square::before { content: "=EF=85=83"; }

.fa-play-circle::before { content: "=EF=85=84"; }

.fa-ticket::before { content: "=EF=85=85"; }

.fa-minus-square::before { content: "=EF=85=86"; }

.fa-minus-square-o::before { content: "=EF=85=87"; }

.fa-level-up::before { content: "=EF=85=88"; }

.fa-level-down::before { content: "=EF=85=89"; }

.fa-check-square::before { content: "=EF=85=8A"; }

.fa-pencil-square::before { content: "=EF=85=8B"; }

.fa-external-link-square::before { content: "=EF=85=8C"; }

.fa-share-square::before { content: "=EF=85=8D"; }

.fa-compass::before { content: "=EF=85=8E"; }

.fa-toggle-down::before, .fa-caret-square-o-down::before { content: "=EF=85=
=90"; }

.fa-toggle-up::before, .fa-caret-square-o-up::before { content: "=EF=85=91"=
; }

.fa-toggle-right::before, .fa-caret-square-o-right::before { content: "=EF=
=85=92"; }

.fa-euro::before, .fa-eur::before { content: "=EF=85=93"; }

.fa-gbp::before { content: "=EF=85=94"; }

.fa-dollar::before, .fa-usd::before { content: "=EF=85=95"; }

.fa-rupee::before, .fa-inr::before { content: "=EF=85=96"; }

.fa-cny::before, .fa-rmb::before, .fa-yen::before, .fa-jpy::before { conten=
t: "=EF=85=97"; }

.fa-ruble::before, .fa-rouble::before, .fa-rub::before { content: "=EF=85=
=98"; }

.fa-won::before, .fa-krw::before { content: "=EF=85=99"; }

.fa-bitcoin::before, .fa-btc::before { content: "=EF=85=9A"; }

.fa-file::before { content: "=EF=85=9B"; }

.fa-file-text::before { content: "=EF=85=9C"; }

.fa-sort-alpha-asc::before { content: "=EF=85=9D"; }

.fa-sort-alpha-desc::before { content: "=EF=85=9E"; }

.fa-sort-amount-asc::before { content: "=EF=85=A0"; }

.fa-sort-amount-desc::before { content: "=EF=85=A1"; }

.fa-sort-numeric-asc::before { content: "=EF=85=A2"; }

.fa-sort-numeric-desc::before { content: "=EF=85=A3"; }

.fa-thumbs-up::before { content: "=EF=85=A4"; }

.fa-thumbs-down::before { content: "=EF=85=A5"; }

.fa-youtube-square::before { content: "=EF=85=A6"; }

.fa-youtube::before { content: "=EF=85=A7"; }

.fa-xing::before { content: "=EF=85=A8"; }

.fa-xing-square::before { content: "=EF=85=A9"; }

.fa-youtube-play::before { content: "=EF=85=AA"; }

.fa-dropbox::before { content: "=EF=85=AB"; }

.fa-stack-overflow::before { content: "=EF=85=AC"; }

.fa-instagram::before { content: "=EF=85=AD"; }

.fa-flickr::before { content: "=EF=85=AE"; }

.fa-adn::before { content: "=EF=85=B0"; }

.fa-bitbucket::before { content: "=EF=85=B1"; }

.fa-bitbucket-square::before { content: "=EF=85=B2"; }

.fa-tumblr::before { content: "=EF=85=B3"; }

.fa-tumblr-square::before { content: "=EF=85=B4"; }

.fa-long-arrow-down::before { content: "=EF=85=B5"; }

.fa-long-arrow-up::before { content: "=EF=85=B6"; }

.fa-long-arrow-left::before { content: "=EF=85=B7"; }

.fa-long-arrow-right::before { content: "=EF=85=B8"; }

.fa-apple::before { content: "=EF=85=B9"; }

.fa-windows::before { content: "=EF=85=BA"; }

.fa-android::before { content: "=EF=85=BB"; }

.fa-linux::before { content: "=EF=85=BC"; }

.fa-dribbble::before { content: "=EF=85=BD"; }

.fa-skype::before { content: "=EF=85=BE"; }

.fa-foursquare::before { content: "=EF=86=80"; }

.fa-trello::before { content: "=EF=86=81"; }

.fa-female::before { content: "=EF=86=82"; }

.fa-male::before { content: "=EF=86=83"; }

.fa-gittip::before, .fa-gratipay::before { content: "=EF=86=84"; }

.fa-sun-o::before { content: "=EF=86=85"; }

.fa-moon-o::before { content: "=EF=86=86"; }

.fa-archive::before { content: "=EF=86=87"; }

.fa-bug::before { content: "=EF=86=88"; }

.fa-vk::before { content: "=EF=86=89"; }

.fa-weibo::before { content: "=EF=86=8A"; }

.fa-renren::before { content: "=EF=86=8B"; }

.fa-pagelines::before { content: "=EF=86=8C"; }

.fa-stack-exchange::before { content: "=EF=86=8D"; }

.fa-arrow-circle-o-right::before { content: "=EF=86=8E"; }

.fa-arrow-circle-o-left::before { content: "=EF=86=90"; }

.fa-toggle-left::before, .fa-caret-square-o-left::before { content: "=EF=86=
=91"; }

.fa-dot-circle-o::before { content: "=EF=86=92"; }

.fa-wheelchair::before { content: "=EF=86=93"; }

.fa-vimeo-square::before { content: "=EF=86=94"; }

.fa-turkish-lira::before, .fa-try::before { content: "=EF=86=95"; }

.fa-plus-square-o::before { content: "=EF=86=96"; }

.fa-space-shuttle::before { content: "=EF=86=97"; }

.fa-slack::before { content: "=EF=86=98"; }

.fa-envelope-square::before { content: "=EF=86=99"; }

.fa-wordpress::before { content: "=EF=86=9A"; }

.fa-openid::before { content: "=EF=86=9B"; }

.fa-institution::before, .fa-bank::before, .fa-university::before { content=
: "=EF=86=9C"; }

.fa-mortar-board::before, .fa-graduation-cap::before { content: "=EF=86=9D"=
; }

.fa-yahoo::before { content: "=EF=86=9E"; }

.fa-google::before { content: "=EF=86=A0"; }

.fa-reddit::before { content: "=EF=86=A1"; }

.fa-reddit-square::before { content: "=EF=86=A2"; }

.fa-stumbleupon-circle::before { content: "=EF=86=A3"; }

.fa-stumbleupon::before { content: "=EF=86=A4"; }

.fa-delicious::before { content: "=EF=86=A5"; }

.fa-digg::before { content: "=EF=86=A6"; }

.fa-pied-piper-pp::before { content: "=EF=86=A7"; }

.fa-pied-piper-alt::before { content: "=EF=86=A8"; }

.fa-drupal::before { content: "=EF=86=A9"; }

.fa-joomla::before { content: "=EF=86=AA"; }

.fa-language::before { content: "=EF=86=AB"; }

.fa-fax::before { content: "=EF=86=AC"; }

.fa-building::before { content: "=EF=86=AD"; }

.fa-child::before { content: "=EF=86=AE"; }

.fa-paw::before { content: "=EF=86=B0"; }

.fa-spoon::before { content: "=EF=86=B1"; }

.fa-cube::before { content: "=EF=86=B2"; }

.fa-cubes::before { content: "=EF=86=B3"; }

.fa-behance::before { content: "=EF=86=B4"; }

.fa-behance-square::before { content: "=EF=86=B5"; }

.fa-steam::before { content: "=EF=86=B6"; }

.fa-steam-square::before { content: "=EF=86=B7"; }

.fa-recycle::before { content: "=EF=86=B8"; }

.fa-automobile::before, .fa-car::before { content: "=EF=86=B9"; }

.fa-cab::before, .fa-taxi::before { content: "=EF=86=BA"; }

.fa-tree::before { content: "=EF=86=BB"; }

.fa-spotify::before { content: "=EF=86=BC"; }

.fa-deviantart::before { content: "=EF=86=BD"; }

.fa-soundcloud::before { content: "=EF=86=BE"; }

.fa-database::before { content: "=EF=87=80"; }

.fa-file-pdf-o::before { content: "=EF=87=81"; }

.fa-file-word-o::before { content: "=EF=87=82"; }

.fa-file-excel-o::before { content: "=EF=87=83"; }

.fa-file-powerpoint-o::before { content: "=EF=87=84"; }

.fa-file-photo-o::before, .fa-file-picture-o::before, .fa-file-image-o::bef=
ore { content: "=EF=87=85"; }

.fa-file-zip-o::before, .fa-file-archive-o::before { content: "=EF=87=86"; =
}

.fa-file-sound-o::before, .fa-file-audio-o::before { content: "=EF=87=87"; =
}

.fa-file-movie-o::before, .fa-file-video-o::before { content: "=EF=87=88"; =
}

.fa-file-code-o::before { content: "=EF=87=89"; }

.fa-vine::before { content: "=EF=87=8A"; }

.fa-codepen::before { content: "=EF=87=8B"; }

.fa-jsfiddle::before { content: "=EF=87=8C"; }

.fa-life-bouy::before, .fa-life-buoy::before, .fa-life-saver::before, .fa-s=
upport::before, .fa-life-ring::before { content: "=EF=87=8D"; }

.fa-circle-o-notch::before { content: "=EF=87=8E"; }

.fa-ra::before, .fa-resistance::before, .fa-rebel::before { content: "=EF=
=87=90"; }

.fa-ge::before, .fa-empire::before { content: "=EF=87=91"; }

.fa-git-square::before { content: "=EF=87=92"; }

.fa-git::before { content: "=EF=87=93"; }

.fa-y-combinator-square::before, .fa-yc-square::before, .fa-hacker-news::be=
fore { content: "=EF=87=94"; }

.fa-tencent-weibo::before { content: "=EF=87=95"; }

.fa-qq::before { content: "=EF=87=96"; }

.fa-wechat::before, .fa-weixin::before { content: "=EF=87=97"; }

.fa-send::before, .fa-paper-plane::before { content: "=EF=87=98"; }

.fa-send-o::before, .fa-paper-plane-o::before { content: "=EF=87=99"; }

.fa-history::before { content: "=EF=87=9A"; }

.fa-circle-thin::before { content: "=EF=87=9B"; }

.fa-header::before { content: "=EF=87=9C"; }

.fa-paragraph::before { content: "=EF=87=9D"; }

.fa-sliders::before { content: "=EF=87=9E"; }

.fa-share-alt::before { content: "=EF=87=A0"; }

.fa-share-alt-square::before { content: "=EF=87=A1"; }

.fa-bomb::before { content: "=EF=87=A2"; }

.fa-soccer-ball-o::before, .fa-futbol-o::before { content: "=EF=87=A3"; }

.fa-tty::before { content: "=EF=87=A4"; }

.fa-binoculars::before { content: "=EF=87=A5"; }

.fa-plug::before { content: "=EF=87=A6"; }

.fa-slideshare::before { content: "=EF=87=A7"; }

.fa-twitch::before { content: "=EF=87=A8"; }

.fa-yelp::before { content: "=EF=87=A9"; }

.fa-newspaper-o::before { content: "=EF=87=AA"; }

.fa-wifi::before { content: "=EF=87=AB"; }

.fa-calculator::before { content: "=EF=87=AC"; }

.fa-paypal::before { content: "=EF=87=AD"; }

.fa-google-wallet::before { content: "=EF=87=AE"; }

.fa-cc-visa::before { content: "=EF=87=B0"; }

.fa-cc-mastercard::before { content: "=EF=87=B1"; }

.fa-cc-discover::before { content: "=EF=87=B2"; }

.fa-cc-amex::before { content: "=EF=87=B3"; }

.fa-cc-paypal::before { content: "=EF=87=B4"; }

.fa-cc-stripe::before { content: "=EF=87=B5"; }

.fa-bell-slash::before { content: "=EF=87=B6"; }

.fa-bell-slash-o::before { content: "=EF=87=B7"; }

.fa-trash::before { content: "=EF=87=B8"; }

.fa-copyright::before { content: "=EF=87=B9"; }

.fa-at::before { content: "=EF=87=BA"; }

.fa-eyedropper::before { content: "=EF=87=BB"; }

.fa-paint-brush::before { content: "=EF=87=BC"; }

.fa-birthday-cake::before { content: "=EF=87=BD"; }

.fa-area-chart::before { content: "=EF=87=BE"; }

.fa-pie-chart::before { content: "=EF=88=80"; }

.fa-line-chart::before { content: "=EF=88=81"; }

.fa-lastfm::before { content: "=EF=88=82"; }

.fa-lastfm-square::before { content: "=EF=88=83"; }

.fa-toggle-off::before { content: "=EF=88=84"; }

.fa-toggle-on::before { content: "=EF=88=85"; }

.fa-bicycle::before { content: "=EF=88=86"; }

.fa-bus::before { content: "=EF=88=87"; }

.fa-ioxhost::before { content: "=EF=88=88"; }

.fa-angellist::before { content: "=EF=88=89"; }

.fa-cc::before { content: "=EF=88=8A"; }

.fa-shekel::before, .fa-sheqel::before, .fa-ils::before { content: "=EF=88=
=8B"; }

.fa-meanpath::before { content: "=EF=88=8C"; }

.fa-buysellads::before { content: "=EF=88=8D"; }

.fa-connectdevelop::before { content: "=EF=88=8E"; }

.fa-dashcube::before { content: "=EF=88=90"; }

.fa-forumbee::before { content: "=EF=88=91"; }

.fa-leanpub::before { content: "=EF=88=92"; }

.fa-sellsy::before { content: "=EF=88=93"; }

.fa-shirtsinbulk::before { content: "=EF=88=94"; }

.fa-simplybuilt::before { content: "=EF=88=95"; }

.fa-skyatlas::before { content: "=EF=88=96"; }

.fa-cart-plus::before { content: "=EF=88=97"; }

.fa-cart-arrow-down::before { content: "=EF=88=98"; }

.fa-diamond::before { content: "=EF=88=99"; }

.fa-ship::before { content: "=EF=88=9A"; }

.fa-user-secret::before { content: "=EF=88=9B"; }

.fa-motorcycle::before { content: "=EF=88=9C"; }

.fa-street-view::before { content: "=EF=88=9D"; }

.fa-heartbeat::before { content: "=EF=88=9E"; }

.fa-venus::before { content: "=EF=88=A1"; }

.fa-mars::before { content: "=EF=88=A2"; }

.fa-mercury::before { content: "=EF=88=A3"; }

.fa-intersex::before, .fa-transgender::before { content: "=EF=88=A4"; }

.fa-transgender-alt::before { content: "=EF=88=A5"; }

.fa-venus-double::before { content: "=EF=88=A6"; }

.fa-mars-double::before { content: "=EF=88=A7"; }

.fa-venus-mars::before { content: "=EF=88=A8"; }

.fa-mars-stroke::before { content: "=EF=88=A9"; }

.fa-mars-stroke-v::before { content: "=EF=88=AA"; }

.fa-mars-stroke-h::before { content: "=EF=88=AB"; }

.fa-neuter::before { content: "=EF=88=AC"; }

.fa-genderless::before { content: "=EF=88=AD"; }

.fa-facebook-official::before { content: "=EF=88=B0"; }

.fa-pinterest-p::before { content: "=EF=88=B1"; }

.fa-whatsapp::before { content: "=EF=88=B2"; }

.fa-server::before { content: "=EF=88=B3"; }

.fa-user-plus::before { content: "=EF=88=B4"; }

.fa-user-times::before { content: "=EF=88=B5"; }

.fa-hotel::before, .fa-bed::before { content: "=EF=88=B6"; }

.fa-viacoin::before { content: "=EF=88=B7"; }

.fa-train::before { content: "=EF=88=B8"; }

.fa-subway::before { content: "=EF=88=B9"; }

.fa-medium::before { content: "=EF=88=BA"; }

.fa-yc::before, .fa-y-combinator::before { content: "=EF=88=BB"; }

.fa-optin-monster::before { content: "=EF=88=BC"; }

.fa-opencart::before { content: "=EF=88=BD"; }

.fa-expeditedssl::before { content: "=EF=88=BE"; }

.fa-battery-4::before, .fa-battery-full::before { content: "=EF=89=80"; }

.fa-battery-3::before, .fa-battery-three-quarters::before { content: "=EF=
=89=81"; }

.fa-battery-2::before, .fa-battery-half::before { content: "=EF=89=82"; }

.fa-battery-1::before, .fa-battery-quarter::before { content: "=EF=89=83"; =
}

.fa-battery-0::before, .fa-battery-empty::before { content: "=EF=89=84"; }

.fa-mouse-pointer::before { content: "=EF=89=85"; }

.fa-i-cursor::before { content: "=EF=89=86"; }

.fa-object-group::before { content: "=EF=89=87"; }

.fa-object-ungroup::before { content: "=EF=89=88"; }

.fa-sticky-note::before { content: "=EF=89=89"; }

.fa-sticky-note-o::before { content: "=EF=89=8A"; }

.fa-cc-jcb::before { content: "=EF=89=8B"; }

.fa-cc-diners-club::before { content: "=EF=89=8C"; }

.fa-clone::before { content: "=EF=89=8D"; }

.fa-balance-scale::before { content: "=EF=89=8E"; }

.fa-hourglass-o::before { content: "=EF=89=90"; }

.fa-hourglass-1::before, .fa-hourglass-start::before { content: "=EF=89=91"=
; }

.fa-hourglass-2::before, .fa-hourglass-half::before { content: "=EF=89=92";=
 }

.fa-hourglass-3::before, .fa-hourglass-end::before { content: "=EF=89=93"; =
}

.fa-hourglass::before { content: "=EF=89=94"; }

.fa-hand-grab-o::before, .fa-hand-rock-o::before { content: "=EF=89=95"; }

.fa-hand-stop-o::before, .fa-hand-paper-o::before { content: "=EF=89=96"; }

.fa-hand-scissors-o::before { content: "=EF=89=97"; }

.fa-hand-lizard-o::before { content: "=EF=89=98"; }

.fa-hand-spock-o::before { content: "=EF=89=99"; }

.fa-hand-pointer-o::before { content: "=EF=89=9A"; }

.fa-hand-peace-o::before { content: "=EF=89=9B"; }

.fa-trademark::before { content: "=EF=89=9C"; }

.fa-registered::before { content: "=EF=89=9D"; }

.fa-creative-commons::before { content: "=EF=89=9E"; }

.fa-gg::before { content: "=EF=89=A0"; }

.fa-gg-circle::before { content: "=EF=89=A1"; }

.fa-tripadvisor::before { content: "=EF=89=A2"; }

.fa-odnoklassniki::before { content: "=EF=89=A3"; }

.fa-odnoklassniki-square::before { content: "=EF=89=A4"; }

.fa-get-pocket::before { content: "=EF=89=A5"; }

.fa-wikipedia-w::before { content: "=EF=89=A6"; }

.fa-safari::before { content: "=EF=89=A7"; }

.fa-chrome::before { content: "=EF=89=A8"; }

.fa-firefox::before { content: "=EF=89=A9"; }

.fa-opera::before { content: "=EF=89=AA"; }

.fa-internet-explorer::before { content: "=EF=89=AB"; }

.fa-tv::before, .fa-television::before { content: "=EF=89=AC"; }

.fa-contao::before { content: "=EF=89=AD"; }

.fa-500px::before { content: "=EF=89=AE"; }

.fa-amazon::before { content: "=EF=89=B0"; }

.fa-calendar-plus-o::before { content: "=EF=89=B1"; }

.fa-calendar-minus-o::before { content: "=EF=89=B2"; }

.fa-calendar-times-o::before { content: "=EF=89=B3"; }

.fa-calendar-check-o::before { content: "=EF=89=B4"; }

.fa-industry::before { content: "=EF=89=B5"; }

.fa-map-pin::before { content: "=EF=89=B6"; }

.fa-map-signs::before { content: "=EF=89=B7"; }

.fa-map-o::before { content: "=EF=89=B8"; }

.fa-map::before { content: "=EF=89=B9"; }

.fa-commenting::before { content: "=EF=89=BA"; }

.fa-commenting-o::before { content: "=EF=89=BB"; }

.fa-houzz::before { content: "=EF=89=BC"; }

.fa-vimeo::before { content: "=EF=89=BD"; }

.fa-black-tie::before { content: "=EF=89=BE"; }

.fa-fonticons::before { content: "=EF=8A=80"; }

.fa-reddit-alien::before { content: "=EF=8A=81"; }

.fa-edge::before { content: "=EF=8A=82"; }

.fa-credit-card-alt::before { content: "=EF=8A=83"; }

.fa-codiepie::before { content: "=EF=8A=84"; }

.fa-modx::before { content: "=EF=8A=85"; }

.fa-fort-awesome::before { content: "=EF=8A=86"; }

.fa-usb::before { content: "=EF=8A=87"; }

.fa-product-hunt::before { content: "=EF=8A=88"; }

.fa-mixcloud::before { content: "=EF=8A=89"; }

.fa-scribd::before { content: "=EF=8A=8A"; }

.fa-pause-circle::before { content: "=EF=8A=8B"; }

.fa-pause-circle-o::before { content: "=EF=8A=8C"; }

.fa-stop-circle::before { content: "=EF=8A=8D"; }

.fa-stop-circle-o::before { content: "=EF=8A=8E"; }

.fa-shopping-bag::before { content: "=EF=8A=90"; }

.fa-shopping-basket::before { content: "=EF=8A=91"; }

.fa-hashtag::before { content: "=EF=8A=92"; }

.fa-bluetooth::before { content: "=EF=8A=93"; }

.fa-bluetooth-b::before { content: "=EF=8A=94"; }

.fa-percent::before { content: "=EF=8A=95"; }

.fa-gitlab::before { content: "=EF=8A=96"; }

.fa-wpbeginner::before { content: "=EF=8A=97"; }

.fa-wpforms::before { content: "=EF=8A=98"; }

.fa-envira::before { content: "=EF=8A=99"; }

.fa-universal-access::before { content: "=EF=8A=9A"; }

.fa-wheelchair-alt::before { content: "=EF=8A=9B"; }

.fa-question-circle-o::before { content: "=EF=8A=9C"; }

.fa-blind::before { content: "=EF=8A=9D"; }

.fa-audio-description::before { content: "=EF=8A=9E"; }

.fa-volume-control-phone::before { content: "=EF=8A=A0"; }

.fa-braille::before { content: "=EF=8A=A1"; }

.fa-assistive-listening-systems::before { content: "=EF=8A=A2"; }

.fa-asl-interpreting::before, .fa-american-sign-language-interpreting::befo=
re { content: "=EF=8A=A3"; }

.fa-deafness::before, .fa-hard-of-hearing::before, .fa-deaf::before { conte=
nt: "=EF=8A=A4"; }

.fa-glide::before { content: "=EF=8A=A5"; }

.fa-glide-g::before { content: "=EF=8A=A6"; }

.fa-signing::before, .fa-sign-language::before { content: "=EF=8A=A7"; }

.fa-low-vision::before { content: "=EF=8A=A8"; }

.fa-viadeo::before { content: "=EF=8A=A9"; }

.fa-viadeo-square::before { content: "=EF=8A=AA"; }

.fa-snapchat::before { content: "=EF=8A=AB"; }

.fa-snapchat-ghost::before { content: "=EF=8A=AC"; }

.fa-snapchat-square::before { content: "=EF=8A=AD"; }

.fa-pied-piper::before { content: "=EF=8A=AE"; }

.fa-first-order::before { content: "=EF=8A=B0"; }

.fa-yoast::before { content: "=EF=8A=B1"; }

.fa-themeisle::before { content: "=EF=8A=B2"; }

.fa-google-plus-circle::before, .fa-google-plus-official::before { content:=
 "=EF=8A=B3"; }

.fa-fa::before, .fa-font-awesome::before { content: "=EF=8A=B4"; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://fonts.googleapis.com/css?family=Lato:400,400italic,700,700italic|Source+Code+Pro:400

@charset "utf-8";
=0A
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/css/style.css

@charset "utf-8";
=0A
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/theme/readonly/images/avatar.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/4QKoRXhpZgAATU0AKgAAAAgACQEPAAIAAAAKAAAAegEQAAIA
AAAIAAAAhAESAAMAAAABAAEAAAEaAAUAAAABAAAAjAEbAAUAAAABAAAAlAEoAAMAAAABAAIAAAEx
AAIAAAAKAAAAnAEyAAIAAAAUAAAApodpAAQAAAABAAAAugAAAABQYW5hc29uaWMARE1DLVRaOAAA
AAC0AAAAAQAAALQAAAABVmVyLjEuMCAgADIwMTE6MDk6MDMgMTM6MDk6NTMAACCCmgAFAAAAAQAA
AkCCnQAFAAAAAQAAAkiIIgADAAAAAQAIAACIJwADAAAAAQBQAACQAAAHAAAABDAyMjGQAwACAAAA
FAAAAlCQBAACAAAAFAAAAmSRAQAHAAAABAECAwCRAgAFAAAAAQAAAniSBAAKAAAAAQAAAoCSBQAF
AAAAAQAAAoiSBwADAAAAAQAFAACSCAADAAAAAQAAAACSCQADAAAAAQAQAACSCgAFAAAAAQAAApCg
AAAHAAAABDAxMDCgAQADAAAAAQABAACgAgAEAAAAAQAAAyCgAwAEAAAAAQAAAliiFwADAAAAAQAC
AACjAAAHAAAAAQMAAACjAQAHAAAAAQEAAACkAQADAAAAAQAAAACkAgADAAAAAQAAAACkAwADAAAA
AQAAAACkBAAFAAAAAQAAApikBQADAAAAAQBaAACkBgADAAAAAQAAAACkBwADAAAAAQAAAACkCAAD
AAAAAQAAAACkCQADAAAAAQAAAACkCgADAAAAAQAAAAAAAAAAAAAAAQAAAMgAAAArAAAACjIwMTE6
MDk6MDMgMTM6MDk6NTMAMjAxMTowOTowMyAxMzowOTo1MwAAAAAEAAAAAQAAAAAAAAABAAAAVgAA
ABkAAACTAAAACgAAAAAAAAAB/+EKYGh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8APD94cGFj
a2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0
YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPiA8cmRm
OlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1u
cyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5h
ZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9w
aG90b3Nob3AvMS4wLyIgeG1sbnM6YXV4PSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wL2F1
eC8iIHhtcDpDcmVhdGVEYXRlPSIyMDExLTA5LTAzVDEzOjA5OjUzIiB4bXA6TW9kaWZ5RGF0ZT0i
MjAxMS0wOS0wM1QxMzowOTo1MyIgeG1wOkNyZWF0b3JUb29sPSJWZXIuMS4wICAiIHBob3Rvc2hv
cDpEYXRlQ3JlYXRlZD0iMjAxMS0wOS0wM1QxMzowOTo1MyIgYXV4OlNlcmlhbE51bWJlcj0iRjY0
MTAwMjI1MDU2MyIvPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9InciPz4A/+0A
eFBob3Rvc2hvcCAzLjAAOEJJTQQEAAAAAAA/HAFaAAMbJUccAgAAAgACHAI/AAYxMzA5NTMcAj4A
CDIwMTEwOTAzHAI3AAgyMDExMDkwMxwCPAAGMTMwOTUzADhCSU0EJQAAAAAAEKtjGMSqTGKOamo4
KHQ7I4r/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAx
AABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLUhQICAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNj
AAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRi
WFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAA
ACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAE
PAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2th
cmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdC
IElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABv
ogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAA
AAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5j
aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAA
AC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAA
AC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElF
QzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2
MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPt
zAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAA
AAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0A
MgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8
AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWAB
ZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJL
AlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3ID
fgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTw
BP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8G
wAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjS
COcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkL
UQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4T
Di4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETER
TxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTO
FPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y
1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0e
HUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h
+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcY
J0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs
1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLU
Mw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5
fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0Bk
QKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BI
BUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/d
UCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9Y
fVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFP
YaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q
92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTM
dSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/
hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opk
isqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmW
NJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqIm
opajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGv
Fq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7wh
vJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnK
OMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk
2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/n
qegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb7
94r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////wAARCAJYAyADASEAAhEBAxEB/8QAHwAA
AQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpT
VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5
usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAA
AAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
Z2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9sAQwABAQEBAQEBAQEBAQMDAQQDAwMDAwYDBAQE
AwYHBwcGBwcHCQkKDAkJCQoHCQ0KCgoMDA0NBw0OCg4ODg0NDA0N/9sAQwEDAQMDAwMDBgYDCQ0J
Bw0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N/90ABAAy
/9oADAMBAAIRAxEAPwD5MuP2VP2k7C92XWk+CJvM/gsr7TpgrdtzHbjPqevauu8K/syfte6J4htt
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

------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/img/p6_string_graph_model.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?><svg xmlns=3D"h=
ttp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" con=
tentStyleType=3D"text/css" height=3D"877px" preserveAspectRatio=3D"none" st=
yle=3D"width:1046px;height:877px;background:#FFFFFF;" version=3D"1.1" viewB=
ox=3D"0 0 1046 877" width=3D"1046px" zoomAndPan=3D"magnify"><defs/><g><!--M=
D5=3D[468c628577d61d66a0bda2743704dfd4]
cluster es.ua.dlsi.prog3.p6.graph--><g id=3D"cluster_es.ua.dlsi.prog3.p6.gr=
aph"><path d=3D"M138.5,6 L315.5,6 A3.75,3.75 0 0 1 318,8.5 L325,28.4883 L10=
30.5,28.4883 A2.5,2.5 0 0 1 1033,30.9883 L1033,867.5 A2.5,2.5 0 0 1 1030.5,=
870 L138.5,870 A2.5,2.5 0 0 1 136,867.5 L136,8.5 A2.5,2.5 0 0 1 138.5,6 " f=
ill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line style=3D"str=
oke:#000000;stroke-width:1.5;" x1=3D"136" x2=3D"325" y1=3D"28.4883" y2=3D"2=
8.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14"=
 font-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"176" x=3D"140"=
 y=3D"21.5352">es.ua.dlsi.prog3.p6.graph</text></g><!--MD5=3D[aa8f7b917213f=
cc1c2766e2d59b49067]
cluster java.lang--><g id=3D"cluster_java.lang"><path d=3D"M8.5,283 L72.5,2=
83 A3.75,3.75 0 0 1 75,285.5 L82,305.4883 L109.5,305.4883 A2.5,2.5 0 0 1 11=
2,307.9883 L112,373.5 A2.5,2.5 0 0 1 109.5,376 L8.5,376 A2.5,2.5 0 0 1 6,37=
3.5 L6,285.5 A2.5,2.5 0 0 1 8.5,283 " fill=3D"none" style=3D"stroke:#000000=
;stroke-width:1.5;"/><line style=3D"stroke:#000000;stroke-width:1.5;" x1=3D=
"6" x2=3D"82" y1=3D"305.4883" y2=3D"305.4883"/><text fill=3D"#000000" font-=
family=3D"sans-serif" font-size=3D"14" font-weight=3D"bold" lengthAdjust=3D=
"spacing" textLength=3D"63" x=3D"10" y=3D"298.5352">java.lang</text></g><!-=
-MD5=3D[99b752abd7219fe4bcb298615f1ab5f7]
class IIdentifiable--><g id=3D"elem_IIdentifiable"><rect codeLine=3D"6" fil=
l=3D"#F1F1F1" height=3D"73.1094" id=3D"IIdentifiable" rx=3D"2.5" ry=3D"2.5"=
 style=3D"stroke:#181818;stroke-width:0.5;" width=3D"133" x=3D"802.5" y=3D"=
67"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" fon=
t-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"62" x=3D"838" y=
=3D"83.6016">=C2=ABInterface=C2=BB</text><text fill=3D"#000000" font-family=
=3D"sans-serif" font-size=3D"14" font-style=3D"italic" lengthAdjust=3D"spac=
ing" textLength=3D"81" x=3D"828.5" y=3D"99.668">IIdentifiable</text><line s=
tyle=3D"stroke:#181818;stroke-width:0.5;" x1=3D"803.5" x2=3D"934.5" y1=3D"1=
07.6211" y2=3D"107.6211"/><line style=3D"stroke:#181818;stroke-width:0.5;" =
x1=3D"803.5" x2=3D"934.5" y1=3D"115.6211" y2=3D"115.6211"/><text fill=3D"#0=
00000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing"=
 textLength=3D"121" x=3D"808.5" y=3D"133.1563">getUniqueID(): int</text></g=
><!--MD5=3D[45a5491ac94231a5f43c6afc127c44f8]
class GraphObject--><g id=3D"elem_GraphObject"><rect codeLine=3D"10" fill=
=3D"#F1F1F1" height=3D"205.0156" id=3D"GraphObject" rx=3D"2.5" ry=3D"2.5" s=
tyle=3D"stroke:#181818;stroke-width:0.5;" width=3D"295" x=3D"721.5" y=3D"23=
6.5"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" fo=
nt-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"59" x=3D"839.5" =
y=3D"253.1016">=C2=ABabstract=C2=BB</text><text fill=3D"#000000" font-famil=
y=3D"sans-serif" font-size=3D"14" font-style=3D"italic" lengthAdjust=3D"spa=
cing" textLength=3D"86" x=3D"826" y=3D"269.168">GraphObject</text><line sty=
le=3D"stroke:#181818;stroke-width:0.5;" x1=3D"722.5" x2=3D"1015.5" y1=3D"27=
7.1211" y2=3D"277.1211"/><text fill=3D"#000000" font-family=3D"sans-serif" =
font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"97" x=3D"727.5" y=
=3D"294.6563">#uniqueID: int</text><text fill=3D"#000000" font-family=3D"sa=
ns-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"91" x=3D"=
727.5" y=3D"311.1445">#label: String</text><line style=3D"stroke:#181818;st=
roke-width:0.5;" x1=3D"722.5" x2=3D"1015.5" y1=3D"318.0977" y2=3D"318.0977"=
/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" length=
Adjust=3D"spacing" textLength=3D"283" x=3D"727.5" y=3D"335.6328">#GraphObje=
ct(uniqueID: int, label: String)</text><text fill=3D"#000000" font-family=
=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"193=
" x=3D"727.5" y=3D"352.1211">#GraphObject(uniqueID: int)</text><text fill=
=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"sp=
acing" textLength=3D"191" x=3D"727.5" y=3D"368.6094">#GraphObject(GraphObje=
ct)</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14=
" lengthAdjust=3D"spacing" textLength=3D"132" x=3D"727.5" y=3D"385.0977">+g=
etUniqueID(): int</text><text fill=3D"#000000" font-family=3D"sans-serif" f=
ont-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"128" x=3D"727.5" y=
=3D"401.5859">+getLabel(): String</text><text fill=3D"#000000" font-family=
=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"159=
" x=3D"727.5" y=3D"418.0742">+setLabel(label: String)</text><text fill=3D"#=
000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing=
" textLength=3D"116" x=3D"727.5" y=3D"434.5625">+hashCode(): int</text></g>=
<!--MD5=3D[706e73df52f3df32f52be1ce9adb217e]
class Graph--><g id=3D"elem_Graph"><rect codeLine=3D"22" fill=3D"#F1F1F1" h=
eight=3D"223.8594" id=3D"Graph" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#1818=
18;stroke-width:0.5;" width=3D"445" x=3D"241.5" y=3D"227"/><text fill=3D"#0=
00000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing"=
 textLength=3D"42" x=3D"443" y=3D"245.5352">Graph</text><line style=3D"stro=
ke:#181818;stroke-width:0.5;" x1=3D"242.5" x2=3D"685.5" y1=3D"253.4883" y2=
=3D"253.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"242.5=
" x2=3D"685.5" y1=3D"261.4883" y2=3D"261.4883"/><text fill=3D"#000000" font=
-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=
=3D"247" x=3D"247.5" y=3D"279.0234">+addNode(nodeLabel: String): Node</text=
><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthA=
djust=3D"spacing" textLength=3D"433" x=3D"247.5" y=3D"295.5117">+addEdge(so=
urce: Node, edgeLabel: String, target: Node): Edge</text><text fill=3D"#000=
000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" t=
extLength=3D"306" x=3D"247.5" y=3D"312">+addEdge(source: Node, target: Node=
): Edge</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=
=3D"14" lengthAdjust=3D"spacing" textLength=3D"173" x=3D"247.5" y=3D"328.48=
83">+getNodes(): Set&lt;Node&gt;</text><text fill=3D"#000000" font-family=
=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"169=
" x=3D"247.5" y=3D"344.9766">+getEdges(): Set&lt;Edge&gt;</text><text fill=
=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"sp=
acing" textLength=3D"340" x=3D"247.5" y=3D"361.4648">+getEdgesConnectedTo(n=
ode: Node): Set&lt;Edge&gt;</text><text fill=3D"#000000" font-family=3D"san=
s-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"273" x=3D"=
247.5" y=3D"377.9531">+getOutEdges(node: Node): Set&lt;Edge&gt;</text><text=
 fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=
=3D"spacing" textLength=3D"97" x=3D"247.5" y=3D"394.4414">+getSize(): int</=
text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" len=
gthAdjust=3D"spacing" textLength=3D"222" x=3D"247.5" y=3D"410.9297">+contai=
ns(node: Node): boolean</text><text fill=3D"#000000" font-family=3D"sans-se=
rif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"150" x=3D"247.=
5" y=3D"427.418">+hasEdges(): boolean</text><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
249" x=3D"247.5" y=3D"443.9063">-deepCopy(Set&lt;Edge&gt;): Set&lt;Edge&gt;=
</text></g><!--MD5=3D[3fee75583bb7a64f68d843a3c9534ab3]
class Node--><g id=3D"elem_Node"><rect codeLine=3D"36" fill=3D"#F1F1F1" hei=
ght=3D"108.4414" id=3D"Node" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;=
stroke-width:0.5;" width=3D"231" x=3D"590.5" y=3D"746"/><text fill=3D"#0000=
00" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" te=
xtLength=3D"36" x=3D"688" y=3D"764.5352">Node</text><line style=3D"stroke:#=
181818;stroke-width:0.5;" x1=3D"591.5" x2=3D"820.5" y1=3D"772.4883" y2=3D"7=
72.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"591.5" x2=
=3D"820.5" y1=3D"780.4883" y2=3D"780.4883"/><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
184" x=3D"596.5" y=3D"798.0234">~Node(id: int, label: String)</text><text f=
ill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D=
"spacing" textLength=3D"93" x=3D"596.5" y=3D"814.5117">+Node(Node)</text><t=
ext fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdju=
st=3D"spacing" textLength=3D"219" x=3D"596.5" y=3D"831">+equals(other: Obje=
ct): boolean</text><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" lengthAdjust=3D"spacing" textLength=3D"125" x=3D"596.5" y=3D"847=
.4883">+toString(): String</text></g><!--MD5=3D[2e2f8c8f62c4eb3bc59a59727cf=
d81a5]
class Edge--><g id=3D"elem_Edge"><rect codeLine=3D"43" fill=3D"#F1F1F1" hei=
ght=3D"141.418" id=3D"Edge" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;s=
troke-width:0.5;" width=3D"385" x=3D"594.5" y=3D"528"/><text fill=3D"#00000=
0" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" tex=
tLength=3D"34" x=3D"770" y=3D"546.5352">Edge</text><line style=3D"stroke:#1=
81818;stroke-width:0.5;" x1=3D"595.5" x2=3D"978.5" y1=3D"554.4883" y2=3D"55=
4.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"595.5" x2=
=3D"978.5" y1=3D"562.4883" y2=3D"562.4883"/><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
373" x=3D"600.5" y=3D"580.0234">~Edge(id: int, source: Node, label: String,=
 target: Node)</text><text fill=3D"#000000" font-family=3D"sans-serif" font=
-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"87" x=3D"600.5" y=3D"59=
6.5117">~Edge(Edge)</text><text fill=3D"#000000" font-family=3D"sans-serif"=
 font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"134" x=3D"600.5" y=
=3D"613">+getSource(): Node</text><text fill=3D"#000000" font-family=3D"san=
s-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"132" x=3D"=
600.5" y=3D"629.4883">+getTarget(): Node</text><text fill=3D"#000000" font-=
family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=
=3D"219" x=3D"600.5" y=3D"645.9766">+equals(other: Object): boolean</text><=
text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdj=
ust=3D"spacing" textLength=3D"125" x=3D"600.5" y=3D"662.4648">+toString(): =
String</text></g><!--MD5=3D[70ed871e77a41e424a5ed7fef31572b8]
class IDGenerator--><g id=3D"elem_IDGenerator"><rect codeLine=3D"52" fill=
=3D"#F1F1F1" height=3D"124.9297" id=3D"IDGenerator" rx=3D"2.5" ry=3D"2.5" s=
tyle=3D"stroke:#181818;stroke-width:0.5;" width=3D"203" x=3D"362.5" y=3D"41=
"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengt=
hAdjust=3D"spacing" textLength=3D"83" x=3D"422.5" y=3D"59.5352">IDGenerator=
</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"363.5" x2=3D"=
564.5" y1=3D"67.4883" y2=3D"67.4883"/><text fill=3D"#000000" font-family=3D=
"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"79" x=
=3D"368.5" y=3D"85.0234">-nextID: int</text><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" text-decoratio=
n=3D"underline" textLength=3D"156" x=3D"368.5" y=3D"101.5117">-instance: ID=
Generator</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"363.=
5" x2=3D"564.5" y1=3D"108.4648" y2=3D"108.4648"/><text fill=3D"#000000" fon=
t-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLengt=
h=3D"101" x=3D"368.5" y=3D"126">-IDGenerator()</text><text fill=3D"#000000"=
 font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" text-=
decoration=3D"underline" textLength=3D"191" x=3D"368.5" y=3D"142.4883">+get=
Instance(): IDGenerator</text><text fill=3D"#000000" font-family=3D"sans-se=
rif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"115" x=3D"368.=
5" y=3D"158.9766">+getNextID(): int</text></g><!--MD5=3D[ba6cb0cf03e17925b2=
9ac1ef1842803e]
class NodeNotFoundException--><g id=3D"elem_NodeNotFoundException"><rect co=
deLine=3D"60" fill=3D"#F1F1F1" height=3D"91.9531" id=3D"NodeNotFoundExcepti=
on" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=
=3D"284" x=3D"152" y=3D"552.5"/><text fill=3D"#000000" font-family=3D"sans-=
serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"172" x=3D"20=
8" y=3D"571.0352">NodeNotFoundException</text><line style=3D"stroke:#181818=
;stroke-width:0.5;" x1=3D"153" x2=3D"435" y1=3D"578.9883" y2=3D"578.9883"/>=
<text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAd=
just=3D"spacing" text-decoration=3D"underline" textLength=3D"204" x=3D"158"=
 y=3D"596.5234">-{final} serialVersionUID: long</text><line style=3D"stroke=
:#181818;stroke-width:0.5;" x1=3D"153" x2=3D"435" y1=3D"603.4766" y2=3D"603=
.4766"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" =
lengthAdjust=3D"spacing" textLength=3D"272" x=3D"158" y=3D"621.0117">+NodeN=
otFoundException(node: Node)</text><text fill=3D"#000000" font-family=3D"sa=
ns-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"123" x=3D=
"158" y=3D"637.5">+getNode(): Node</text></g><!--MD5=3D[46c05dfe24a0851e179=
497c4631d3ff2]
class java.lang.Exception--><g id=3D"elem_java.lang.Exception"><rect fill=
=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.Exception" rx=3D"2.5" ry=3D=
"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"74" x=3D"22" y=3D=
"318"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" l=
engthAdjust=3D"spacing" textLength=3D"68" x=3D"25" y=3D"336.5352">Exception=
</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"23" x2=3D"95"=
 y1=3D"344.4883" y2=3D"344.4883"/><line style=3D"stroke:#181818;stroke-widt=
h:0.5;" x1=3D"23" x2=3D"95" y1=3D"352.4883" y2=3D"352.4883"/></g><!--MD5=3D=
[b633099da10ac253e099b79efabfb3de]
link Graph to Node--><g id=3D"link_Graph_Node"><path codeLine=3D"66" d=3D"M=
464.5993,463.2155 C464.5993,463.2155 485.58,608.46 524,669 C541.19,696.09 5=
66.24,719.23 592.29,738.15 " fill=3D"none" id=3D"Graph-Node" style=3D"strok=
e:#181818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"603.09,74=
5.73,598.0222,737.2851,598.9977,742.8572,593.4256,743.8327,603.09,745.73" s=
tyle=3D"stroke:#181818;stroke-width:1.0;"/><line style=3D"stroke:#181818;st=
roke-width:1.0;" x1=3D"598.9977" x2=3D"592.445" y1=3D"742.8572" y2=3D"738.2=
65"/><polygon fill=3D"#181818" points=3D"463.69,451.25,460.1561,457.5358,46=
4.5993,463.2155,468.1331,456.9297,463.69,451.25" style=3D"stroke:#181818;st=
roke-width:1.0;"/><text fill=3D"#000000" font-family=3D"sans-serif" font-si=
ze=3D"13" lengthAdjust=3D"spacing" textLength=3D"51" x=3D"525" y=3D"603.568=
4">{unique}</text><text fill=3D"#000000" font-family=3D"sans-serif" font-si=
ze=3D"13" lengthAdjust=3D"spacing" textLength=3D"6" x=3D"583.5203" y=3D"735=
.3757">*</text></g><!--MD5=3D[627c719221e760b279cf7d2e52d47228]
link Graph to Edge--><g id=3D"link_Graph_Edge"><path codeLine=3D"67" d=3D"M=
612.6956,458.5599 C612.6956,458.5599 665.21,500.41 688.99,519.36 " fill=3D"=
none" id=3D"Graph-Edge" style=3D"stroke:#181818;stroke-width:1.0;"/><polygo=
n fill=3D"#181818" points=3D"699.39,527.66,694.8474,518.9213,695.4808,524.5=
426,689.8595,525.1759,699.39,527.66" style=3D"stroke:#181818;stroke-width:1=
.0;"/><line style=3D"stroke:#181818;stroke-width:1.0;" x1=3D"695.4808" x2=
=3D"689.225" y1=3D"524.5426" y2=3D"519.555"/><polygon fill=3D"#181818" poin=
ts=3D"603.32,451.07,605.5111,457.9401,612.6956,458.5599,610.5044,451.6898,6=
03.32,451.07" style=3D"stroke:#181818;stroke-width:1.0;"/><text fill=3D"#00=
0000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" =
textLength=3D"51" x=3D"655" y=3D"494.5684">{unique}</text><text fill=3D"#00=
0000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" =
textLength=3D"6" x=3D"684.0458" y=3D"517.144">*</text></g><!--MD5=3D[238de6=
f790bfca2ac199327ec31dcf42]
reverse link IDGenerator to Graph--><g id=3D"link_IDGenerator_Graph"><path =
codeLine=3D"68" d=3D"M464,171.46 C464,188.75 464,207.83 464,226.72 " fill=
=3D"none" id=3D"IDGenerator-backto-Graph" style=3D"stroke:#181818;stroke-wi=
dth:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"464=
,166.15,460,175.15,464,171.15,468,175.15,464,166.15" style=3D"stroke:#18181=
8;stroke-width:1.0;"/></g><!--MD5=3D[91790c6417f8895e986e4c2fcc1e34d2]
reverse link GraphObject to Node--><g id=3D"link_GraphObject_Node"><path co=
deLine=3D"69" d=3D"M966.98,458.19 C1008.65,523.46 1039.03,604.19 997,669 C9=
58.31,728.66 885.14,761.18 821.86,778.77 " fill=3D"none" id=3D"GraphObject-=
backto-Node" style=3D"stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"n=
one" points=3D"961.13,462.04,955.88,441.51,972.79,454.28,961.13,462.04" sty=
le=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[01bfe56064976357157=
9e5117ffd3d61]
reverse link GraphObject to Edge--><g id=3D"link_GraphObject_Edge"><path co=
deLine=3D"70" d=3D"M830.5,460.89 C823.2,483.82 815.79,507.08 809.21,527.76 =
" fill=3D"none" id=3D"GraphObject-backto-Edge" style=3D"stroke:#181818;stro=
ke-width:1.0;"/><polygon fill=3D"none" points=3D"823.85,458.7,836.59,441.77=
,837.19,462.95,823.85,458.7" style=3D"stroke:#181818;stroke-width:1.0;"/></=
g><!--MD5=3D[6815c6ee6e4d35abc27ed97bff30f1d6]
reverse link IIdentifiable to GraphObject--><g id=3D"link_IIdentifiable_Gra=
phObject"><path codeLine=3D"71" d=3D"M869,160.22 C869,183.07 869,210.26 869=
,236.41 " fill=3D"none" id=3D"IIdentifiable-backto-GraphObject" style=3D"st=
roke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"=
none" points=3D"862,160.22,869,140.22,876,160.22,862,160.22" style=3D"strok=
e:#181818;stroke-width:1.0;"/></g><!--MD5=3D[9aca9f1b5d1d8f0105680cd048b251=
42]
link Edge to Node--><g id=3D"link_Edge_Node"><path codeLine=3D"72" d=3D"M76=
1.5952,680.4431 C761.5952,680.4431 752.59,705.02 748,716 C745.56,721.84 742=
.88,727.84 740.1,733.8 " fill=3D"none" id=3D"Edge-Node" style=3D"stroke:#18=
1818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"734.27,745.96,=
741.7638,739.5692,736.4288,741.4501,734.548,736.1151,734.27,745.96" style=
=3D"stroke:#181818;stroke-width:1.0;"/><line style=3D"stroke:#181818;stroke=
-width:1.0;" x1=3D"736.4288" x2=3D"739.895" y1=3D"741.4501" y2=3D"734.235"/=
><polygon fill=3D"none" points=3D"765.54,669.11,759.7899,673.4616,761.5952,=
680.4431,767.3453,676.0915,765.54,669.11" style=3D"stroke:#181818;stroke-wi=
dth:1.0;"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"1=
3" lengthAdjust=3D"spacing" textLength=3D"42" x=3D"757" y=3D"712.5684">sour=
ce</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13"=
 lengthAdjust=3D"spacing" textLength=3D"8" x=3D"729.5313" y=3D"735.2501">1<=
/text></g><!--MD5=3D[9aca9f1b5d1d8f0105680cd048b25142]
link Edge to Node--><g id=3D"link_Edge_Node"><path codeLine=3D"73" d=3D"M70=
8.6791,679.164 C708.6791,679.164 701.41,692.63 699,699 C695.01,709.53 693.4=
9,721.12 693.43,732.57 " fill=3D"none" id=3D"Edge-Node-1" style=3D"stroke:#=
181818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"693.99,745.8=
7,697.6106,736.7108,693.7812,740.8744,689.6176,737.0449,693.99,745.87" styl=
e=3D"stroke:#181818;stroke-width:1.0;"/><line style=3D"stroke:#181818;strok=
e-width:1.0;" x1=3D"693.7812" x2=3D"693.445" y1=3D"740.8744" y2=3D"732.88"/=
><polygon fill=3D"none" points=3D"715.09,669.02,708.5032,671.955,708.6791,6=
79.164,715.2659,676.229,715.09,669.02" style=3D"stroke:#181818;stroke-width=
:1.0;"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13" =
lengthAdjust=3D"spacing" textLength=3D"37" x=3D"702" y=3D"712.5684">target<=
/text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13" le=
ngthAdjust=3D"spacing" textLength=3D"8" x=3D"683.8387" y=3D"735.148">1</tex=
t></g><!--MD5=3D[cf44676dc0f23d4544f6f69424f28a90]
link NodeNotFoundException to Node--><g id=3D"link_NodeNotFoundException_No=
de"><path codeLine=3D"74" d=3D"M377.1935,650.8176 C377.1935,650.8176 457.04=
,696.72 497,716 C522.77,728.43 550.91,740.55 577.95,751.51 " fill=3D"none" =
id=3D"NodeNotFoundException-Node" style=3D"stroke:#181818;stroke-width:1.0;=
"/><polygon fill=3D"#181818" points=3D"590.28,756.46,583.4165,749.3966,585.=
6395,754.5983,580.4378,756.8214,590.28,756.46" style=3D"stroke:#181818;stro=
ke-width:1.0;"/><line style=3D"stroke:#181818;stroke-width:1.0;" x1=3D"585.=
6395" x2=3D"578.225" y1=3D"754.5983" y2=3D"751.615"/><polygon fill=3D"none"=
 points=3D"366.87,644.7,369.9925,651.2,377.1935,650.8176,374.071,644.3176,3=
66.87,644.7" style=3D"stroke:#181818;stroke-width:1.0;"/><text fill=3D"#000=
000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" t=
extLength=3D"8" x=3D"574.6104" y=3D"750.7544">1</text></g><!--MD5=3D[206c94=
2ce207c31c315d2b768eafb7e5]
reverse link java.lang.Exception to NodeNotFoundException--><g id=3D"link_j=
ava.lang.Exception_NodeNotFoundException"><path codeLine=3D"75" d=3D"M81.92=
,377.22 C96.33,399.51 115.94,427.89 136,451 C167.75,487.58 207.81,524.64 23=
9.65,552.34 " fill=3D"none" id=3D"java.lang.Exception-backto-NodeNotFoundEx=
ception" style=3D"stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"none"=
 points=3D"75.92,380.84,71.14,360.19,87.75,373.35,75.92,380.84" style=3D"st=
roke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[c5bb87c35607bcec073602249c8=
752c1]
link Graph to NodeNotFoundException--><g id=3D"link_Graph_NodeNotFoundExcep=
tion"><path codeLine=3D"76" d=3D"M390.67,451.07 C368.32,484.92 344.88,520.4=
4 326.67,548.01 " fill=3D"none" id=3D"Graph-to-NodeNotFoundException" style=
=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fi=
ll=3D"#181818" points=3D"323.8,552.37,332.0996,547.0674,326.557,548.1988,32=
5.4256,542.6562,323.8,552.37" style=3D"stroke:#181818;stroke-width:1.0;"/><=
/g><!--MD5=3D[8c33450f411073c2b2a7453e58a75dd0]
@startuml p6_string_graph_model
skinparam classAttributeIconSize 0
hide circle
skinparam genericDisplay old

package es.ua.dlsi.prog3.p6.graph {
    interface IIdentifiable <<Interface>> {
        getUniqueID(): int
    }

    abstract class GraphObject <<abstract>> {
        #uniqueID: int
        #label: String
        #GraphObject(uniqueID: int, label: String)
        #GraphObject(uniqueID: int)
        #GraphObject(GraphObject)
        +getUniqueID(): int
        +getLabel(): String
        +setLabel(label: String)
        +hashCode(): int
    }

    class Graph {
        +addNode(nodeLabel: String): Node
        +addEdge(source: Node, edgeLabel: String, target: Node): Edge
        +addEdge(source: Node, target: Node): Edge
        +getNodes(): Set<Node>
        +getEdges(): Set<Edge>
        +getEdgesConnectedTo(node: Node): Set<Edge>
        +getOutEdges(node: Node): Set<Edge>
        +getSize(): int
        +contains(node: Node): boolean
        +hasEdges(): boolean
        -deepCopy(Set<Edge>): Set<Edge>
    }

    class Node {
        ~Node(id: int, label: String)
        +Node(Node)
        +equals(other: Object): boolean
        +toString(): String
    }

    class Edge {
        ~Edge(id: int, source: Node, label: String, target: Node)
        ~Edge(Edge)
        +getSource(): Node
        +getTarget(): Node
        +equals(other: Object): boolean
        +toString(): String
    }

    class IDGenerator {
        -nextID: int
        -{static} instance: IDGenerator
        -IDGenerator()
        +{static} getInstance(): IDGenerator
        +getNextID(): int
    }

    class NodeNotFoundException {
        -{static} {final} serialVersionUID: long
        +NodeNotFoundException(node: Node)
        +getNode(): Node
    }

    Graph *-> "*" Node: "{unique}"
    Graph *-> "*" Edge: "{unique}"
    IDGenerator <.. Graph
    GraphObject <|- - Node
    GraphObject <|- - Edge
    IIdentifiable <|.. GraphObject
    Edge o- -> "1" Node: "-source"
    Edge o- -> "1" Node: "-target"
    NodeNotFoundException o- -> "1"  Node
    java.lang.Exception <|- - NodeNotFoundException
    Graph ..> NodeNotFoundException
}

@end

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: es
Country: ES
--></g></svg>
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/img/p6_string_graph_algorithms.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?><svg xmlns=3D"h=
ttp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" con=
tentStyleType=3D"text/css" height=3D"700px" preserveAspectRatio=3D"none" st=
yle=3D"width:1790px;height:700px;background:#FFFFFF;" version=3D"1.1" viewB=
ox=3D"0 0 1790 700" width=3D"1790px" zoomAndPan=3D"magnify"><defs/><g><!--M=
D5=3D[212ae7d3f65ff18c211c6142b573cbbf]
cluster es.ua.dlsi.prog3.p6.algorithms--><g id=3D"cluster_es.ua.dlsi.prog3.=
p6.algorithms"><path d=3D"M319.5,8 L534.5,8 A3.75,3.75 0 0 1 537,10.5 L544,=
30.4883 L1273.5,30.4883 A2.5,2.5 0 0 1 1276,32.9883 L1276,690.5 A2.5,2.5 0 =
0 1 1273.5,693 L319.5,693 A2.5,2.5 0 0 1 317,690.5 L317,10.5 A2.5,2.5 0 0 1=
 319.5,8 " fill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line =
style=3D"stroke:#000000;stroke-width:1.5;" x1=3D"317" x2=3D"544" y1=3D"30.4=
883" y2=3D"30.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" font=
-size=3D"14" font-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"21=
4" x=3D"321" y=3D"23.5352">es.ua.dlsi.prog3.p6.algorithms</text></g><!--MD5=
=3D[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id=3D"cluster_java.lang"><path d=3D"M1302.5,6 L1366.=
5,6 A3.75,3.75 0 0 1 1369,8.5 L1376,28.4883 L1773.5,28.4883 A2.5,2.5 0 0 1 =
1776,30.9883 L1776,133.5 A2.5,2.5 0 0 1 1773.5,136 L1302.5,136 A2.5,2.5 0 0=
 1 1300,133.5 L1300,8.5 A2.5,2.5 0 0 1 1302.5,6 " fill=3D"none" style=3D"st=
roke:#000000;stroke-width:1.5;"/><line style=3D"stroke:#000000;stroke-width=
:1.5;" x1=3D"1300" x2=3D"1376" y1=3D"28.4883" y2=3D"28.4883"/><text fill=3D=
"#000000" font-family=3D"sans-serif" font-size=3D"14" font-weight=3D"bold" =
lengthAdjust=3D"spacing" textLength=3D"63" x=3D"1304" y=3D"21.5352">java.la=
ng</text></g><!--MD5=3D[9592ef55f1c8392019ddb2ccaaa5bf70]
cluster es.ua.dlsi.prog3.p6.model--><g id=3D"cluster_es.ua.dlsi.prog3.p6.mo=
del"><path d=3D"M8.5,575 L189.5,575 A3.75,3.75 0 0 1 192,577.5 L199,597.488=
3 L290.5,597.4883 A2.5,2.5 0 0 1 293,599.9883 L293,665.5 A2.5,2.5 0 0 1 290=
.5,668 L8.5,668 A2.5,2.5 0 0 1 6,665.5 L6,577.5 A2.5,2.5 0 0 1 8.5,575 " fi=
ll=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line style=3D"stro=
ke:#000000;stroke-width:1.5;" x1=3D"6" x2=3D"199" y1=3D"597.4883" y2=3D"597=
.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" =
font-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"180" x=3D"10" y=
=3D"590.5352">es.ua.dlsi.prog3.p6.model</text></g><!--MD5=3D[eac6bbc2a6af1a=
5da138885cd63c1177]
class GraphAlgorithmException--><g id=3D"elem_GraphAlgorithmException"><rec=
t codeLine=3D"11" fill=3D"#F1F1F1" height=3D"75.4648" id=3D"GraphAlgorithmE=
xception" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" =
width=3D"321" x=3D"925.5" y=3D"43"/><text fill=3D"#000000" font-family=3D"s=
ans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"179" x=
=3D"996.5" y=3D"61.5352">GraphAlgorithmException</text><line style=3D"strok=
e:#181818;stroke-width:0.5;" x1=3D"926.5" x2=3D"1245.5" y1=3D"69.4883" y2=
=3D"69.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=
=3D"14" lengthAdjust=3D"spacing" text-decoration=3D"underline" textLength=
=3D"204" x=3D"931.5" y=3D"87.0234">-{final} serialVersionUID: long</text><l=
ine style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"926.5" x2=3D"1245.5" y=
1=3D"93.9766" y2=3D"93.9766"/><text fill=3D"#000000" font-family=3D"sans-se=
rif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"309" x=3D"931.=
5" y=3D"111.5117">+GraphAlgorithmException(message: String)</text></g><!--M=
D5=3D[4533588fb66c6fa31a6e04bf29ae6161]
class Algorithms--><g id=3D"elem_Algorithms"><rect codeLine=3D"15" fill=3D"=
#F1F1F1" height=3D"91.9531" id=3D"Algorithms" rx=3D"2.5" ry=3D"2.5" style=
=3D"stroke:#181818;stroke-width:0.5;" width=3D"490" x=3D"544" y=3D"183"/><t=
ext fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdju=
st=3D"spacing" textLength=3D"76" x=3D"751" y=3D"201.5352">Algorithms</text>=
<line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"545" x2=3D"1033" y1=
=3D"209.4883" y2=3D"209.4883"/><line style=3D"stroke:#181818;stroke-width:0=
.5;" x1=3D"545" x2=3D"1033" y1=3D"217.4883" y2=3D"217.4883"/><text fill=3D"=
#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacin=
g" text-decoration=3D"underline" textLength=3D"343" x=3D"550" y=3D"235.0234=
">+dfs(graph: Graph, fromNode: Node): List&lt;Node&gt;</text><text fill=3D"=
#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacin=
g" text-decoration=3D"underline" textLength=3D"478" x=3D"550" y=3D"251.5117=
">+shortestPathCost(graph: Graph, fromNode: Node, toNode: Node): int</text>=
<text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAd=
just=3D"spacing" text-decoration=3D"underline" textLength=3D"202" x=3D"550"=
 y=3D"268">+exportDot(File, Graph): void</text></g><!--MD5=3D[3fecdee75300c=
eae8898777e9c923dcc]
class DFS--><g id=3D"elem_DFS"><rect codeLine=3D"21" fill=3D"#F1F1F1" heigh=
t=3D"106.0859" id=3D"DFS" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;str=
oke-width:0.5;" width=3D"239" x=3D"333.5" y=3D"377"/><text fill=3D"#000000"=
 font-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengthAd=
just=3D"spacing" textLength=3D"110" x=3D"398" y=3D"393.6016">=C2=ABpackage =
visibility=C2=BB</text><text fill=3D"#000000" font-family=3D"sans-serif" fo=
nt-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"26" x=3D"440" y=3D"40=
9.668">DFS</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"334=
.5" x2=3D"571.5" y1=3D"417.6211" y2=3D"417.6211"/><line style=3D"stroke:#18=
1818;stroke-width:0.5;" x1=3D"334.5" x2=3D"571.5" y1=3D"425.6211" y2=3D"425=
.6211"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" =
lengthAdjust=3D"spacing" textLength=3D"138" x=3D"339.5" y=3D"443.1563">+DFS=
(graph: Graph)</text><text fill=3D"#000000" font-family=3D"sans-serif" font=
-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"161" x=3D"339.5" y=3D"4=
59.6445">+run(node: Node): void</text><text fill=3D"#000000" font-family=3D=
"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"227" x=
=3D"339.5" y=3D"476.1328">+getVisitSequence(): List&lt;Node&gt;</text></g><=
!--MD5=3D[c8860a7c916dc983410fb07a2b60ecab]
class DijkstraShortestPath--><g id=3D"elem_DijkstraShortestPath"><rect code=
Line=3D"27" fill=3D"#F1F1F1" height=3D"122.5742" id=3D"DijkstraShortestPath=
" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D=
"344" x=3D"916" y=3D"368.5"/><text fill=3D"#000000" font-family=3D"sans-ser=
if" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLen=
gth=3D"110" x=3D"1033" y=3D"385.1016">=C2=ABpackage visibility=C2=BB</text>=
<text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAd=
just=3D"spacing" textLength=3D"139" x=3D"1018.5" y=3D"401.168">DijkstraShor=
testPath</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"917" =
x2=3D"1259" y1=3D"409.1211" y2=3D"409.1211"/><line style=3D"stroke:#181818;=
stroke-width:0.5;" x1=3D"917" x2=3D"1259" y1=3D"417.1211" y2=3D"417.1211"/>=
<text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAd=
just=3D"spacing" textLength=3D"251" x=3D"922" y=3D"434.6563">+DijkstraShort=
estPath(graph: Graph)</text><text fill=3D"#000000" font-family=3D"sans-seri=
f" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"231" x=3D"922" y=
=3D"451.1445">+compute(fromNode: Node): void</text><text fill=3D"#000000" f=
ont-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLen=
gth=3D"332" x=3D"922" y=3D"467.6328">+getComputedDistances(): Map&lt;Node, =
Integer&gt;</text><text fill=3D"#000000" font-family=3D"sans-serif" font-si=
ze=3D"14" lengthAdjust=3D"spacing" textLength=3D"278" x=3D"922" y=3D"484.12=
11">-processNeighbours(source: Node): void</text></g><!--MD5=3D[b703e6592dd=
32c7f1880e19159e05668]
class DotExporter--><g id=3D"elem_DotExporter"><rect codeLine=3D"35" fill=
=3D"#F1F1F1" height=3D"155.5508" id=3D"DotExporter" rx=3D"2.5" ry=3D"2.5" s=
tyle=3D"stroke:#181818;stroke-width:0.5;" width=3D"273" x=3D"607.5" y=3D"35=
2"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font=
-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"110" x=3D"689" y=
=3D"368.6016">=C2=ABpackage visibility=C2=BB</text><text fill=3D"#000000" f=
ont-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLen=
gth=3D"84" x=3D"702" y=3D"384.668">DotExporter</text><line style=3D"stroke:=
#181818;stroke-width:0.5;" x1=3D"608.5" x2=3D"879.5" y1=3D"392.6211" y2=3D"=
392.6211"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"1=
4" lengthAdjust=3D"spacing" text-decoration=3D"underline" textLength=3D"204=
" x=3D"613.5" y=3D"410.1563">-{final} EMPTY_STRING: String</text><line styl=
e=3D"stroke:#181818;stroke-width:0.5;" x1=3D"608.5" x2=3D"879.5" y1=3D"417.=
1094" y2=3D"417.1094"/><text fill=3D"#000000" font-family=3D"sans-serif" fo=
nt-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"247" x=3D"613.5" y=3D=
"434.6445">-generateDotID(IIdentifiable): String</text><text fill=3D"#00000=
0" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" tex=
tLength=3D"191" x=3D"613.5" y=3D"451.1328">-escapeLabel(String): String</te=
xt><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengt=
hAdjust=3D"spacing" textLength=3D"261" x=3D"613.5" y=3D"467.6211">-printNod=
es(PrintStream, Graph): void</text><text fill=3D"#000000" font-family=3D"sa=
ns-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"259" x=3D=
"613.5" y=3D"484.1094">-printEdges(PrintStream, Graph): void</text><text fi=
ll=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"=
spacing" textLength=3D"178" x=3D"613.5" y=3D"500.5977">+export(File, Graph)=
: void</text></g><!--MD5=3D[fe383a3a298b1957f875e7d4d13e3ed8]
class DijkstraShortestPath.Cost--><g id=3D"elem_DijkstraShortestPath.Cost">=
<rect codeLine=3D"55" fill=3D"#F1F1F1" height=3D"91.9531" id=3D"DijkstraSho=
rtestPath.Cost" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:=
0.5;" width=3D"189" x=3D"834.5" y=3D"585"/><text fill=3D"#000000" font-fami=
ly=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"1=
74" x=3D"842" y=3D"603.5352">DijkstraShortestPath.Cost</text><line style=3D=
"stroke:#181818;stroke-width:0.5;" x1=3D"835.5" x2=3D"1022.5" y1=3D"611.488=
3" y2=3D"611.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"=
835.5" x2=3D"1022.5" y1=3D"619.4883" y2=3D"619.4883"/><text fill=3D"#000000=
" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" text=
Length=3D"50" x=3D"840.5" y=3D"637.0234">~Cost()</text><text fill=3D"#00000=
0" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" tex=
tLength=3D"112" x=3D"840.5" y=3D"653.5117">~Cost(Node, int)</text><text fil=
l=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"s=
pacing" textLength=3D"177" x=3D"840.5" y=3D"670">+compare(Cost, Cost): int<=
/text></g><!--MD5=3D[46c05dfe24a0851e179497c4631d3ff2]
class java.lang.Exception--><g id=3D"elem_java.lang.Exception"><rect fill=
=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.Exception" rx=3D"2.5" ry=3D=
"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"74" x=3D"1316" y=
=3D"59.5"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"1=
4" lengthAdjust=3D"spacing" textLength=3D"68" x=3D"1319" y=3D"78.0352">Exce=
ption</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1317" x2=
=3D"1389" y1=3D"85.9883" y2=3D"85.9883"/><line style=3D"stroke:#181818;stro=
ke-width:0.5;" x1=3D"1317" x2=3D"1389" y1=3D"93.9883" y2=3D"93.9883"/></g><=
!--MD5=3D[58b9a1998a5b60c7da72e281cabe28d0]
class java.lang.FileNotFoundException--><g id=3D"elem_java.lang.FileNotFoun=
dException"><rect fill=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.FileN=
otFoundException" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-widt=
h:0.5;" width=3D"166" x=3D"1425" y=3D"59.5"/><text fill=3D"#000000" font-fa=
mily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D=
"160" x=3D"1428" y=3D"78.0352">FileNotFoundException</text><line style=3D"s=
troke:#181818;stroke-width:0.5;" x1=3D"1426" x2=3D"1590" y1=3D"85.9883" y2=
=3D"85.9883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1426" =
x2=3D"1590" y1=3D"93.9883" y2=3D"93.9883"/></g><!--MD5=3D[853266727a20cc8ed=
824ed95d0b7ad9b]
class java.lang.Comparator--><g id=3D"elem_java.lang.Comparator"><rect code=
Line=3D"61" fill=3D"#F1F1F1" height=3D"78.8867" id=3D"java.lang.Comparator"=
 rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"=
134" x=3D"1626" y=3D"41"/><text fill=3D"#000000" font-family=3D"sans-serif"=
 font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=
=3D"62" x=3D"1648" y=3D"60.4902">=C2=ABinterface=C2=BB</text><text fill=3D"=
#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacin=
g" textLength=3D"83" x=3D"1637.5" y=3D"76.5566">Comparator</text><rect fill=
=3D"#FFFFFF" height=3D"44.3984" style=3D"stroke:#181818;stroke-width:1.0;st=
roke-dasharray:2.0,2.0;" width=3D"26" x=3D"1737" y=3D"38"/><text fill=3D"#0=
00000" font-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" le=
ngthAdjust=3D"spacing" textLength=3D"4" x=3D"1748" y=3D"50.6016">=C2=A0</te=
xt><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-=
style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"1746" y=3D"=
64.7344">T</text><text fill=3D"#000000" font-family=3D"sans-serif" font-siz=
e=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"4" x=
=3D"1748" y=3D"78.8672">=C2=A0</text><line style=3D"stroke:#181818;stroke-w=
idth:0.5;" x1=3D"1627" x2=3D"1759" y1=3D"87.3984" y2=3D"87.3984"/><line sty=
le=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1627" x2=3D"1759" y1=3D"95.39=
84" y2=3D"95.3984"/><text fill=3D"#000000" font-family=3D"sans-serif" font-=
size=3D"14" lengthAdjust=3D"spacing" textLength=3D"122" x=3D"1632" y=3D"112=
.9336">compare(T, T): int</text></g><!--MD5=3D[0ab447833e303a770f7eb2e151f6=
e856]
class es.ua.dlsi.prog3.p6.model.NodeNotFoundException--><g id=3D"elem_es.ua=
.dlsi.prog3.p6.model.NodeNotFoundException"><rect fill=3D"#F1F1F1" height=
=3D"42.4883" id=3D"es.ua.dlsi.prog3.p6.model.NodeNotFoundException" rx=3D"2=
.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"178" x=
=3D"22" y=3D"610"/><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" lengthAdjust=3D"spacing" textLength=3D"172" x=3D"25" y=3D"628.53=
52">NodeNotFoundException</text><line style=3D"stroke:#181818;stroke-width:=
0.5;" x1=3D"23" x2=3D"199" y1=3D"636.4883" y2=3D"636.4883"/><line style=3D"=
stroke:#181818;stroke-width:0.5;" x1=3D"23" x2=3D"199" y1=3D"644.4883" y2=
=3D"644.4883"/></g><!--MD5=3D[88a5ebef56db08bd28e4a4dc3d86e684]
class es.ua.dlsi.prog3.p6.model.Node--><g id=3D"elem_es.ua.dlsi.prog3.p6.mo=
del.Node"><rect fill=3D"#F1F1F1" height=3D"42.4883" id=3D"es.ua.dlsi.prog3.=
p6.model.Node" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0=
.5;" width=3D"42" x=3D"235" y=3D"610"/><text fill=3D"#000000" font-family=
=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"36"=
 x=3D"238" y=3D"628.5352">Node</text><line style=3D"stroke:#181818;stroke-w=
idth:0.5;" x1=3D"236" x2=3D"276" y1=3D"636.4883" y2=3D"636.4883"/><line sty=
le=3D"stroke:#181818;stroke-width:0.5;" x1=3D"236" x2=3D"276" y1=3D"644.488=
3" y2=3D"644.4883"/></g><!--MD5=3D[095a96923ac810fcb06e5246fe244932]
reverse link java.lang.Exception to GraphAlgorithmException--><g id=3D"link=
_java.lang.Exception_GraphAlgorithmException"><path codeLine=3D"44" d=3D"M1=
295.39,80.5 C1279.13,80.5 1262.87,80.5 1246.62,80.5 " fill=3D"none" id=3D"j=
ava.lang.Exception-backto-GraphAlgorithmException" style=3D"stroke:#181818;=
stroke-width:1.0;"/><polygon fill=3D"none" points=3D"1295.6,73.5,1315.6,80.=
5,1295.6,87.5,1295.6,73.5" style=3D"stroke:#181818;stroke-width:1.0;"/></g>=
<!--MD5=3D[55d1c0ecefe3df893c08810656038bfb]
reverse link es.ua.dlsi.prog3.p6.model.NodeNotFoundException to Algorithms-=
-><g id=3D"link_es.ua.dlsi.prog3.p6.model.NodeNotFoundException_Algorithms"=
><path codeLine=3D"45" d=3D"M122.07,605.12 C147.75,550.35 216.86,418.94 316=
,352 C383.21,306.62 466.2,278.12 543.82,260.22 " fill=3D"none" id=3D"es.ua.=
dlsi.prog3.p6.model.NodeNotFoundException-backto-Algorithms" style=3D"strok=
e:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#18=
1818" points=3D"119.86,609.86,127.284,603.3882,121.9697,605.3269,120.0311,6=
00.0126,119.86,609.86" style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--=
MD5=3D[d12d82587a09bd1ec979d63ca367c223]
reverse link java.lang.FileNotFoundException to Algorithms--><g id=3D"link_=
java.lang.FileNotFoundException_Algorithms"><path codeLine=3D"46" d=3D"M147=
8.24,104.82 C1459.21,118.48 1433.42,134.82 1408,144 C1289.17,186.94 1150.31=
,208.19 1034.25,218.6 " fill=3D"none" id=3D"java.lang.FileNotFoundException=
-backto-Algorithms" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharr=
ay:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"1482.44,101.77,1472.8096,=
103.8326,1478.3976,104.7126,1477.5176,110.3006,1482.44,101.77" style=3D"str=
oke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[293149d551caa4947e62dc708756=
4224]
reverse link GraphAlgorithmException to Algorithms--><g id=3D"link_GraphAlg=
orithmException_Algorithms"><path codeLine=3D"48" d=3D"M1007.11,120.42 C968=
.1,139.65 920.82,162.98 880.27,182.98 " fill=3D"none" id=3D"GraphAlgorithmE=
xception-backto-Algorithms" style=3D"stroke:#181818;stroke-width:1.0;stroke=
-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"1011.82,118.09,10=
01.9791,118.4869,1007.3365,120.3032,1005.5203,125.6605,1011.82,118.09" styl=
e=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[e9610a8a738c6adb2e12=
265bc3c02aeb]
link Algorithms to DFS--><g id=3D"link_Algorithms_DFS"><path codeLine=3D"50=
" d=3D"M712.76,275.16 C663.04,304.6 597.85,343.21 545.22,374.38 " fill=3D"n=
one" id=3D"Algorithms-to-DFS" style=3D"stroke:#181818;stroke-width:1.0;stro=
ke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"540.81,376.99,5=
50.59,375.8278,545.1075,374.4343,546.501,368.9518,540.81,376.99" style=3D"s=
troke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[95b8e1e40182fa19e688bea0e9=
6506f0]
link Algorithms to DijkstraShortestPath--><g id=3D"link_Algorithms_Dijkstra=
ShortestPath"><path codeLine=3D"51" d=3D"M856.85,275.16 C896.99,301.87 948.=
46,336.13 992.64,365.54 " fill=3D"none" id=3D"Algorithms-to-DijkstraShortes=
tPath" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/=
><polygon fill=3D"#181818" points=3D"996.9,368.37,991.6303,360.0495,992.739=
7,365.5965,987.1927,366.7059,996.9,368.37" style=3D"stroke:#181818;stroke-w=
idth:1.0;"/></g><!--MD5=3D[f83380eaaee33cb70fd892b202b118d4]
link Algorithms to DotExporter--><g id=3D"link_Algorithms_DotExporter"><pat=
h codeLine=3D"52" d=3D"M778.79,275.16 C774.02,296.25 768.19,322.04 762.67,3=
46.43 " fill=3D"none" id=3D"Algorithms-to-DotExporter" style=3D"stroke:#181=
818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" =
points=3D"761.5,351.61,767.3841,343.7121,762.6013,346.7328,759.5806,341.95,=
761.5,351.61" style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[d8=
68f766e221fa4ffb6b50121a2c3d69]
link DijkstraShortestPath.Cost to java.lang.Comparator--><g id=3D"link_Dijk=
straShortestPath.Cost_java.lang.Comparator"><path codeLine=3D"65" d=3D"M102=
3.64,620.63 C1127.34,608.98 1285.78,586.68 1337,555 C1503.6,451.95 1619.37,=
240.12 1667.71,138.43 " fill=3D"none" id=3D"DijkstraShortestPath.Cost-to-ja=
va.lang.Comparator" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharr=
ay:7.0,7.0;"/><polygon fill=3D"none" points=3D"1661.42,135.37,1676.22,120.2=
,1674.11,141.28,1661.42,135.37" style=3D"stroke:#181818;stroke-width:1.0;"/=
><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13" lengthA=
djust=3D"spacing" textLength=3D"208" x=3D"1574" y=3D"318.5684">=C2=ABbind=
=C2=BB DijkstraShortestPath.Cost</text></g><!--MD5=3D[379025d4604f7e40905ae=
c01a2da8f10]
link DijkstraShortestPath.Cost to es.ua.dlsi.prog3.p6.model.Node--><g id=3D=
"link_DijkstraShortestPath.Cost_es.ua.dlsi.prog3.p6.model.Node"><path codeL=
ine=3D"67" d=3D"M822.45,631 C822.45,631 467.21,631 290.1,631 " fill=3D"none=
" id=3D"DijkstraShortestPath.Cost-es.ua.dlsi.prog3.p6.model.Node" style=3D"=
stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"277.=
03,631,286.03,635,282.03,631,286.03,627,277.03,631" style=3D"stroke:#181818=
;stroke-width:1.0;"/><line style=3D"stroke:#181818;stroke-width:1.0;" x1=3D=
"282.03" x2=3D"290.03" y1=3D"631" y2=3D"631"/><polygon fill=3D"none" points=
=3D"834.45,631,828.45,627,822.45,631,828.45,635,834.45,631" style=3D"stroke=
:#181818;stroke-width:1.0;"/><text fill=3D"#000000" font-family=3D"sans-ser=
if" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"285.008=
3" y=3D"626.1494">1</text></g><!--MD5=3D[27917bcbeb57ef12b11b8120aeed07bd]
link DijkstraShortestPath to DijkstraShortestPath.Cost--><g id=3D"link_Dijk=
straShortestPath_DijkstraShortestPath.Cost"><path codeLine=3D"70" d=3D"M103=
2.1601,500.8956 C1032.1601,500.8956 991.27,552.06 973.3,574.56 " fill=3D"no=
ne" id=3D"DijkstraShortestPath-DijkstraShortestPath.Cost" style=3D"stroke:#=
181818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"965.01,584.9=
4,973.7557,580.411,968.1335,581.0357,967.5088,575.4134,965.01,584.94" style=
=3D"stroke:#181818;stroke-width:1.0;"/><line style=3D"stroke:#181818;stroke=
-width:1.0;" x1=3D"968.1335" x2=3D"973.12" y1=3D"581.0357" y2=3D"574.78"/><=
polygon fill=3D"#181818" points=3D"1039.65,491.52,1032.7799,493.7111,1032.1=
601,500.8956,1039.0302,498.7044,1039.65,491.52" style=3D"stroke:#181818;str=
oke-width:1.0;"/><text fill=3D"#000000" font-family=3D"sans-serif" font-siz=
e=3D"13" lengthAdjust=3D"spacing" textLength=3D"329" x=3D"999" y=3D"551.568=
4">{java.util.PriorityQueue&lt;DijkstraShortestPath.Cost&gt;}</text><text f=
ill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D=
"spacing" textLength=3D"8" x=3D"961.9115" y=3D"574.3343">n</text></g><!--MD=
5=3D[34179f042db46dfed71c638b67a82929]
link DijkstraShortestPath to es.ua.dlsi.prog3.p6.model.NodeNotFoundExceptio=
n--><g id=3D"link_DijkstraShortestPath_es.ua.dlsi.prog3.p6.model.NodeNotFou=
ndException"><path codeLine=3D"71" d=3D"M952.62,491.52 C934.52,497.93 916,5=
03.68 898,508 C603.04,578.87 506.96,474.65 218,567 C190.39,575.82 162.27,59=
2.75 141.79,606.84 " fill=3D"none" id=3D"DijkstraShortestPath-to-es.ua.dlsi=
.prog3.p6.model.NodeNotFoundException" style=3D"stroke:#181818;stroke-width=
:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"137.54=
,609.8,147.2109,607.9361,141.6422,606.9413,142.637,601.3726,137.54,609.8" s=
tyle=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[0a8f959c8e9a65cff=
88faf6fc19129fd]
link DijkstraShortestPath to GraphAlgorithmException--><g id=3D"link_Dijkst=
raShortestPath_GraphAlgorithmException"><path codeLine=3D"72" d=3D"M1087.65=
,368.31 C1087.25,297.99 1086.59,183.98 1086.24,123.04 " fill=3D"none" id=3D=
"DijkstraShortestPath-to-GraphAlgorithmException" style=3D"stroke:#181818;s=
troke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" point=
s=3D"1086.21,118.03,1082.2615,127.0527,1086.2386,123.0299,1090.2614,127.007=
,1086.21,118.03" style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D=
[b4fb1a6a914de7b16979e3f47cedbe7e]
@startuml "p6_string_graph_algorithms"
skinparam classAttributeIconSize 0
hide circle
'skinparam genericDisplay old
!function $paramType($T)=20
!$nl =3D "\n"
!$space =3D "  "
!return $nl + $space + $T + $space + $nl
!endfunction=20

package es.ua.dlsi.prog3.p6.algorithms {
    class GraphAlgorithmException {
        -{static} {final} serialVersionUID: long
        +GraphAlgorithmException(message: String)
    }
    class Algorithms {
        +{static} dfs(graph: Graph, fromNode: Node): List<Node>
        +{static} shortestPathCost(graph: Graph, fromNode: Node, toNode: No=
de): int
        +{static} exportDot(File, Graph): void
    }

    class DFS <<package visibility>> {
        +DFS(graph: Graph)
        +run(node: Node): void
        +getVisitSequence(): List<Node>=20
    }

    class DijkstraShortestPath  <<package visibility>> {
        +DijkstraShortestPath(graph: Graph)
        +compute(fromNode: Node): void
        +getComputedDistances(): Map<Node, Integer>
        -processNeighbours(source: Node): void
    }


    class DotExporter  <<package visibility>> {
        - {static} {final} EMPTY_STRING: String
        - generateDotID(IIdentifiable): String
        - escapeLabel(String): String
        - printNodes(PrintStream, Graph): void
        - printEdges(PrintStream, Graph): void
        + export(File, Graph): void
    }

    java.lang.Exception <|- - GraphAlgorithmException
    es.ua.dlsi.prog3.p6.model.NodeNotFoundException <.. Algorithms
    java.lang.FileNotFoundException <.. Algorithms
   =20
    GraphAlgorithmException <.. Algorithms

    Algorithms ..> DFS   =20
    Algorithms ..> DijkstraShortestPath
    Algorithms ..> DotExporter

    ' dikjstra
    class DijkstraShortestPath.Cost {
        ~Cost()
        ~Cost(Node, int)
        +compare(Cost, Cost): int
    }

    class java.lang.Comparator<$paramType(T)> <<interface>> {
        compare(T, T): int
    }

    DijkstraShortestPath.Cost ..|> java.lang.Comparator: <<bind>> DijkstraS=
hortestPath.Cost=20
    'DijkstraShortestPath +- - DijkstraShortestPath.Cost
    DijkstraShortestPath.Cost o- -> "1" es.ua.dlsi.prog3.p6.model.Node
    'class "PriorityQueue<DijkstraShortestPath.Cost>" as pq

    DijkstraShortestPath *- -> "n" DijkstraShortestPath.Cost : {java.util.P=
riorityQueue<DijkstraShortestPath.Cost>}
    DijkstraShortestPath ..> es.ua.dlsi.prog3.p6.model.NodeNotFoundExceptio=
n
    DijkstraShortestPath ..> GraphAlgorithmException
}

@enduml

@startuml "p6_string_graph_algorithms"
skinparam classAttributeIconSize 0
hide circle

package es.ua.dlsi.prog3.p6.algorithms {
    class GraphAlgorithmException {
        -{static} {final} serialVersionUID: long
        +GraphAlgorithmException(message: String)
    }
    class Algorithms {
        +{static} dfs(graph: Graph, fromNode: Node): List<Node>
        +{static} shortestPathCost(graph: Graph, fromNode: Node, toNode: No=
de): int
        +{static} exportDot(File, Graph): void
    }

    class DFS <<package visibility>> {
        +DFS(graph: Graph)
        +run(node: Node): void
        +getVisitSequence(): List<Node>=20
    }

    class DijkstraShortestPath  <<package visibility>> {
        +DijkstraShortestPath(graph: Graph)
        +compute(fromNode: Node): void
        +getComputedDistances(): Map<Node, Integer>
        -processNeighbours(source: Node): void
    }


    class DotExporter  <<package visibility>> {
        - {static} {final} EMPTY_STRING: String
        - generateDotID(IIdentifiable): String
        - escapeLabel(String): String
        - printNodes(PrintStream, Graph): void
        - printEdges(PrintStream, Graph): void
        + export(File, Graph): void
    }

    java.lang.Exception <|- - GraphAlgorithmException
    es.ua.dlsi.prog3.p6.model.NodeNotFoundException <.. Algorithms
    java.lang.FileNotFoundException <.. Algorithms
   =20
    GraphAlgorithmException <.. Algorithms

    Algorithms ..> DFS   =20
    Algorithms ..> DijkstraShortestPath
    Algorithms ..> DotExporter

    class DijkstraShortestPath.Cost {
        ~Cost()
        ~Cost(Node, int)
        +compare(Cost, Cost): int
    }

    class java.lang.Comparator<\n  T  \n> <<interface>> {
        compare(T, T): int
    }

    DijkstraShortestPath.Cost ..|> java.lang.Comparator: <<bind>> DijkstraS=
hortestPath.Cost=20
    DijkstraShortestPath.Cost o- -> "1" es.ua.dlsi.prog3.p6.model.Node

    DijkstraShortestPath *- -> "n" DijkstraShortestPath.Cost : {java.util.P=
riorityQueue<DijkstraShortestPath.Cost>}
    DijkstraShortestPath ..> es.ua.dlsi.prog3.p6.model.NodeNotFoundExceptio=
n
    DijkstraShortestPath ..> GraphAlgorithmException
}

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: es
Country: ES
--></g></svg>
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/img/p6_network.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?><svg xmlns=3D"h=
ttp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" con=
tentStyleType=3D"text/css" height=3D"650px" preserveAspectRatio=3D"none" st=
yle=3D"width:1269px;height:650px;background:#FFFFFF;" version=3D"1.1" viewB=
ox=3D"0 0 1269 650" width=3D"1269px" zoomAndPan=3D"magnify"><defs/><g><!--M=
D5=3D[468c628577d61d66a0bda2743704dfd4]
cluster es.ua.dlsi.prog3.p6.graph--><g id=3D"cluster_es.ua.dlsi.prog3.p6.gr=
aph"><path d=3D"M976.5,490.5 L1153.5,490.5 A3.75,3.75 0 0 1 1156,493 L1163,=
512.9883 L1259.5,512.9883 A2.5,2.5 0 0 1 1262,515.4883 L1262,601 A2.5,2.5 0=
 0 1 1259.5,603.5 L976.5,603.5 A2.5,2.5 0 0 1 974,601 L974,493 A2.5,2.5 0 0=
 1 976.5,490.5 " fill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/>=
<line style=3D"stroke:#000000;stroke-width:1.5;" x1=3D"974" x2=3D"1163" y1=
=3D"512.9883" y2=3D"512.9883"/><text fill=3D"#000000" font-family=3D"sans-s=
erif" font-size=3D"14" font-weight=3D"bold" lengthAdjust=3D"spacing" textLe=
ngth=3D"176" x=3D"978" y=3D"506.0352">es.ua.dlsi.prog3.p6.graph</text></g><=
!--MD5=3D[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id=3D"cluster_java.lang"><path d=3D"M266.5,6 L330.5,=
6 A3.75,3.75 0 0 1 333,8.5 L340,28.4883 L640.5,28.4883 A2.5,2.5 0 0 1 643,3=
0.9883 L643,133.5 A2.5,2.5 0 0 1 640.5,136 L266.5,136 A2.5,2.5 0 0 1 264,13=
3.5 L264,8.5 A2.5,2.5 0 0 1 266.5,6 " fill=3D"none" style=3D"stroke:#000000=
;stroke-width:1.5;"/><line style=3D"stroke:#000000;stroke-width:1.5;" x1=3D=
"264" x2=3D"340" y1=3D"28.4883" y2=3D"28.4883"/><text fill=3D"#000000" font=
-family=3D"sans-serif" font-size=3D"14" font-weight=3D"bold" lengthAdjust=
=3D"spacing" textLength=3D"63" x=3D"268" y=3D"21.5352">java.lang</text></g>=
<!--MD5=3D[1540ce665c7baa48a3de79846f282ef0]
cluster es.ua.dlsi.prog3.p6.network--><g id=3D"cluster_es.ua.dlsi.prog3.p6.=
network"><path d=3D"M8.5,185 L203.5,185 A3.75,3.75 0 0 1 206,187.5 L213,207=
.4883 L765.5,207.4883 A2.5,2.5 0 0 1 768,209.9883 L768,640.5 A2.5,2.5 0 0 1=
 765.5,643 L8.5,643 A2.5,2.5 0 0 1 6,640.5 L6,187.5 A2.5,2.5 0 0 1 8.5,185 =
" fill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line style=3D"=
stroke:#000000;stroke-width:1.5;" x1=3D"6" x2=3D"213" y1=3D"207.4883" y2=3D=
"207.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"=
14" font-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"194" x=3D"1=
0" y=3D"200.5352">es.ua.dlsi.prog3.p6.network</text></g><!--MD5=3D[762522d4=
a69e9939827a70a8bbd0c945]
class es.ua.dlsi.prog3.p6.graph.Graph--><g id=3D"elem_es.ua.dlsi.prog3.p6.g=
raph.Graph"><rect codeLine=3D"11" fill=3D"#F1F1F1" height=3D"62.3984" id=3D=
"es.ua.dlsi.prog3.p6.graph.Graph" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#18=
1818;stroke-width:0.5;" width=3D"256" x=3D"990" y=3D"525.5"/><text fill=3D"=
#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacin=
g" textLength=3D"42" x=3D"993" y=3D"553.9902">Graph</text><rect fill=3D"#FF=
FFFF" height=3D"44.3984" style=3D"stroke:#181818;stroke-width:1.0;stroke-da=
sharray:2.0,2.0;" width=3D"206" x=3D"1043" y=3D"522.5"/><text fill=3D"#0000=
00" font-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengt=
hAdjust=3D"spacing" textLength=3D"4" x=3D"1144" y=3D"535.1016">=C2=A0</text=
><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-st=
yle=3D"italic" lengthAdjust=3D"spacing" textLength=3D"188" x=3D"1052" y=3D"=
549.2344">NodeLabelType, EdgeLabelType</text><text fill=3D"#000000" font-fa=
mily=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"=
spacing" textLength=3D"4" x=3D"1144" y=3D"563.3672">=C2=A0</text><line styl=
e=3D"stroke:#181818;stroke-width:0.5;" x1=3D"991" x2=3D"1245" y1=3D"571.898=
4" y2=3D"571.8984"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"=
991" x2=3D"1245" y1=3D"579.8984" y2=3D"579.8984"/></g><!--MD5=3D[008d82c49f=
85b4d489e041917c99c847]
class java.lang.Comparable--><g id=3D"elem_java.lang.Comparable"><rect code=
Line=3D"16" fill=3D"#F1F1F1" height=3D"78.8867" id=3D"java.lang.Comparable"=
 rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"=
146" x=3D"280" y=3D"41"/><text fill=3D"#000000" font-family=3D"sans-serif" =
font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=
=3D"62" x=3D"308" y=3D"60.4902">=C2=ABinterface=C2=BB</text><text fill=3D"#=
000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing=
" textLength=3D"84" x=3D"297" y=3D"76.5566">Comparable</text><rect fill=3D"=
#FFFFFF" height=3D"44.3984" style=3D"stroke:#181818;stroke-width:1.0;stroke=
-dasharray:2.0,2.0;" width=3D"26" x=3D"403" y=3D"38"/><text fill=3D"#000000=
" font-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengthA=
djust=3D"spacing" textLength=3D"4" x=3D"414" y=3D"50.6016">=C2=A0</text><te=
xt fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-style=
=3D"italic" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"412" y=3D"64.734=
4">T</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"1=
2" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"4" x=3D"414=
" y=3D"78.8672">=C2=A0</text><line style=3D"stroke:#181818;stroke-width:0.5=
;" x1=3D"281" x2=3D"425" y1=3D"87.3984" y2=3D"87.3984"/><line style=3D"stro=
ke:#181818;stroke-width:0.5;" x1=3D"281" x2=3D"425" y1=3D"95.3984" y2=3D"95=
.3984"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" =
lengthAdjust=3D"spacing" textLength=3D"134" x=3D"286" y=3D"112.9336">+compa=
reTo(T): int</text></g><!--MD5=3D[58b9a1998a5b60c7da72e281cabe28d0]
class java.lang.FileNotFoundException--><g id=3D"elem_java.lang.FileNotFoun=
dException"><rect fill=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.FileN=
otFoundException" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-widt=
h:0.5;" width=3D"166" x=3D"461" y=3D"59.5"/><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
160" x=3D"464" y=3D"78.0352">FileNotFoundException</text><line style=3D"str=
oke:#181818;stroke-width:0.5;" x1=3D"462" x2=3D"626" y1=3D"85.9883" y2=3D"8=
5.9883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"462" x2=3D"=
626" y1=3D"93.9883" y2=3D"93.9883"/></g><!--MD5=3D[7ee281d2ed636e444125c5b6=
34f38e22]
class es.ua.dlsi.prog3.p6.network.Router--><g id=3D"elem_es.ua.dlsi.prog3.p=
6.network.Router"><rect codeLine=3D"20" fill=3D"#F1F1F1" height=3D"42.4883"=
 id=3D"es.ua.dlsi.prog3.p6.network.Router" rx=3D"2.5" ry=3D"2.5" style=3D"s=
troke:#181818;stroke-width:0.5;" width=3D"52" x=3D"22" y=3D"535.5"/><text f=
ill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D=
"spacing" textLength=3D"46" x=3D"25" y=3D"554.0352">Router</text><line styl=
e=3D"stroke:#181818;stroke-width:0.5;" x1=3D"23" x2=3D"73" y1=3D"561.9883" =
y2=3D"561.9883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"23"=
 x2=3D"73" y1=3D"569.9883" y2=3D"569.9883"/></g><!--MD5=3D[b8a2d469b4a75c3a=
517ce92319488f3a]
class es.ua.dlsi.prog3.p6.network.Device--><g id=3D"elem_es.ua.dlsi.prog3.p=
6.network.Device"><rect codeLine=3D"22" fill=3D"#F1F1F1" height=3D"188.5273=
" id=3D"es.ua.dlsi.prog3.p6.network.Device" rx=3D"2.5" ry=3D"2.5" style=3D"=
stroke:#181818;stroke-width:0.5;" width=3D"186" x=3D"38" y=3D"220"/><text f=
ill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-style=3D"i=
talic" lengthAdjust=3D"spacing" textLength=3D"59" x=3D"101.5" y=3D"236.6016=
">=C2=ABabstract=C2=BB</text><text fill=3D"#000000" font-family=3D"sans-ser=
if" font-size=3D"14" font-style=3D"italic" lengthAdjust=3D"spacing" textLen=
gth=3D"44" x=3D"109" y=3D"252.668">Device</text><line style=3D"stroke:#1818=
18;stroke-width:0.5;" x1=3D"39" x2=3D"223" y1=3D"260.6211" y2=3D"260.6211"/=
><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthA=
djust=3D"spacing" textLength=3D"95" x=3D"44" y=3D"278.1563">-name: String</=
text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" len=
gthAdjust=3D"spacing" textLength=3D"111" x=3D"44" y=3D"294.6445">-address: =
String</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"39" x2=
=3D"223" y1=3D"301.5977" y2=3D"301.5977"/><text fill=3D"#000000" font-famil=
y=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"13=
1" x=3D"44" y=3D"319.1328">+getName(): String</text><text fill=3D"#000000" =
font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLe=
ngth=3D"148" x=3D"44" y=3D"335.6211">+getAddress(): String</text><text fill=
=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"sp=
acing" textLength=3D"116" x=3D"44" y=3D"352.1094">+hashCode(): int</text><t=
ext fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdju=
st=3D"spacing" textLength=3D"174" x=3D"44" y=3D"368.5977">+equals(Object): =
boolean</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=
=3D"14" lengthAdjust=3D"spacing" textLength=3D"125" x=3D"44" y=3D"385.0859"=
>+toString(): String</text><text fill=3D"#000000" font-family=3D"sans-serif=
" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"169" x=3D"44" y=
=3D"401.5742">+compareTo(Device): int</text></g><!--MD5=3D[c9967abdf9951550=
d86b39f04aaa1200]
class es.ua.dlsi.prog3.p6.network.Network--><g id=3D"elem_es.ua.dlsi.prog3.=
p6.network.Network"><rect codeLine=3D"32" fill=3D"#F1F1F1" height=3D"141.41=
8" id=3D"es.ua.dlsi.prog3.p6.network.Network" rx=3D"2.5" ry=3D"2.5" style=
=3D"stroke:#181818;stroke-width:0.5;" width=3D"532" x=3D"220" y=3D"486"/><t=
ext fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdju=
st=3D"spacing" textLength=3D"57" x=3D"457.5" y=3D"504.5352">Network</text><=
line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"221" x2=3D"751" y1=3D=
"512.4883" y2=3D"512.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;=
" x1=3D"221" x2=3D"751" y1=3D"520.4883" y2=3D"520.4883"/><text fill=3D"#000=
000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" t=
extLength=3D"172" x=3D"226" y=3D"538.0234">+addDevice(Device): void</text><=
text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdj=
ust=3D"spacing" textLength=3D"164" x=3D"226" y=3D"554.5117">-getNode(Device=
): Node</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=
=3D"14" lengthAdjust=3D"spacing" textLength=3D"284" x=3D"226" y=3D"571">+ad=
dLatency(Device,Device,Double):  void</text><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
172" x=3D"226" y=3D"587.4883">+printNetwork(File): void</text><text fill=3D=
"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spaci=
ng" textLength=3D"329" x=3D"226" y=3D"603.9766">+printLatencyMap(List&lt;? =
extends Device&gt;): void</text><text fill=3D"#000000" font-family=3D"sans-=
serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"520" x=3D"22=
6" y=3D"620.4648">+computeLatencyMap(List&lt;? extends Device&gt; devices):=
 SortedSet&lt;Latency&gt;</text></g><!--MD5=3D[e45d4fd722a1b0c335539969a5e3=
e877]
class es.ua.dlsi.prog3.p6.network.Computer--><g id=3D"elem_es.ua.dlsi.prog3=
.p6.network.Computer"><rect codeLine=3D"41" fill=3D"#F1F1F1" height=3D"42.4=
883" id=3D"es.ua.dlsi.prog3.p6.network.Computer" rx=3D"2.5" ry=3D"2.5" styl=
e=3D"stroke:#181818;stroke-width:0.5;" width=3D"75" x=3D"109.5" y=3D"535.5"=
/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" length=
Adjust=3D"spacing" textLength=3D"69" x=3D"112.5" y=3D"554.0352">Computer</t=
ext><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"110.5" x2=3D"183=
.5" y1=3D"561.9883" y2=3D"561.9883"/><line style=3D"stroke:#181818;stroke-w=
idth:0.5;" x1=3D"110.5" x2=3D"183.5" y1=3D"569.9883" y2=3D"569.9883"/></g><=
!--MD5=3D[8ee46ca891b361f3994c53dc584eddea]
class es.ua.dlsi.prog3.p6.network.Network.Latency--><g id=3D"elem_es.ua.dls=
i.prog3.p6.network.Network.Latency"><rect codeLine=3D"44" fill=3D"#F1F1F1" =
height=3D"172.0391" id=3D"es.ua.dlsi.prog3.p6.network.Network.Latency" rx=
=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"188=
" x=3D"303" y=3D"228.5"/><text fill=3D"#000000" font-family=3D"sans-serif" =
font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=
=3D"42" x=3D"376" y=3D"245.1016">=C2=ABstatic=C2=BB</text><text fill=3D"#00=
0000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" =
textLength=3D"112" x=3D"341" y=3D"261.168">Network.Latency</text><line styl=
e=3D"stroke:#181818;stroke-width:0.5;" x1=3D"304" x2=3D"490" y1=3D"269.1211=
" y2=3D"269.1211"/><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" lengthAdjust=3D"spacing" textLength=3D"94" x=3D"309" y=3D"286.65=
63">-time: double</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=
=3D"304" x2=3D"490" y1=3D"293.6094" y2=3D"293.6094"/><text fill=3D"#000000"=
 font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textL=
ength=3D"142" x=3D"309" y=3D"311.1445">+getSource(): Device</text><text fil=
l=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"s=
pacing" textLength=3D"140" x=3D"309" y=3D"327.6328">+getTarget(): Device</t=
ext><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" leng=
thAdjust=3D"spacing" textLength=3D"133" x=3D"309" y=3D"344.1211">+getTime()=
: double</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=
=3D"14" lengthAdjust=3D"spacing" textLength=3D"174" x=3D"309" y=3D"360.6094=
">+equals(Object): boolean</text><text fill=3D"#000000" font-family=3D"sans=
-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"90" x=3D"30=
9" y=3D"377.0977">+hashCode()</text><text fill=3D"#000000" font-family=3D"s=
ans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"176" x=
=3D"309" y=3D"393.5859">+compareTo(Latency): int</text></g><!--MD5=3D[922e0=
3a971fb884915fa0140341f8244]
link es.ua.dlsi.prog3.p6.network.Device to es.ua.dlsi.prog3.p6.network.Netw=
ork--><g id=3D"link_es.ua.dlsi.prog3.p6.network.Device_es.ua.dlsi.prog3.p6.=
network.Network"><path codeLine=3D"53" d=3D"M235.31,386.02 C278.25,415.05 3=
73.1102,479.1768 373.1102,479.1768 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p=
6.network.Device-es.ua.dlsi.prog3.p6.network.Network" style=3D"stroke:#1818=
18;stroke-width:1.0;"/><polygon fill=3D"none" points=3D"383.05,485.9,380.32=
12,479.2252,373.1102,479.1768,375.8391,485.8517,383.05,485.9" style=3D"stro=
ke:#181818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"224.27,3=
78.56,229.4838,386.9156,228.4116,381.3613,233.9659,380.2891,224.27,378.56" =
style=3D"stroke:#181818;stroke-width:1.0;"/><line style=3D"stroke:#181818;s=
troke-width:1.0;" x1=3D"228.4116" x2=3D"235.04" y1=3D"381.3613" y2=3D"385.8=
4"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13" leng=
thAdjust=3D"spacing" textLength=3D"138" x=3D"330" y=3D"452.5684">{map&lt;De=
vice, Node&gt;}</text><text fill=3D"#000000" font-family=3D"sans-serif" fon=
t-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"232.0212" y=3D=
"380.6667">n</text></g><!--MD5=3D[2e64765500afef3ca8f231782ba49d5e]
reverse link es.ua.dlsi.prog3.p6.network.Device to es.ua.dlsi.prog3.p6.netw=
ork.Router--><g id=3D"link_es.ua.dlsi.prog3.p6.network.Device_es.ua.dlsi.pr=
og3.p6.network.Router"><path codeLine=3D"55" d=3D"M92,428.26 C77.88,469.11 =
63.36,511.09 55.04,535.15 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.network=
.Device-backto-es.ua.dlsi.prog3.p6.network.Router" style=3D"stroke:#181818;=
stroke-width:1.0;"/><polygon fill=3D"none" points=3D"85.4,425.94,98.55,409.=
32,98.63,430.51,85.4,425.94" style=3D"stroke:#181818;stroke-width:1.0;"/></=
g><!--MD5=3D[02bfcdf88e00342b1f597308d41f1f4d]
reverse link es.ua.dlsi.prog3.p6.network.Device to es.ua.dlsi.prog3.p6.netw=
ork.Computer--><g id=3D"link_es.ua.dlsi.prog3.p6.network.Device_es.ua.dlsi.=
prog3.p6.network.Computer"><path codeLine=3D"56" d=3D"M138.59,429.36 C141.2=
9,469.87 144.05,511.3 145.64,535.15 " fill=3D"none" id=3D"es.ua.dlsi.prog3.=
p6.network.Device-backto-es.ua.dlsi.prog3.p6.network.Computer" style=3D"str=
oke:#181818;stroke-width:1.0;"/><polygon fill=3D"none" points=3D"131.6,429.=
74,137.25,409.32,145.57,428.81,131.6,429.74" style=3D"stroke:#181818;stroke=
-width:1.0;"/></g><!--MD5=3D[4f5817d80198be1e234626e729bb76e9]
reverse link java.lang.FileNotFoundException to es.ua.dlsi.prog3.p6.network=
.Network--><g id=3D"link_java.lang.FileNotFoundException_es.ua.dlsi.prog3.p=
6.network.Network"><path codeLine=3D"58" d=3D"M541.71,106.94 C536.66,162.08=
 523.81,296.69 509,409 C505.69,434.14 501.52,461.62 497.64,485.93 " fill=3D=
"none" id=3D"java.lang.FileNotFoundException-backto-es.ua.dlsi.prog3.p6.net=
work.Network" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0=
,7.0;"/><polygon fill=3D"#181818" points=3D"542.18,101.85,537.3727,110.4459=
,541.7222,106.829,545.3391,111.1785,542.18,101.85" style=3D"stroke:#181818;=
stroke-width:1.0;"/></g><!--MD5=3D[88e837ec13038639fba2e75153c7ef90]
link es.ua.dlsi.prog3.p6.network.Network to es.ua.dlsi.prog3.p6.graph.Graph=
--><g id=3D"link_es.ua.dlsi.prog3.p6.network.Network_es.ua.dlsi.prog3.p6.gr=
aph.Graph"><path codeLine=3D"60" d=3D"M752.19,556.5 C832.42,556.5 917.03,55=
6.5 984.65,556.5 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.network.Network-=
to-es.ua.dlsi.prog3.p6.graph.Graph" style=3D"stroke:#181818;stroke-width:1.=
0;"/><polygon fill=3D"#181818" points=3D"989.9,556.5,980.9,552.5,984.9,556.=
5,980.9,560.5,989.9,556.5" style=3D"stroke:#181818;stroke-width:1.0;"/><tex=
t fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=
=3D"spacing" textLength=3D"201" x=3D"770.5" y=3D"550.0684">=C2=ABbind=C2=BB=
 Device, Network.Latency</text><text fill=3D"#000000" font-family=3D"sans-s=
erif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"973.8=
502" y=3D"553.6087">1</text></g><!--MD5=3D[d7b4a5843945a42db053c63358b97c7c=
]
reverse link java.lang.Comparable to es.ua.dlsi.prog3.p6.network.Device--><=
g id=3D"link_java.lang.Comparable_es.ua.dlsi.prog3.p6.network.Device"><path=
 codeLine=3D"62" d=3D"M284.5,133.3 C277.39,139.4 270.43,145.69 264,152 C242=
.87,172.73 221.71,196.63 202.69,219.58 " fill=3D"none" id=3D"java.lang.Comp=
arable-backto-es.ua.dlsi.prog3.p6.network.Device" style=3D"stroke:#181818;s=
troke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"none" points=
=3D"280.27,127.72,300.14,120.36,289.19,138.51,280.27,127.72" style=3D"strok=
e:#181818;stroke-width:1.0;"/><text fill=3D"#000000" font-family=3D"sans-se=
rif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"88" x=3D"265" =
y=3D"165.5684">=C2=ABbind=C2=BB Device</text></g><!--MD5=3D[ddae85c139706f9=
5acf1d65651dfcd99]
reverse link java.lang.Comparable to es.ua.dlsi.prog3.p6.network.Network.La=
tency--><g id=3D"link_java.lang.Comparable_es.ua.dlsi.prog3.p6.network.Netw=
ork.Latency"><path codeLine=3D"63" d=3D"M360.38,140.19 C361.78,149.84 363.3=
4,159.71 365,169 C368.44,188.22 372.66,208.77 376.89,228.15 " fill=3D"none"=
 id=3D"java.lang.Comparable-backto-es.ua.dlsi.prog3.p6.network.Network.Late=
ncy" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><=
polygon fill=3D"none" points=3D"353.44,141.14,357.64,120.37,367.31,139.23,3=
53.44,141.14" style=3D"stroke:#181818;stroke-width:1.0;"/><text fill=3D"#00=
0000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" =
textLength=3D"151" x=3D"366" y=3D"165.5684">=C2=ABbind=C2=BB Network.Latenc=
y</text></g><!--MD5=3D[7661503055061df869ac98f4d62ee628]
reverse link es.ua.dlsi.prog3.p6.network.Device to es.ua.dlsi.prog3.p6.netw=
ork.Network.Latency--><g id=3D"link_es.ua.dlsi.prog3.p6.network.Device_es.u=
a.dlsi.prog3.p6.network.Network.Latency"><path codeLine=3D"65" d=3D"M229.14=
,314.5 C253.16,314.5 278.82,314.5 302.67,314.5 " fill=3D"none" id=3D"es.ua.=
dlsi.prog3.p6.network.Device-backto-es.ua.dlsi.prog3.p6.network.Network.Lat=
ency" style=3D"stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"#181818"=
 points=3D"224.03,314.5,233.03,318.5,229.03,314.5,233.03,310.5,224.03,314.5=
" style=3D"stroke:#181818;stroke-width:1.0;"/><text fill=3D"#000000" font-f=
amily=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=
=3D"42" x=3D"242.5" y=3D"308.0684">source</text><text fill=3D"#000000" font=
-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=
=3D"8" x=3D"232.0653" y=3D"311.4797">1</text></g><!--MD5=3D[7661503055061df=
869ac98f4d62ee628]
reverse link es.ua.dlsi.prog3.p6.network.Device to es.ua.dlsi.prog3.p6.netw=
ork.Network.Latency--><g id=3D"link_es.ua.dlsi.prog3.p6.network.Device_es.u=
a.dlsi.prog3.p6.network.Network.Latency"><path codeLine=3D"66" d=3D"M229.24=
,332.95 C234.22,333.55 239.16,334.08 244,334.5 C263.08,336.18 283.44,335.35=
 302.87,333.3 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.network.Device-back=
to-es.ua.dlsi.prog3.p6.network.Network.Latency-1" style=3D"stroke:#181818;s=
troke-width:1.0;"/><polygon fill=3D"#181818" points=3D"224.25,332.32,232.67=
53,337.4204,229.2103,332.949,233.6817,329.4839,224.25,332.32" style=3D"stro=
ke:#181818;stroke-width:1.0;"/><text fill=3D"#000000" font-family=3D"sans-s=
erif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"37" x=3D"245"=
 y=3D"331.0684">target</text><text fill=3D"#000000" font-family=3D"sans-ser=
if" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"231.999=
6" y=3D"330.7419">1</text></g><!--MD5=3D[65a586dcceb235f7f2e55b266d2d1ac1]
@startuml "p6_network"
skinparam classAttributeIconSize 0
hide circle
'skinparam genericDisplay old

!function $paramType($T)=20
!$nl =3D "\n"
!$space =3D "  "
!return $nl + $space + $T + $space + $nl
!endfunction=20

class es.ua.dlsi.prog3.p6.graph.Graph<$paramType(NodeLabelType+", "+EdgeLab=
elType)> {

}


class java.lang.Comparable<$paramType(T)> <<interface>> {
    +compareTo(T): int
}

class es.ua.dlsi.prog3.p6.network.Router {
}
abstract class es.ua.dlsi.prog3.p6.network.Device <<abstract>> {
- name: String
- address: String
+ getName(): String
+ getAddress(): String
+ hashCode(): int
+ equals(Object): boolean
+ toString(): String
+ compareTo(Device): int
}
class es.ua.dlsi.prog3.p6.network.Network {
+ addDevice(Device): void
- getNode(Device): Node
+ addLatency(Device,Device,Double):  void
+ printNetwork(File): void
+ printLatencyMap(List<? extends Device>): void
+ computeLatencyMap(List<? extends Device> devices): SortedSet<Latency>
}

class es.ua.dlsi.prog3.p6.network.Computer {
}

class es.ua.dlsi.prog3.p6.network.Network.Latency <<static>> {
    -time: double
    +getSource(): Device
    +getTarget(): Device
    +getTime(): double
    +equals(Object): boolean
    +hashCode()
    +compareTo(Latency): int
}
es.ua.dlsi.prog3.p6.network.Device "n" <- -o es.ua.dlsi.prog3.p6.network.Ne=
twork : {map<Device, Node>}

es.ua.dlsi.prog3.p6.network.Device <|- - es.ua.dlsi.prog3.p6.network.Router
es.ua.dlsi.prog3.p6.network.Device <|- - es.ua.dlsi.prog3.p6.network.Comput=
er

java.lang.FileNotFoundException <.. es.ua.dlsi.prog3.p6.network.Network

es.ua.dlsi.prog3.p6.network.Network -> "1" es.ua.dlsi.prog3.p6.graph.Graph =
: <<bind>> Device, Network.Latency

java.lang.Comparable <|.. es.ua.dlsi.prog3.p6.network.Device: <<bind>> Devi=
ce
java.lang.Comparable <|.. es.ua.dlsi.prog3.p6.network.Network.Latency: <<bi=
nd>> Network.Latency

es.ua.dlsi.prog3.p6.network.Device "1" <- es.ua.dlsi.prog3.p6.network.Netwo=
rk.Latency: source
es.ua.dlsi.prog3.p6.network.Device "1" <- es.ua.dlsi.prog3.p6.network.Netwo=
rk.Latency: target

@enduml

@startuml "p6_network"
skinparam classAttributeIconSize 0
hide circle


class es.ua.dlsi.prog3.p6.graph.Graph<\n  NodeLabelType, EdgeLabelType  \n>=
 {

}


class java.lang.Comparable<\n  T  \n> <<interface>> {
    +compareTo(T): int
}

class es.ua.dlsi.prog3.p6.network.Router {
}
abstract class es.ua.dlsi.prog3.p6.network.Device <<abstract>> {
- name: String
- address: String
+ getName(): String
+ getAddress(): String
+ hashCode(): int
+ equals(Object): boolean
+ toString(): String
+ compareTo(Device): int
}
class es.ua.dlsi.prog3.p6.network.Network {
+ addDevice(Device): void
- getNode(Device): Node
+ addLatency(Device,Device,Double):  void
+ printNetwork(File): void
+ printLatencyMap(List<? extends Device>): void
+ computeLatencyMap(List<? extends Device> devices): SortedSet<Latency>
}

class es.ua.dlsi.prog3.p6.network.Computer {
}

class es.ua.dlsi.prog3.p6.network.Network.Latency <<static>> {
    -time: double
    +getSource(): Device
    +getTarget(): Device
    +getTime(): double
    +equals(Object): boolean
    +hashCode()
    +compareTo(Latency): int
}
es.ua.dlsi.prog3.p6.network.Device "n" <- -o es.ua.dlsi.prog3.p6.network.Ne=
twork : {map<Device, Node>}

es.ua.dlsi.prog3.p6.network.Device <|- - es.ua.dlsi.prog3.p6.network.Router
es.ua.dlsi.prog3.p6.network.Device <|- - es.ua.dlsi.prog3.p6.network.Comput=
er

java.lang.FileNotFoundException <.. es.ua.dlsi.prog3.p6.network.Network

es.ua.dlsi.prog3.p6.network.Network -> "1" es.ua.dlsi.prog3.p6.graph.Graph =
: <<bind>> Device, Network.Latency

java.lang.Comparable <|.. es.ua.dlsi.prog3.p6.network.Device: <<bind>> Devi=
ce
java.lang.Comparable <|.. es.ua.dlsi.prog3.p6.network.Network.Latency: <<bi=
nd>> Network.Latency

es.ua.dlsi.prog3.p6.network.Device "1" <- es.ua.dlsi.prog3.p6.network.Netwo=
rk.Latency: source
es.ua.dlsi.prog3.p6.network.Device "1" <- es.ua.dlsi.prog3.p6.network.Netwo=
rk.Latency: target

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: es
Country: ES
--></g></svg>
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/img/p6_icost.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?><svg xmlns=3D"h=
ttp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" con=
tentStyleType=3D"text/css" height=3D"381px" preserveAspectRatio=3D"none" st=
yle=3D"width:664px;height:381px;background:#FFFFFF;" version=3D"1.1" viewBo=
x=3D"0 0 664 381" width=3D"664px" zoomAndPan=3D"magnify"><defs/><g><!--MD5=
=3D[212ae7d3f65ff18c211c6142b573cbbf]
cluster es.ua.dlsi.prog3.p6.algorithms--><g id=3D"cluster_es.ua.dlsi.prog3.=
p6.algorithms"><path d=3D"M8.5,6 L223.5,6 A3.75,3.75 0 0 1 226,8.5 L233,28.=
4883 L623.5,28.4883 A2.5,2.5 0 0 1 626,30.9883 L626,371.5 A2.5,2.5 0 0 1 62=
3.5,374 L8.5,374 A2.5,2.5 0 0 1 6,371.5 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill=
=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line style=3D"stroke=
:#000000;stroke-width:1.5;" x1=3D"6" x2=3D"233" y1=3D"28.4883" y2=3D"28.488=
3"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" font=
-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"214" x=3D"10" y=3D"=
21.5352">es.ua.dlsi.prog3.p6.algorithms</text></g><!--MD5=3D[4c9a3662d883d9=
f8d4a07ee53fc59e31]
class ICostOperators--><g id=3D"elem_ICostOperators"><rect codeLine=3D"12" =
fill=3D"#F1F1F1" height=3D"111.8633" id=3D"ICostOperators" rx=3D"2.5" ry=3D=
"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"157" x=3D"144.5" =
y=3D"246"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"1=
2" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"62" x=3D"17=
8" y=3D"265.4902">=C2=ABinterface=C2=BB</text><text fill=3D"#000000" font-f=
amily=3D"sans-serif" font-size=3D"14" font-style=3D"italic" lengthAdjust=3D=
"spacing" textLength=3D"104" x=3D"157" y=3D"281.5566">ICostOperators</text>=
<rect fill=3D"#FFFFFF" height=3D"44.3984" style=3D"stroke:#181818;stroke-wi=
dth:1.0;stroke-dasharray:2.0,2.0;" width=3D"26" x=3D"278.5" y=3D"243"/><tex=
t fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-style=
=3D"italic" lengthAdjust=3D"spacing" textLength=3D"4" x=3D"289.5" y=3D"255.=
6016">=C2=A0</text><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=3D"8" =
x=3D"287.5" y=3D"269.7344">T</text><text fill=3D"#000000" font-family=3D"sa=
ns-serif" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" t=
extLength=3D"4" x=3D"289.5" y=3D"283.8672">=C2=A0</text><line style=3D"stro=
ke:#181818;stroke-width:0.5;" x1=3D"145.5" x2=3D"300.5" y1=3D"292.3984" y2=
=3D"292.3984"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"145.5=
" x2=3D"300.5" y1=3D"300.3984" y2=3D"300.3984"/><text fill=3D"#000000" font=
-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=
=3D"90" x=3D"150.5" y=3D"317.9336">+add(T, T): T</text><text fill=3D"#00000=
0" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" tex=
tLength=3D"69" x=3D"150.5" y=3D"334.4219">+zero(): T</text><text fill=3D"#0=
00000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing"=
 textLength=3D"145" x=3D"150.5" y=3D"350.9102">+maximumValue(): T</text></g=
><!--MD5=3D[c8860a7c916dc983410fb07a2b60ecab]
class DijkstraShortestPath--><g id=3D"elem_DijkstraShortestPath"><rect code=
Line=3D"18" fill=3D"#F1F1F1" height=3D"128.3516" id=3D"DijkstraShortestPath=
" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D=
"587" x=3D"22.5" y=3D"41"/><text fill=3D"#000000" font-family=3D"sans-serif=
" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"139" x=3D"25.5" y=
=3D"69.4902">DijkstraShortestPath</text><rect fill=3D"#FFFFFF" height=3D"44=
.3984" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" =
width=3D"440" x=3D"172.5" y=3D"38"/><text fill=3D"#000000" font-family=3D"s=
ans-serif" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" =
textLength=3D"4" x=3D"390.5" y=3D"50.6016">=C2=A0</text><text fill=3D"#0000=
00" font-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengt=
hAdjust=3D"spacing" textLength=3D"422" x=3D"181.5" y=3D"64.7344">NodeLabelT=
ype, EdgeLabelType extends Comparable&lt;EdgeLabelType&gt;</text><text fill=
=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-style=3D"ital=
ic" lengthAdjust=3D"spacing" textLength=3D"4" x=3D"390.5" y=3D"78.8672">=C2=
=A0</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"23.5" x2=
=3D"608.5" y1=3D"87.3984" y2=3D"87.3984"/><line style=3D"stroke:#181818;str=
oke-width:0.5;" x1=3D"23.5" x2=3D"608.5" y1=3D"95.3984" y2=3D"95.3984"/><te=
xt fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjus=
t=3D"spacing" textLength=3D"251" x=3D"28.5" y=3D"112.9336">+DijkstraShortes=
tPath(graph: Graph)</text><text fill=3D"#000000" font-family=3D"sans-serif"=
 font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"231" x=3D"28.5" y=
=3D"129.4219">+compute(fromNode: Node): void</text><text fill=3D"#000000" f=
ont-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLen=
gth=3D"332" x=3D"28.5" y=3D"145.9102">+getComputedDistances(): Map&lt;Node,=
 Integer&gt;</text><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" lengthAdjust=3D"spacing" textLength=3D"278" x=3D"28.5" y=3D"162.=
3984">-processNeighbours(source: Node): void</text></g><!--MD5=3D[ea16a8f61=
f4e20a3a12808aa4bb145f0]
link DijkstraShortestPath to ICostOperators--><g id=3D"link_DijkstraShortes=
tPath_ICostOperators"><path codeLine=3D"25" d=3D"M284.46,169.17 C279.58,179=
.13 274.62,189.33 270,199 C263.51,212.59 256.65,227.27 250.25,241.15 " fill=
=3D"none" id=3D"DijkstraShortestPath-to-ICostOperators" style=3D"stroke:#18=
1818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=3D"248.09,245.82,=
255.505,239.3379,250.1935,241.284,248.2474,235.9724,248.09,245.82" style=3D=
"stroke:#181818;stroke-width:1.0;"/><text fill=3D"#000000" font-family=3D"s=
ans-serif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"385" x=
=3D"271" y=3D"212.5684">=C2=ABbind=C2=BB EdgeLabelType extends Comparable&l=
t;EdgeLabelType&gt;</text><text fill=3D"#000000" font-family=3D"sans-serif"=
 font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"97" x=3D"178.2054"=
 y=3D"190.0228">-costOperators</text><text fill=3D"#000000" font-family=3D"=
sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D=
"242.7922" y=3D"235.258">1</text></g><!--MD5=3D[d7ecc4387ec73edc035830a87b3=
5a1e1]
@startuml p6_icost
skinparam classAttributeIconSize 0
hide circle
'skinparam genericDisplay old

!function $paramType($T)=20
!$nl =3D "\n"
!$space =3D "  "
!return $nl + $space + $T + $space + $nl
!endfunction=20
=20
package es.ua.dlsi.prog3.p6.algorithms {
    interface ICostOperators<$paramType(T)> <<interface>> {
        +add(T, T): T
        +zero(): T
        +maximumValue(): T
    }

   class DijkstraShortestPath<$paramType("NodeLabelType, EdgeLabelType exte=
nds Comparable<EdgeLabelType>")> {
        +DijkstraShortestPath(graph: Graph)
        +compute(fromNode: Node): void
        +getComputedDistances(): Map<Node, Integer>
        -processNeighbours(source: Node): void
    }
   =20
    DijkstraShortestPath "-costOperators" - -> "1" ICostOperators: <<bind>>=
 EdgeLabelType extends Comparable<EdgeLabelType>
}



@enduml

@startuml p6_icost
skinparam classAttributeIconSize 0
hide circle

=20
package es.ua.dlsi.prog3.p6.algorithms {
    interface ICostOperators<\n  T  \n> <<interface>> {
        +add(T, T): T
        +zero(): T
        +maximumValue(): T
    }

   class DijkstraShortestPath<\n  NodeLabelType, EdgeLabelType extends Comp=
arable<EdgeLabelType>  \n> {
        +DijkstraShortestPath(graph: Graph)
        +compute(fromNode: Node): void
        +getComputedDistances(): Map<Node, Integer>
        -processNeighbours(source: Node): void
    }
   =20
    DijkstraShortestPath "-costOperators" - -> "1" ICostOperators: <<bind>>=
 EdgeLabelType extends Comparable<EdgeLabelType>
}



@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: es
Country: ES
--></g></svg>
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.dlsi.ua.es/asignaturas/prog3/desde-2022-2023/web/p6/img/p6_reflection.svg

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"no"?><svg xmlns=3D"h=
ttp://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" con=
tentStyleType=3D"text/css" height=3D"863px" preserveAspectRatio=3D"none" st=
yle=3D"width:2102px;height:863px;background:#FFFFFF;" version=3D"1.1" viewB=
ox=3D"0 0 2102 863" width=3D"2102px" zoomAndPan=3D"magnify"><defs/><g><!--M=
D5=3D[468c628577d61d66a0bda2743704dfd4]
cluster es.ua.dlsi.prog3.p6.graph--><g id=3D"cluster_es.ua.dlsi.prog3.p6.gr=
aph"><path d=3D"M1612.5,28 L1789.5,28 A3.75,3.75 0 0 1 1792,30.5 L1799,50.4=
883 L2084.5,50.4883 A2.5,2.5 0 0 1 2087,52.9883 L2087,138.5 A2.5,2.5 0 0 1 =
2084.5,141 L1612.5,141 A2.5,2.5 0 0 1 1610,138.5 L1610,30.5 A2.5,2.5 0 0 1 =
1612.5,28 " fill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line=
 style=3D"stroke:#000000;stroke-width:1.5;" x1=3D"1610" x2=3D"1799" y1=3D"5=
0.4883" y2=3D"50.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" f=
ont-size=3D"14" font-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D=
"176" x=3D"1614" y=3D"43.5352">es.ua.dlsi.prog3.p6.graph</text></g><!--MD5=
=3D[2fc1401dfb70301241c0530fe584cf74]
cluster es.ua.dlsi.prog3.p6.reflection--><g id=3D"cluster_es.ua.dlsi.prog3.=
p6.reflection"><path d=3D"M583.5,6 L788.5,6 A3.75,3.75 0 0 1 791,8.5 L798,2=
8.4883 L1583.5,28.4883 A2.5,2.5 0 0 1 1586,30.9883 L1586,661.5 A2.5,2.5 0 0=
 1 1583.5,664 L583.5,664 A2.5,2.5 0 0 1 581,661.5 L581,8.5 A2.5,2.5 0 0 1 5=
83.5,6 " fill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/><line st=
yle=3D"stroke:#000000;stroke-width:1.5;" x1=3D"581" x2=3D"798" y1=3D"28.488=
3" y2=3D"28.4883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" font-weight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"204"=
 x=3D"585" y=3D"21.5352">es.ua.dlsi.prog3.p6.reflection</text></g><!--MD5=
=3D[aa8f7b917213fcc1c2766e2d59b49067]
cluster java.lang--><g id=3D"cluster_java.lang"><path d=3D"M1007.5,730 L107=
1.5,730 A3.75,3.75 0 0 1 1074,732.5 L1081,752.4883 L1713.5,752.4883 A2.5,2.=
5 0 0 1 1716,754.9883 L1716,820.5 A2.5,2.5 0 0 1 1713.5,823 L1007.5,823 A2.=
5,2.5 0 0 1 1005,820.5 L1005,732.5 A2.5,2.5 0 0 1 1007.5,730 " fill=3D"none=
" style=3D"stroke:#000000;stroke-width:1.5;"/><line style=3D"stroke:#000000=
;stroke-width:1.5;" x1=3D"1005" x2=3D"1081" y1=3D"752.4883" y2=3D"752.4883"=
/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" font-w=
eight=3D"bold" lengthAdjust=3D"spacing" textLength=3D"63" x=3D"1009" y=3D"7=
45.5352">java.lang</text></g><!--MD5=3D[7ae92e03fca65b42148e1a3bb07413fa]
cluster es.ua.dlsi.prog3.p6.reflection.impl--><g id=3D"cluster_es.ua.dlsi.p=
rog3.p6.reflection.impl"><path d=3D"M8.5,697 L249.5,697 A3.75,3.75 0 0 1 25=
2,699.5 L259,719.4883 L978.5,719.4883 A2.5,2.5 0 0 1 981,721.9883 L981,853.=
5 A2.5,2.5 0 0 1 978.5,856 L8.5,856 A2.5,2.5 0 0 1 6,853.5 L6,699.5 A2.5,2.=
5 0 0 1 8.5,697 " fill=3D"none" style=3D"stroke:#000000;stroke-width:1.5;"/=
><line style=3D"stroke:#000000;stroke-width:1.5;" x1=3D"6" x2=3D"259" y1=3D=
"719.4883" y2=3D"719.4883"/><text fill=3D"#000000" font-family=3D"sans-seri=
f" font-size=3D"14" font-weight=3D"bold" lengthAdjust=3D"spacing" textLengt=
h=3D"240" x=3D"10" y=3D"712.5352">es.ua.dlsi.prog3.p6.reflection.impl</text=
></g><!--MD5=3D[762522d4a69e9939827a70a8bbd0c945]
class es.ua.dlsi.prog3.p6.graph.Graph--><g id=3D"elem_es.ua.dlsi.prog3.p6.g=
raph.Graph"><rect codeLine=3D"11" fill=3D"#F1F1F1" height=3D"62.3984" id=3D=
"es.ua.dlsi.prog3.p6.graph.Graph" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#18=
1818;stroke-width:0.5;" width=3D"256" x=3D"1626" y=3D"63"/><text fill=3D"#0=
00000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing"=
 textLength=3D"42" x=3D"1629" y=3D"91.4902">Graph</text><rect fill=3D"#FFFF=
FF" height=3D"44.3984" style=3D"stroke:#181818;stroke-width:1.0;stroke-dash=
array:2.0,2.0;" width=3D"206" x=3D"1679" y=3D"60"/><text fill=3D"#000000" f=
ont-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengthAdju=
st=3D"spacing" textLength=3D"4" x=3D"1780" y=3D"72.6016">=C2=A0</text><text=
 fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-style=3D=
"italic" lengthAdjust=3D"spacing" textLength=3D"188" x=3D"1688" y=3D"86.734=
4">NodeLabelType, EdgeLabelType</text><text fill=3D"#000000" font-family=3D=
"sans-serif" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing=
" textLength=3D"4" x=3D"1780" y=3D"100.8672">=C2=A0</text><line style=3D"st=
roke:#181818;stroke-width:0.5;" x1=3D"1627" x2=3D"1881" y1=3D"109.3984" y2=
=3D"109.3984"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1627"=
 x2=3D"1881" y1=3D"117.3984" y2=3D"117.3984"/></g><!--MD5=3D[e71bd2e5f0a390=
004a9452bcc1cd9169]
class es.ua.dlsi.prog3.p6.graph.Node--><g id=3D"elem_es.ua.dlsi.prog3.p6.gr=
aph.Node"><rect codeLine=3D"15" fill=3D"#F1F1F1" height=3D"62.3984" id=3D"e=
s.ua.dlsi.prog3.p6.graph.Node" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#18181=
8;stroke-width:0.5;" width=3D"153" x=3D"1917.5" y=3D"63"/><text fill=3D"#00=
0000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" =
textLength=3D"36" x=3D"1920.5" y=3D"91.4902">Node</text><rect fill=3D"#FFFF=
FF" height=3D"44.3984" style=3D"stroke:#181818;stroke-width:1.0;stroke-dash=
array:2.0,2.0;" width=3D"109" x=3D"1964.5" y=3D"60"/><text fill=3D"#000000"=
 font-family=3D"sans-serif" font-size=3D"12" font-style=3D"italic" lengthAd=
just=3D"spacing" textLength=3D"4" x=3D"2017" y=3D"72.6016">=C2=A0</text><te=
xt fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"12" font-style=
=3D"italic" lengthAdjust=3D"spacing" textLength=3D"91" x=3D"1973.5" y=3D"86=
.7344">NodeLabelType</text><text fill=3D"#000000" font-family=3D"sans-serif=
" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLengt=
h=3D"4" x=3D"2017" y=3D"100.8672">=C2=A0</text><line style=3D"stroke:#18181=
8;stroke-width:0.5;" x1=3D"1918.5" x2=3D"2069.5" y1=3D"109.3984" y2=3D"109.=
3984"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1918.5" x2=3D=
"2069.5" y1=3D"117.3984" y2=3D"117.3984"/></g><!--MD5=3D[da00ee675d2517893c=
9aed4ab53b1423]
class es.ua.dlsi.prog3.p6.reflection.ReflectionException--><g id=3D"elem_es=
.ua.dlsi.prog3.p6.reflection.ReflectionException"><rect codeLine=3D"19" fil=
l=3D"#F1F1F1" height=3D"42.4883" id=3D"es.ua.dlsi.prog3.p6.reflection.Refle=
ctionException" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:=
0.5;" width=3D"142" x=3D"1428" y=3D"565.5"/><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
136" x=3D"1431" y=3D"584.0352">ReflectionException</text><line style=3D"str=
oke:#181818;stroke-width:0.5;" x1=3D"1429" x2=3D"1569" y1=3D"591.9883" y2=
=3D"591.9883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1429"=
 x2=3D"1569" y1=3D"599.9883" y2=3D"599.9883"/></g><!--MD5=3D[db2c8836040fc9=
f37230a295e259acfc]
class es.ua.dlsi.prog3.p6.reflection.ERelationship--><g id=3D"elem_es.ua.dl=
si.prog3.p6.reflection.ERelationship"><rect codeLine=3D"21" fill=3D"#F1F1F1=
" height=3D"106.0859" id=3D"es.ua.dlsi.prog3.p6.reflection.ERelationship" r=
x=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"17=
8" x=3D"1176" y=3D"41"/><text fill=3D"#000000" font-family=3D"sans-serif" f=
ont-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLength=
=3D"44" x=3D"1243" y=3D"57.6016">=C2=ABenum=C2=BB</text><text fill=3D"#0000=
00" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" te=
xtLength=3D"93" x=3D"1218.5" y=3D"73.668">ERelationship</text><line style=
=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1177" x2=3D"1353" y1=3D"81.6211=
" y2=3D"81.6211"/><text fill=3D"#000000" font-family=3D"sans-serif" font-si=
ze=3D"14" lengthAdjust=3D"spacing" textLength=3D"88" x=3D"1182" y=3D"99.156=
3">+inheritance</text><text fill=3D"#000000" font-family=3D"sans-serif" fon=
t-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"88" x=3D"1182" y=3D"11=
5.6445">+association</text><text fill=3D"#000000" font-family=3D"sans-serif=
" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"166" x=3D"1182" y=
=3D"132.1328">+parameterDependency</text><line style=3D"stroke:#181818;stro=
ke-width:0.5;" x1=3D"1177" x2=3D"1353" y1=3D"139.0859" y2=3D"139.0859"/></g=
><!--MD5=3D[56ced39ce4653ceffdda64e2eb576735]
class es.ua.dlsi.prog3.p6.reflection.Code2Graph--><g id=3D"elem_es.ua.dlsi.=
prog3.p6.reflection.Code2Graph"><rect codeLine=3D"31" fill=3D"#F1F1F1" heig=
ht=3D"240.3477" id=3D"es.ua.dlsi.prog3.p6.reflection.Code2Graph" rx=3D"2.5"=
 ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"610" x=3D"9=
60" y=3D"224"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=
=3D"14" lengthAdjust=3D"spacing" textLength=3D"87" x=3D"1221.5" y=3D"242.53=
52">Code2Graph</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D=
"961" x2=3D"1569" y1=3D"250.4883" y2=3D"250.4883"/><line style=3D"stroke:#1=
81818;stroke-width:0.5;" x1=3D"961" x2=3D"1569" y1=3D"258.4883" y2=3D"258.4=
883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" le=
ngthAdjust=3D"spacing" textLength=3D"207" x=3D"966" y=3D"276.0234">+Code2Gr=
aph(Class&lt;?&gt; start)</text><text fill=3D"#000000" font-family=3D"sans-=
serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"374" x=3D"96=
6" y=3D"292.5117">+Code2Graph(String packageName, String className)</text><=
text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdj=
ust=3D"spacing" textLength=3D"338" x=3D"966" y=3D"309">+createGraph(): Grap=
h&lt;Class&lt;?&gt;,ERelationship&gt;</text><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
598" x=3D"966" y=3D"325.4883">+createGraph(reflectionClassesPackageName: St=
ring): Graph&lt;Class&lt;?&gt;,ERelationship&gt;</text><text fill=3D"#00000=
0" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" tex=
tLength=3D"298" x=3D"966" y=3D"341.9766">-browseClass(Class&lt;?&gt;): Node=
&lt;Class&lt;?&gt;&gt;</text><text fill=3D"#000000" font-family=3D"sans-ser=
if" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"455" x=3D"966" =
y=3D"358.4648">-addRelatedClass(Node&lt;Class&lt;?&gt;&gt;,Class&lt;?&gt;,E=
Relationship): void</text><text fill=3D"#000000" font-family=3D"sans-serif"=
 font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"261" x=3D"966" y=
=3D"374.9531">-findParentClass(Class&lt;?&gt;): Class&lt;?&gt;</text><text =
fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=
=3D"spacing" textLength=3D"299" x=3D"966" y=3D"391.4414">-isSamePackageAsSt=
art(Class&lt;?&gt;): boolean</text><text fill=3D"#000000" font-family=3D"sa=
ns-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"392" x=3D=
"966" y=3D"407.9297">-filterClassesInPackage(Set&lt;Class&lt;?&gt;&gt;): Se=
t&lt;Class&lt;?&gt;&gt;</text><text fill=3D"#000000" font-family=3D"sans-se=
rif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"349" x=3D"966"=
 y=3D"424.418">-findAssociatedClasses(Class&lt;?&gt;): Set&lt;Class&lt;?&gt=
;&gt;</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"=
14" lengthAdjust=3D"spacing" textLength=3D"350" x=3D"966" y=3D"440.9063">-f=
indDependantClasses(Class&lt;?&gt;): Set&lt;Class&lt;?&gt;&gt;</text><text =
fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=
=3D"spacing" text-decoration=3D"underline" textLength=3D"248" x=3D"966" y=
=3D"457.3945">+&lt;&lt;final&gt; main(args: String[]): void</text></g><!--M=
D5=3D[346ba25fda318d5511faf7a1919db073]
class es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer--><g id=3D"elem_es.ua.d=
lsi.prog3.p6.reflection.IClassAnalyzer"><rect codeLine=3D"52" fill=3D"#F1F1=
F1" height=3D"122.5742" id=3D"es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer=
" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D=
"365" x=3D"597.5" y=3D"525"/><text fill=3D"#000000" font-family=3D"sans-ser=
if" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing" textLen=
gth=3D"62" x=3D"749" y=3D"541.6016">=C2=ABinterface=C2=BB</text><text fill=
=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" font-style=3D"ital=
ic" lengthAdjust=3D"spacing" textLength=3D"100" x=3D"730" y=3D"557.668">ICl=
assAnalyzer</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"59=
8.5" x2=3D"961.5" y1=3D"565.6211" y2=3D"565.6211"/><line style=3D"stroke:#1=
81818;stroke-width:0.5;" x1=3D"598.5" x2=3D"961.5" y1=3D"573.6211" y2=3D"57=
3.6211"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14"=
 lengthAdjust=3D"spacing" textLength=3D"264" x=3D"603.5" y=3D"591.1563">+fi=
ndParentClass(Class&lt;?&gt;): Class&lt;?&gt;</text><text fill=3D"#000000" =
font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLe=
ngth=3D"342" x=3D"603.5" y=3D"607.6445">+haveSamePackage(Class&lt;?&gt;,Cla=
ss&lt;?&gt;): boolean</text><text fill=3D"#000000" font-family=3D"sans-seri=
f" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"352" x=3D"603.5"=
 y=3D"624.1328">+findAssociatedClasses(Class&lt;?&gt;): Set&lt;Class&lt;?&g=
t;&gt;</text><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D=
"14" lengthAdjust=3D"spacing" textLength=3D"353" x=3D"603.5" y=3D"640.6211"=
>+findDependantClasses(Class&lt;?&gt;): Set&lt;Class&lt;?&gt;&gt;</text></g=
><!--MD5=3D[6fd71f8ddbb3e8efb31f5b579a216e97]
class es.ua.dlsi.prog3.p6.reflection.IReflectionUtils--><g id=3D"elem_es.ua=
.dlsi.prog3.p6.reflection.IReflectionUtils"><rect codeLine=3D"46" fill=3D"#=
F1F1F1" height=3D"106.0859" id=3D"es.ua.dlsi.prog3.p6.reflection.IReflectio=
nUtils" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" wi=
dth=3D"395" x=3D"997.5" y=3D"533.5"/><text fill=3D"#000000" font-family=3D"=
sans-serif" font-size=3D"12" font-style=3D"italic" lengthAdjust=3D"spacing"=
 textLength=3D"62" x=3D"1164" y=3D"550.1016">=C2=ABinterface=C2=BB</text><t=
ext fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" font-style=
=3D"italic" lengthAdjust=3D"spacing" textLength=3D"102" x=3D"1144" y=3D"566=
.168">IReflectionUtils</text><line style=3D"stroke:#181818;stroke-width:0.5=
;" x1=3D"998.5" x2=3D"1391.5" y1=3D"574.1211" y2=3D"574.1211"/><line style=
=3D"stroke:#181818;stroke-width:0.5;" x1=3D"998.5" x2=3D"1391.5" y1=3D"582.=
1211" y2=3D"582.1211"/><text fill=3D"#000000" font-family=3D"sans-serif" fo=
nt-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"209" x=3D"1003.5" y=
=3D"599.6563">+&lt;T&gt; instantiate(Class&lt;?&gt;): T</text><text fill=3D=
"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spaci=
ng" textLength=3D"311" x=3D"1003.5" y=3D"616.1445">+findClassInPackage(Stri=
ng,String): Class&lt;?&gt;</text><text fill=3D"#000000" font-family=3D"sans=
-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"383" x=3D"1=
003.5" y=3D"632.6328">+isImplementingInterface(Class&lt;?&gt;,Class&lt;?&gt=
;): boolean</text></g><!--MD5=3D[0d5dd642c2672001a3e6c91939920e7a]
class es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory--><g id=3D"elem_e=
s.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory"><rect codeLine=3D"59" f=
ill=3D"#F1F1F1" height=3D"75.4648" id=3D"es.ua.dlsi.prog3.p6.reflection.Cla=
ssAnalyzerFactory" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-wid=
th:0.5;" width=3D"183" x=3D"741.5" y=3D"306.5"/><text fill=3D"#000000" font=
-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=
=3D"146" x=3D"760" y=3D"325.0352">ClassAnalyzerFactory</text><line style=3D=
"stroke:#181818;stroke-width:0.5;" x1=3D"742.5" x2=3D"923.5" y1=3D"332.9883=
" y2=3D"332.9883"/><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" lengthAdjust=3D"spacing" textLength=3D"153" x=3D"747.5" y=3D"350=
.5234">-packageName: String</text><line style=3D"stroke:#181818;stroke-widt=
h:0.5;" x1=3D"742.5" x2=3D"923.5" y1=3D"357.4766" y2=3D"357.4766"/><text fi=
ll=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"=
spacing" textLength=3D"171" x=3D"747.5" y=3D"375.0117">+create(): IClassAna=
lyzer</text></g><!--MD5=3D[46c05dfe24a0851e179497c4631d3ff2]
class java.lang.Exception--><g id=3D"elem_java.lang.Exception"><rect fill=
=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.Exception" rx=3D"2.5" ry=3D=
"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"74" x=3D"1626" y=
=3D"765"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14=
" lengthAdjust=3D"spacing" textLength=3D"68" x=3D"1629" y=3D"783.5352">Exce=
ption</text><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1627" x2=
=3D"1699" y1=3D"791.4883" y2=3D"791.4883"/><line style=3D"stroke:#181818;st=
roke-width:0.5;" x1=3D"1627" x2=3D"1699" y1=3D"799.4883" y2=3D"799.4883"/><=
/g><!--MD5=3D[a7832e0c2866edccfd06a1b2054ccd1b]
class java.lang.InstantiationException--><g id=3D"elem_java.lang.Instantiat=
ionException"><rect fill=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.Ins=
tantiationException" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-w=
idth:0.5;" width=3D"160" x=3D"1021" y=3D"765"/><text fill=3D"#000000" font-=
family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=
=3D"154" x=3D"1024" y=3D"783.5352">InstantiationException</text><line style=
=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1022" x2=3D"1180" y1=3D"791.488=
3" y2=3D"791.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"=
1022" x2=3D"1180" y1=3D"799.4883" y2=3D"799.4883"/></g><!--MD5=3D[da448db86=
8cc9ba161b954a3e5aaa833]
class java.lang.IllegalAccessException--><g id=3D"elem_java.lang.IllegalAcc=
essException"><rect fill=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.Ill=
egalAccessException" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-w=
idth:0.5;" width=3D"161" x=3D"1216.5" y=3D"765"/><text fill=3D"#000000" fon=
t-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLengt=
h=3D"155" x=3D"1219.5" y=3D"783.5352">IllegalAccessException</text><line st=
yle=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1217.5" x2=3D"1376.5" y1=3D"=
791.4883" y2=3D"791.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;"=
 x1=3D"1217.5" x2=3D"1376.5" y1=3D"799.4883" y2=3D"799.4883"/></g><!--MD5=
=3D[05b592d3b58a5746c8347b129f478a5c]
class java.lang.ClassNotFoundException--><g id=3D"elem_java.lang.ClassNotFo=
undException"><rect fill=3D"#F1F1F1" height=3D"42.4883" id=3D"java.lang.Cla=
ssNotFoundException" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-w=
idth:0.5;" width=3D"178" x=3D"1413" y=3D"765"/><text fill=3D"#000000" font-=
family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=
=3D"172" x=3D"1416" y=3D"783.5352">ClassNotFoundException</text><line style=
=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1414" x2=3D"1590" y1=3D"791.488=
3" y2=3D"791.4883"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"=
1414" x2=3D"1590" y1=3D"799.4883" y2=3D"799.4883"/></g><!--MD5=3D[f1f765e9a=
a526b576c0ab890c0977ee8]
class es.ua.dlsi.prog3.p6.reflection.impl.ClassAnalyzer--><g id=3D"elem_es.=
ua.dlsi.prog3.p6.reflection.impl.ClassAnalyzer"><rect codeLine=3D"83" fill=
=3D"#00FFFF" height=3D"108.4414" id=3D"es.ua.dlsi.prog3.p6.reflection.impl.=
ClassAnalyzer" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0=
.5;" width=3D"365" x=3D"22.5" y=3D"732"/><text fill=3D"#000000" font-family=
=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"96"=
 x=3D"157" y=3D"750.5352">ClassAnalyzer</text><line style=3D"stroke:#181818=
;stroke-width:0.5;" x1=3D"23.5" x2=3D"386.5" y1=3D"758.4883" y2=3D"758.4883=
"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"23.5" x2=3D"386.5=
" y1=3D"766.4883" y2=3D"766.4883"/><text fill=3D"#000000" font-family=3D"sa=
ns-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"264" x=3D=
"28.5" y=3D"784.0234">+findParentClass(Class&lt;?&gt;): Class&lt;?&gt;</tex=
t><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" length=
Adjust=3D"spacing" textLength=3D"342" x=3D"28.5" y=3D"800.5117">+haveSamePa=
ckage(Class&lt;?&gt;,Class&lt;?&gt;): boolean</text><text fill=3D"#000000" =
font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLe=
ngth=3D"352" x=3D"28.5" y=3D"817">+findAssociatedClasses(Class&lt;?&gt;): S=
et&lt;Class&lt;?&gt;&gt;</text><text fill=3D"#000000" font-family=3D"sans-s=
erif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"353" x=3D"28.=
5" y=3D"833.4883">+findDependantClasses(Class&lt;?&gt;): Set&lt;Class&lt;?&=
gt;&gt;</text></g><!--MD5=3D[2881f462c18aa393415906e15455d007]
class es.ua.dlsi.prog3.p6.reflection.impl.ReflectionUtils--><g id=3D"elem_e=
s.ua.dlsi.prog3.p6.reflection.impl.ReflectionUtils"><rect codeLine=3D"78" f=
ill=3D"#00FFFF" height=3D"91.9531" id=3D"es.ua.dlsi.prog3.p6.reflection.imp=
l.ReflectionUtils" rx=3D"2.5" ry=3D"2.5" style=3D"stroke:#181818;stroke-wid=
th:0.5;" width=3D"542" x=3D"423" y=3D"740"/><text fill=3D"#000000" font-fam=
ily=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"=
98" x=3D"645" y=3D"758.5352">ReflectionUtils</text><line style=3D"stroke:#1=
81818;stroke-width:0.5;" x1=3D"424" x2=3D"964" y1=3D"766.4883" y2=3D"766.48=
83"/><line style=3D"stroke:#181818;stroke-width:0.5;" x1=3D"424" x2=3D"964"=
 y1=3D"774.4883" y2=3D"774.4883"/><text fill=3D"#000000" font-family=3D"san=
s-serif" font-size=3D"14" lengthAdjust=3D"spacing" textLength=3D"209" x=3D"=
429" y=3D"792.0234">+&lt;T&gt; instantiate(Class&lt;?&gt;): T</text><text f=
ill=3D"#000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D=
"spacing" textLength=3D"495" x=3D"429" y=3D"808.5117">+findClassInPackage(p=
ackageName: String,className: String): Class&lt;?&gt;</text><text fill=3D"#=
000000" font-family=3D"sans-serif" font-size=3D"14" lengthAdjust=3D"spacing=
" textLength=3D"530" x=3D"429" y=3D"825">+isImplementingInterface(clazz: Cl=
ass&lt;?&gt;,interfaceClass: Class&lt;?&gt;): boolean</text></g><!--MD5=3D[=
a66baaacd03beda9b727566debd5d9a5]
class ClassNotFoundException--><g id=3D"elem_ClassNotFoundException"><rect =
fill=3D"#F1F1F1" height=3D"42.4883" id=3D"ClassNotFoundException" rx=3D"2.5=
" ry=3D"2.5" style=3D"stroke:#181818;stroke-width:0.5;" width=3D"178" x=3D"=
1605" y=3D"565.5"/><text fill=3D"#000000" font-family=3D"sans-serif" font-s=
ize=3D"14" lengthAdjust=3D"spacing" textLength=3D"172" x=3D"1608" y=3D"584.=
0352">ClassNotFoundException</text><line style=3D"stroke:#181818;stroke-wid=
th:0.5;" x1=3D"1606" x2=3D"1782" y1=3D"591.9883" y2=3D"591.9883"/><line sty=
le=3D"stroke:#181818;stroke-width:0.5;" x1=3D"1606" x2=3D"1782" y1=3D"599.9=
883" y2=3D"599.9883"/></g><!--MD5=3D[a1140ba98d8d05cffe6aa807548b0961]
reverse link es.ua.dlsi.prog3.p6.graph.Graph to es.ua.dlsi.prog3.p6.reflect=
ion.Code2Graph--><g id=3D"link_es.ua.dlsi.prog3.p6.graph.Graph_es.ua.dlsi.p=
rog3.p6.reflection.Code2Graph"><path codeLine=3D"27" d=3D"M1689.84,127.54 C=
1640.69,152.47 1569.65,188.5 1499.67,223.98 " fill=3D"none" id=3D"es.ua.dls=
i.prog3.p6.graph.Graph-backto-es.ua.dlsi.prog3.p6.reflection.Code2Graph" st=
yle=3D"stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"#181818" points=
=3D"1694.53,125.16,1684.6937,125.6575,1690.0694,127.4189,1688.308,132.7946,=
1694.53,125.16" style=3D"stroke:#181818;stroke-width:1.0;"/><text fill=3D"#=
000000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing=
" textLength=3D"194" x=3D"1582" y=3D"190.5684">=C2=ABbind=C2=BB Class&lt;?&=
gt;,ERelationship</text><text fill=3D"#000000" font-family=3D"sans-serif" f=
ont-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"1672.6459" y=
=3D"146.1756">1</text></g><!--MD5=3D[abafa7652a92cb7b32c4ea6d900fc670]
reverse link es.ua.dlsi.prog3.p6.graph.Node to es.ua.dlsi.prog3.p6.reflecti=
on.Code2Graph--><g id=3D"link_es.ua.dlsi.prog3.p6.graph.Node_es.ua.dlsi.pro=
g3.p6.reflection.Code2Graph"><path codeLine=3D"28" d=3D"M1940.14,127.76 C19=
27.19,135.13 1913.26,142.64 1900,149 C1850.51,172.74 1836.99,176.42 1785,19=
4 C1716.05,217.31 1641.19,240.16 1570.32,260.7 " fill=3D"none" id=3D"es.ua.=
dlsi.prog3.p6.graph.Node-backto-es.ua.dlsi.prog3.p6.reflection.Code2Graph" =
style=3D"stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"#181818" point=
s=3D"1944.49,125.27,1934.6934,126.2831,1940.1541,127.7599,1938.6773,133.220=
6,1944.49,125.27" style=3D"stroke:#181818;stroke-width:1.0;"/><text fill=3D=
"#000000" font-family=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spaci=
ng" textLength=3D"260" x=3D"1834" y=3D"190.5684">=C2=ABbind=C2=BB Class&lt;=
?&gt;,Node&lt;Class&lt;?&gt;&gt; {map}</text><text fill=3D"#000000" font-fa=
mily=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D=
"8" x=3D"1925.4536" y=3D"145.8256">n</text><text fill=3D"#000000" font-fami=
ly=3D"sans-serif" font-size=3D"13" lengthAdjust=3D"spacing" textLength=3D"9=
0" x=3D"1578.5306" y=3D"256.1398">visitedClasses</text></g><!--MD5=3D[a110d=
41ef2f46f7ab8a2c09e9326173d]
link es.ua.dlsi.prog3.p6.reflection.Code2Graph to es.ua.dlsi.prog3.p6.refle=
ction.IClassAnalyzer--><g id=3D"link_es.ua.dlsi.prog3.p6.reflection.Code2Gr=
aph_es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer"><path codeLine=3D"29" d=
=3D"M1024.99,464.02 C984.26,484.21 943.43,504.46 907.11,522.47 " fill=3D"no=
ne" id=3D"es.ua.dlsi.prog3.p6.reflection.Code2Graph-to-es.ua.dlsi.prog3.p6.=
reflection.IClassAnalyzer" style=3D"stroke:#181818;stroke-width:1.0;"/><pol=
ygon fill=3D"#181818" points=3D"902.25,524.88,912.0898,524.4579,906.7278,52=
2.6553,908.5304,517.2934,902.25,524.88" style=3D"stroke:#181818;stroke-widt=
h:1.0;"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"13"=
 lengthAdjust=3D"spacing" textLength=3D"8" x=3D"908.6617" y=3D"514.0692">1<=
/text></g><!--MD5=3D[ace0b7958ce4f8852f0301d13e0e40c1]
reverse link es.ua.dlsi.prog3.p6.reflection.ERelationship to es.ua.dlsi.pro=
g3.p6.reflection.Code2Graph--><g id=3D"link_es.ua.dlsi.prog3.p6.reflection.=
ERelationship_es.ua.dlsi.prog3.p6.reflection.Code2Graph"><path codeLine=3D"=
30" d=3D"M1265,152.37 C1265,173.79 1265,198.98 1265,223.9 " fill=3D"none" i=
d=3D"es.ua.dlsi.prog3.p6.reflection.ERelationship-backto-es.ua.dlsi.prog3.p=
6.reflection.Code2Graph" style=3D"stroke:#181818;stroke-width:1.0;stroke-da=
sharray:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"1265,147.29,1261,156=
.29,1265,152.29,1269,156.29,1265,147.29" style=3D"stroke:#181818;stroke-wid=
th:1.0;"/></g><!--MD5=3D[e9d98411ac9849c9f66c75187e85f738]
link es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory to es.ua.dlsi.prog=
3.p6.reflection.IReflectionUtils--><g id=3D"link_es.ua.dlsi.prog3.p6.reflec=
tion.ClassAnalyzerFactory_es.ua.dlsi.prog3.p6.reflection.IReflectionUtils">=
<path codeLine=3D"64" d=3D"M860.78,381.73 C881.41,407.18 911.34,440.57 943,=
464 C978.08,489.95 1019.58,512.66 1058.67,531.19 " fill=3D"none" id=3D"es.u=
a.dlsi.prog3.p6.reflection.ClassAnalyzerFactory-to-es.ua.dlsi.prog3.p6.refl=
ection.IReflectionUtils" style=3D"stroke:#181818;stroke-width:1.0;"/><polyg=
on fill=3D"#181818" points=3D"1063.42,533.43,1056.9855,525.9736,1058.8975,5=
31.2976,1053.5736,533.2096,1063.42,533.43" style=3D"stroke:#181818;stroke-w=
idth:1.0;"/><text fill=3D"#000000" font-family=3D"sans-serif" font-size=3D"=
13" lengthAdjust=3D"spacing" textLength=3D"8" x=3D"1037.2014" y=3D"522.8744=
">1</text></g><!--MD5=3D[6fbcd77fe5e09e0ea737087c4e1e1175]
link es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory to es.ua.dlsi.prog=
3.p6.reflection.IClassAnalyzer--><g id=3D"link_es.ua.dlsi.prog3.p6.reflecti=
on.ClassAnalyzerFactory_es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer"><pat=
h codeLine=3D"65" d=3D"M824.95,381.53 C816.89,418.09 804.31,475.17 794.51,5=
19.65 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFac=
tory-to-es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer" style=3D"stroke:#181=
818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" =
points=3D"793.39,524.74,799.225,516.8057,794.461,519.8561,791.4107,515.0921=
,793.39,524.74" style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[=
13b16ac2ea33c7916b63595dcdd79392]
reverse link java.lang.Exception to es.ua.dlsi.prog3.p6.reflection.Reflecti=
onException--><g id=3D"link_java.lang.Exception_es.ua.dlsi.prog3.p6.reflect=
ion.ReflectionException"><path codeLine=3D"68" d=3D"M1645.74,746.82 C1636.3=
5,728.3 1623.67,706.37 1609,689 C1601.25,679.83 1597.03,679.92 1588,672 C15=
63.81,650.79 1537.19,625.2 1519.43,607.78 " fill=3D"none" id=3D"java.lang.E=
xception-backto-es.ua.dlsi.prog3.p6.reflection.ReflectionException" style=
=3D"stroke:#181818;stroke-width:1.0;"/><polygon fill=3D"none" points=3D"165=
2.06,743.81,1654.42,764.87,1639.44,749.88,1652.06,743.81" style=3D"stroke:#=
181818;stroke-width:1.0;"/></g><!--MD5=3D[fd6e71e13f0010d2ba7f0f74ccc8c4f7]
reverse link es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer to es.ua.dlsi.pr=
og3.p6.reflection.impl.ClassAnalyzer--><g id=3D"link_es.ua.dlsi.prog3.p6.re=
flection.IClassAnalyzer_es.ua.dlsi.prog3.p6.reflection.impl.ClassAnalyzer">=
<path codeLine=3D"69" d=3D"M577.76,634.97 C521.19,650.2 460.12,668.51 405,6=
89 C372.15,701.21 337.38,716.87 306.21,731.99 " fill=3D"none" id=3D"es.ua.d=
lsi.prog3.p6.reflection.IClassAnalyzer-backto-es.ua.dlsi.prog3.p6.reflectio=
n.impl.ClassAnalyzer" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasha=
rray:7.0,7.0;"/><polygon fill=3D"none" points=3D"576.03,628.19,597.16,629.8=
2,579.63,641.72,576.03,628.19" style=3D"stroke:#181818;stroke-width:1.0;"/>=
</g><!--MD5=3D[07f3b91a54b95a85d854f8d32730c577]
reverse link es.ua.dlsi.prog3.p6.reflection.IReflectionUtils to es.ua.dlsi.=
prog3.p6.reflection.impl.ReflectionUtils--><g id=3D"link_es.ua.dlsi.prog3.p=
6.reflection.IReflectionUtils_es.ua.dlsi.prog3.p6.reflection.impl.Reflectio=
nUtils"><path codeLine=3D"70" d=3D"M1044.14,646.97 C968.47,676.8 878.31,712=
.34 808.43,739.89 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.reflection.IRef=
lectionUtils-backto-es.ua.dlsi.prog3.p6.reflection.impl.ReflectionUtils" st=
yle=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon=
 fill=3D"none" points=3D"1041.87,640.34,1063.04,639.52,1047,653.37,1041.87,=
640.34" style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[ac0a0f6c=
7d913da69a398d098d193dce]
link es.ua.dlsi.prog3.p6.reflection.IReflectionUtils to java.lang.Instantia=
tionException--><g id=3D"link_es.ua.dlsi.prog3.p6.reflection.IReflectionUti=
ls_java.lang.InstantiationException"><path codeLine=3D"72" d=3D"M1170.18,63=
9.65 C1151.7,678.49 1127.27,729.8 1112.94,759.92 " fill=3D"none" id=3D"es.u=
a.dlsi.prog3.p6.reflection.IReflectionUtils-to-java.lang.InstantiationExcep=
tion" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/>=
<polygon fill=3D"#181818" points=3D"1110.73,764.57,1118.203,758.1548,1112.8=
741,760.0531,1110.9759,754.7242,1110.73,764.57" style=3D"stroke:#181818;str=
oke-width:1.0;"/></g><!--MD5=3D[fc5cc4ba13b9b6e22ccf9aceee2a6dca]
link es.ua.dlsi.prog3.p6.reflection.IReflectionUtils to java.lang.IllegalAc=
cessException--><g id=3D"link_es.ua.dlsi.prog3.p6.reflection.IReflectionUti=
ls_java.lang.IllegalAccessException"><path codeLine=3D"73" d=3D"M1221.93,63=
9.65 C1241.99,678.49 1268.49,729.8 1284.05,759.92 " fill=3D"none" id=3D"es.=
ua.dlsi.prog3.p6.reflection.IReflectionUtils-to-java.lang.IllegalAccessExce=
ption" style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/=
><polygon fill=3D"#181818" points=3D"1286.45,764.57,1285.8646,754.7386,1284=
.1513,760.1297,1278.7602,758.4164,1286.45,764.57" style=3D"stroke:#181818;s=
troke-width:1.0;"/></g><!--MD5=3D[198eea4d68386ac21950ca7110056643]
link es.ua.dlsi.prog3.p6.reflection.IReflectionUtils to java.lang.ClassNotF=
oundException--><g id=3D"link_es.ua.dlsi.prog3.p6.reflection.IReflectionUti=
ls_java.lang.ClassNotFoundException"><path codeLine=3D"74" d=3D"M1310.34,63=
9.56 C1338.85,654.17 1368.74,671.01 1395,689 C1426.4,710.51 1458.37,740.46 =
1479.07,761.16 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.reflection.IReflec=
tionUtils-to-java.lang.ClassNotFoundException" style=3D"stroke:#181818;stro=
ke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" points=
=3D"1482.81,764.92,1479.3117,755.7134,1479.2888,761.3702,1473.632,761.3473,=
1482.81,764.92" style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[=
70788dbd658220f9adb863c3faea1e85]
link es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory to es.ua.dlsi.prog=
3.p6.reflection.ReflectionException--><g id=3D"link_es.ua.dlsi.prog3.p6.ref=
lection.ClassAnalyzerFactory_es.ua.dlsi.prog3.p6.reflection.ReflectionExcep=
tion"><path codeLine=3D"75" d=3D"M856.27,381.58 C875.87,409.08 906.51,445.1=
3 943,464 C1128.93,560.15 1214.36,450.59 1410,525 C1432.54,533.57 1454.97,5=
48.88 1471.68,561.95 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.reflection.C=
lassAnalyzerFactory-to-es.ua.dlsi.prog3.p6.reflection.ReflectionException" =
style=3D"stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polyg=
on fill=3D"#181818" points=3D"1475.8,565.22,1471.2476,556.4864,1471.8873,56=
2.107,1466.2667,562.7467,1475.8,565.22" style=3D"stroke:#181818;stroke-widt=
h:1.0;"/></g><!--MD5=3D[6d42796a5537843163de10f6db9e5535]
link es.ua.dlsi.prog3.p6.reflection.Code2Graph to ClassNotFoundException-->=
<g id=3D"link_es.ua.dlsi.prog3.p6.reflection.Code2Graph_ClassNotFoundExcept=
ion"><path codeLine=3D"76" d=3D"M1477.3,464.02 C1544.65,501.77 1612.29,539.=
7 1653.66,562.88 " fill=3D"none" id=3D"es.ua.dlsi.prog3.p6.reflection.Code2=
Graph-to-ClassNotFoundException" style=3D"stroke:#181818;stroke-width:1.0;s=
troke-dasharray:7.0,7.0;"/><polygon fill=3D"#181818" points=3D"1658.07,565.=
36,1652.1758,557.4696,1653.7087,562.9148,1648.2635,564.4477,1658.07,565.36"=
 style=3D"stroke:#181818;stroke-width:1.0;"/></g><!--MD5=3D[de7c6d29f52bf0c=
d5939b68e7b8046de]
@startuml p6_reflection
skinparam classAttributeIconSize 0
hide circle
'skinparam genericDisplay old

!function $paramType($T)=20
!$nl =3D "\n"
!$space =3D "  "
!return $nl + $space + $T + $space + $nl
!endfunction=20

class es.ua.dlsi.prog3.p6.graph.Graph <$paramType("NodeLabelType, EdgeLabel=
Type")> {

}

class es.ua.dlsi.prog3.p6.graph.Node <$paramType(NodeLabelType)> {

}

class es.ua.dlsi.prog3.p6.reflection.ReflectionException {
}
enum es.ua.dlsi.prog3.p6.reflection.ERelationship <<enum>> {
+  inheritance
+  association
+  parameterDependency
}

es.ua.dlsi.prog3.p6.reflection.Code2Graph -u-> "1" es.ua.dlsi.prog3.p6.grap=
h.Graph : <<bind>> Class<?>,ERelationship
es.ua.dlsi.prog3.p6.reflection.Code2Graph "visitedClasses" -u-> "n" es.ua.d=
lsi.prog3.p6.graph.Node : <<bind>> Class<?>,Node<Class<?>> {map}
es.ua.dlsi.prog3.p6.reflection.Code2Graph - -> "1" es.ua.dlsi.prog3.p6.refl=
ection.IClassAnalyzer
es.ua.dlsi.prog3.p6.reflection.ERelationship <.. es.ua.dlsi.prog3.p6.reflec=
tion.Code2Graph
class es.ua.dlsi.prog3.p6.reflection.Code2Graph {
+ Code2Graph(Class<?> start)
+ Code2Graph(String packageName, String className)
+ createGraph(): Graph<Class<?>,ERelationship>=20
+ createGraph(reflectionClassesPackageName: String): Graph<Class<?>,ERelati=
onship>=20
- browseClass(Class<?>): Node<Class<?>>=20
- addRelatedClass(Node<Class<?>>,Class<?>,ERelationship): void=20
- findParentClass(Class<?>): Class<?>
- isSamePackageAsStart(Class<?>): boolean
- filterClassesInPackage(Set<Class<?>>): Set<Class<?>>
- findAssociatedClasses(Class<?>): Set<Class<?>>
- findDependantClasses(Class<?>): Set<Class<?>>
+ {static} <<final> main(args: String[]): void
}

interface es.ua.dlsi.prog3.p6.reflection.IReflectionUtils <<interface>> {
+ <T> instantiate(Class<?>): T
+ findClassInPackage(String,String): Class<?>=20
+ isImplementingInterface(Class<?>,Class<?>): boolean=20
}

interface es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer  <<interface>> {
+ findParentClass(Class<?>): Class<?>
+ haveSamePackage(Class<?>,Class<?>): boolean
+ findAssociatedClasses(Class<?>): Set<Class<?>>
+ findDependantClasses(Class<?>): Set<Class<?>>
}

class es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory {
- packageName: String=20
+ create(): IClassAnalyzer
}

es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory - -> "1" es.ua.dlsi.pro=
g3.p6.reflection.IReflectionUtils
es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory ..> es.ua.dlsi.prog3.p6=
.reflection.IClassAnalyzer


java.lang.Exception <|- - es.ua.dlsi.prog3.p6.reflection.ReflectionExceptio=
n
es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer <|.. es.ua.dlsi.prog3.p6.refl=
ection.impl.ClassAnalyzer
es.ua.dlsi.prog3.p6.reflection.IReflectionUtils <|.. es.ua.dlsi.prog3.p6.re=
flection.impl.ReflectionUtils

es.ua.dlsi.prog3.p6.reflection.IReflectionUtils ..> java.lang.Instantiation=
Exception
es.ua.dlsi.prog3.p6.reflection.IReflectionUtils ..> java.lang.IllegalAccess=
Exception
es.ua.dlsi.prog3.p6.reflection.IReflectionUtils ..> java.lang.ClassNotFound=
Exception
es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory ..> es.ua.dlsi.prog3.p6=
.reflection.ReflectionException
es.ua.dlsi.prog3.p6.reflection.Code2Graph ..> ClassNotFoundException

class es.ua.dlsi.prog3.p6.reflection.impl.ReflectionUtils #cyan {
+ <T> instantiate(Class<?>): T
+ findClassInPackage(packageName: String,className: String): Class<?>=20
+ isImplementingInterface(clazz: Class<?>,interfaceClass: Class<?>): boolea=
n=20
}
class es.ua.dlsi.prog3.p6.reflection.impl.ClassAnalyzer  #cyan {
+ findParentClass(Class<?>): Class<?>
+ haveSamePackage(Class<?>,Class<?>): boolean=20
+ findAssociatedClasses(Class<?>): Set<Class<?>>=20
+ findDependantClasses(Class<?>): Set<Class<?>>=20
}

@enduml

@startuml p6_reflection
skinparam classAttributeIconSize 0
hide circle


class es.ua.dlsi.prog3.p6.graph.Graph <\n  NodeLabelType, EdgeLabelType  \n=
> {

}

class es.ua.dlsi.prog3.p6.graph.Node <\n  NodeLabelType  \n> {

}

class es.ua.dlsi.prog3.p6.reflection.ReflectionException {
}
enum es.ua.dlsi.prog3.p6.reflection.ERelationship <<enum>> {
+  inheritance
+  association
+  parameterDependency
}

es.ua.dlsi.prog3.p6.reflection.Code2Graph -u-> "1" es.ua.dlsi.prog3.p6.grap=
h.Graph : <<bind>> Class<?>,ERelationship
es.ua.dlsi.prog3.p6.reflection.Code2Graph "visitedClasses" -u-> "n" es.ua.d=
lsi.prog3.p6.graph.Node : <<bind>> Class<?>,Node<Class<?>> {map}
es.ua.dlsi.prog3.p6.reflection.Code2Graph - -> "1" es.ua.dlsi.prog3.p6.refl=
ection.IClassAnalyzer
es.ua.dlsi.prog3.p6.reflection.ERelationship <.. es.ua.dlsi.prog3.p6.reflec=
tion.Code2Graph
class es.ua.dlsi.prog3.p6.reflection.Code2Graph {
+ Code2Graph(Class<?> start)
+ Code2Graph(String packageName, String className)
+ createGraph(): Graph<Class<?>,ERelationship>=20
+ createGraph(reflectionClassesPackageName: String): Graph<Class<?>,ERelati=
onship>=20
- browseClass(Class<?>): Node<Class<?>>=20
- addRelatedClass(Node<Class<?>>,Class<?>,ERelationship): void=20
- findParentClass(Class<?>): Class<?>
- isSamePackageAsStart(Class<?>): boolean
- filterClassesInPackage(Set<Class<?>>): Set<Class<?>>
- findAssociatedClasses(Class<?>): Set<Class<?>>
- findDependantClasses(Class<?>): Set<Class<?>>
+ {static} <<final> main(args: String[]): void
}

interface es.ua.dlsi.prog3.p6.reflection.IReflectionUtils <<interface>> {
+ <T> instantiate(Class<?>): T
+ findClassInPackage(String,String): Class<?>=20
+ isImplementingInterface(Class<?>,Class<?>): boolean=20
}

interface es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer  <<interface>> {
+ findParentClass(Class<?>): Class<?>
+ haveSamePackage(Class<?>,Class<?>): boolean
+ findAssociatedClasses(Class<?>): Set<Class<?>>
+ findDependantClasses(Class<?>): Set<Class<?>>
}

class es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory {
- packageName: String=20
+ create(): IClassAnalyzer
}

es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory - -> "1" es.ua.dlsi.pro=
g3.p6.reflection.IReflectionUtils
es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory ..> es.ua.dlsi.prog3.p6=
.reflection.IClassAnalyzer


java.lang.Exception <|- - es.ua.dlsi.prog3.p6.reflection.ReflectionExceptio=
n
es.ua.dlsi.prog3.p6.reflection.IClassAnalyzer <|.. es.ua.dlsi.prog3.p6.refl=
ection.impl.ClassAnalyzer
es.ua.dlsi.prog3.p6.reflection.IReflectionUtils <|.. es.ua.dlsi.prog3.p6.re=
flection.impl.ReflectionUtils

es.ua.dlsi.prog3.p6.reflection.IReflectionUtils ..> java.lang.Instantiation=
Exception
es.ua.dlsi.prog3.p6.reflection.IReflectionUtils ..> java.lang.IllegalAccess=
Exception
es.ua.dlsi.prog3.p6.reflection.IReflectionUtils ..> java.lang.ClassNotFound=
Exception
es.ua.dlsi.prog3.p6.reflection.ClassAnalyzerFactory ..> es.ua.dlsi.prog3.p6=
.reflection.ReflectionException
es.ua.dlsi.prog3.p6.reflection.Code2Graph ..> ClassNotFoundException

class es.ua.dlsi.prog3.p6.reflection.impl.ReflectionUtils #cyan {
+ <T> instantiate(Class<?>): T
+ findClassInPackage(packageName: String,className: String): Class<?>=20
+ isImplementingInterface(clazz: Class<?>,interfaceClass: Class<?>): boolea=
n=20
}
class es.ua.dlsi.prog3.p6.reflection.impl.ClassAnalyzer  #cyan {
+ findParentClass(Class<?>): Class<?>
+ haveSamePackage(Class<?>,Class<?>): boolean=20
+ findAssociatedClasses(Class<?>): Set<Class<?>>=20
+ findDependantClasses(Class<?>): Set<Class<?>>=20
}

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: es
Country: ES
--></g></svg>
------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://i.creativecommons.org/l/by-sa/3.0/80x15.png

iVBORw0KGgoAAAANSUhEUgAAAFAAAAAPCAMAAABEF7i9AAAABGdBTUEAANbY1E9YMgAAAJZQTFRF
AAAA////7u7u3d3dys7KzMzMyMzIxsrGxcbFur+6u7u7s7iyq7GqqqqqmZmZlJmTj5CPiIiIh4eH
hoaGgICAfYJ9d3d3cnZxZ2tnZmZmW15bVVVVS0xLREREQ0NDQkJCQUJBOz07OTs5MzMzMTMxLjAu
JygnJCUjIiIiISEhICAgGRkZERERDxAPDg4ODQ4NDQ0NDQ0M9T0xRwAAAMtJREFUeNqtlNcOgjAU
hs9fxXkU66iz7oGKgO//cgYoTbiCSL/0ovPLny5yD5ySCjllRRI5OvKZ2x/6Cyv0I4kCfWfuzxsK
T09YPNowd3bNhLGEF5AWmgIP+srcnpj9NZMow3SgUrigAYItlArFeAQVM/d72bgp1mc7K4RL8gRJ
YHsBABUxD7s2EBFsNQ8I1Eyo16FQY6iklLAcCLUSciIxCmktNF1a2N9Ke2jW23Yt4fnl+JT97xQF
h4eDe8hLmiHn+G76Upzi/q/5AZIODZ8EIJo/AAAAAElFTkSuQmCC

------MultipartBoundary--2PHgqpE9kvU4Jck2iXpakA8TfXV0V4pNODaSkiuzVz------
